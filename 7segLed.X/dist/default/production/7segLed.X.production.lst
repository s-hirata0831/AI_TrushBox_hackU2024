

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jul 18 05:00:43 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1769
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F1769 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0110                     	;# 
   130  0111                     	;# 
   131  0112                     	;# 
   132  0113                     	;# 
   133  0114                     	;# 
   134  0115                     	;# 
   135  0116                     	;# 
   136  0117                     	;# 
   137  0118                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011B                     	;# 
   141  011C                     	;# 
   142  011D                     	;# 
   143  011E                     	;# 
   144  011F                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  018E                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0194                     	;# 
   154  0195                     	;# 
   155  0196                     	;# 
   156  0197                     	;# 
   157  0199                     	;# 
   158  0199                     	;# 
   159  0199                     	;# 
   160  019A                     	;# 
   161  019A                     	;# 
   162  019A                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019C                     	;# 
   171  019D                     	;# 
   172  019D                     	;# 
   173  019D                     	;# 
   174  019E                     	;# 
   175  019E                     	;# 
   176  019E                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  020C                     	;# 
   183  020D                     	;# 
   184  020E                     	;# 
   185  0211                     	;# 
   186  0211                     	;# 
   187  0212                     	;# 
   188  0212                     	;# 
   189  0213                     	;# 
   190  0213                     	;# 
   191  0214                     	;# 
   192  0214                     	;# 
   193  0215                     	;# 
   194  0215                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0216                     	;# 
   198  0216                     	;# 
   199  0217                     	;# 
   200  0217                     	;# 
   201  021D                     	;# 
   202  021E                     	;# 
   203  021F                     	;# 
   204  028C                     	;# 
   205  028D                     	;# 
   206  028E                     	;# 
   207  0291                     	;# 
   208  0291                     	;# 
   209  0292                     	;# 
   210  0293                     	;# 
   211  0294                     	;# 
   212  0298                     	;# 
   213  0298                     	;# 
   214  0299                     	;# 
   215  029A                     	;# 
   216  029B                     	;# 
   217  029E                     	;# 
   218  030C                     	;# 
   219  030D                     	;# 
   220  030E                     	;# 
   221  031B                     	;# 
   222  031C                     	;# 
   223  031D                     	;# 
   224  031E                     	;# 
   225  031F                     	;# 
   226  038C                     	;# 
   227  038D                     	;# 
   228  038E                     	;# 
   229  0391                     	;# 
   230  0392                     	;# 
   231  0393                     	;# 
   232  0394                     	;# 
   233  0395                     	;# 
   234  0396                     	;# 
   235  0397                     	;# 
   236  0398                     	;# 
   237  0399                     	;# 
   238  039B                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  040E                     	;# 
   244  0413                     	;# 
   245  0413                     	;# 
   246  0414                     	;# 
   247  0414                     	;# 
   248  0415                     	;# 
   249  0416                     	;# 
   250  0417                     	;# 
   251  0418                     	;# 
   252  041A                     	;# 
   253  041A                     	;# 
   254  041B                     	;# 
   255  041B                     	;# 
   256  041C                     	;# 
   257  041D                     	;# 
   258  041E                     	;# 
   259  041F                     	;# 
   260  0493                     	;# 
   261  0493                     	;# 
   262  0494                     	;# 
   263  0495                     	;# 
   264  0496                     	;# 
   265  049A                     	;# 
   266  049A                     	;# 
   267  049B                     	;# 
   268  049C                     	;# 
   269  049D                     	;# 
   270  050F                     	;# 
   271  0510                     	;# 
   272  0511                     	;# 
   273  0512                     	;# 
   274  0513                     	;# 
   275  0514                     	;# 
   276  0515                     	;# 
   277  0516                     	;# 
   278  0590                     	;# 
   279  0591                     	;# 
   280  0592                     	;# 
   281  0592                     	;# 
   282  0592                     	;# 
   283  0593                     	;# 
   284  0593                     	;# 
   285  0594                     	;# 
   286  0595                     	;# 
   287  0595                     	;# 
   288  0595                     	;# 
   289  0596                     	;# 
   290  0596                     	;# 
   291  0597                     	;# 
   292  0598                     	;# 
   293  0598                     	;# 
   294  0599                     	;# 
   295  059A                     	;# 
   296  059A                     	;# 
   297  0617                     	;# 
   298  0617                     	;# 
   299  0618                     	;# 
   300  0619                     	;# 
   301  061A                     	;# 
   302  061A                     	;# 
   303  061B                     	;# 
   304  061C                     	;# 
   305  068D                     	;# 
   306  068E                     	;# 
   307  068F                     	;# 
   308  0690                     	;# 
   309  0691                     	;# 
   310  0692                     	;# 
   311  0693                     	;# 
   312  0694                     	;# 
   313  0695                     	;# 
   314  0696                     	;# 
   315  0697                     	;# 
   316  0698                     	;# 
   317  0699                     	;# 
   318  069A                     	;# 
   319  069B                     	;# 
   320  069C                     	;# 
   321  069D                     	;# 
   322  069E                     	;# 
   323  069F                     	;# 
   324  070D                     	;# 
   325  070E                     	;# 
   326  070F                     	;# 
   327  0710                     	;# 
   328  0711                     	;# 
   329  0712                     	;# 
   330  0713                     	;# 
   331  0714                     	;# 
   332  0715                     	;# 
   333  0716                     	;# 
   334  0717                     	;# 
   335  0718                     	;# 
   336  0719                     	;# 
   337  071A                     	;# 
   338  071B                     	;# 
   339  071C                     	;# 
   340  071D                     	;# 
   341  071E                     	;# 
   342  071F                     	;# 
   343  0794                     	;# 
   344  0795                     	;# 
   345  0796                     	;# 
   346  0797                     	;# 
   347  0798                     	;# 
   348  0799                     	;# 
   349  079A                     	;# 
   350  079B                     	;# 
   351  079C                     	;# 
   352  079D                     	;# 
   353  079E                     	;# 
   354  079F                     	;# 
   355  0D8E                     	;# 
   356  0D8F                     	;# 
   357  0D90                     	;# 
   358  0D91                     	;# 
   359  0D91                     	;# 
   360  0D92                     	;# 
   361  0D93                     	;# 
   362  0D93                     	;# 
   363  0D94                     	;# 
   364  0D95                     	;# 
   365  0D95                     	;# 
   366  0D96                     	;# 
   367  0D97                     	;# 
   368  0D97                     	;# 
   369  0D98                     	;# 
   370  0D99                     	;# 
   371  0D99                     	;# 
   372  0D9A                     	;# 
   373  0D9B                     	;# 
   374  0D9C                     	;# 
   375  0D9C                     	;# 
   376  0D9D                     	;# 
   377  0D9D                     	;# 
   378  0D9E                     	;# 
   379  0D9F                     	;# 
   380  0DA0                     	;# 
   381  0DA1                     	;# 
   382  0DA1                     	;# 
   383  0DA2                     	;# 
   384  0DA3                     	;# 
   385  0DA3                     	;# 
   386  0DA4                     	;# 
   387  0DA5                     	;# 
   388  0DA5                     	;# 
   389  0DA6                     	;# 
   390  0DA7                     	;# 
   391  0DA7                     	;# 
   392  0DA8                     	;# 
   393  0DA9                     	;# 
   394  0DA9                     	;# 
   395  0DAA                     	;# 
   396  0DAB                     	;# 
   397  0DAC                     	;# 
   398  0DAC                     	;# 
   399  0DAD                     	;# 
   400  0DAD                     	;# 
   401  0DAE                     	;# 
   402  0DAF                     	;# 
   403  0DB0                     	;# 
   404  0E0F                     	;# 
   405  0E10                     	;# 
   406  0E11                     	;# 
   407  0E12                     	;# 
   408  0E13                     	;# 
   409  0E14                     	;# 
   410  0E15                     	;# 
   411  0E16                     	;# 
   412  0E17                     	;# 
   413  0E19                     	;# 
   414  0E19                     	;# 
   415  0E19                     	;# 
   416  0E1A                     	;# 
   417  0E1B                     	;# 
   418  0E1C                     	;# 
   419  0E1C                     	;# 
   420  0E1C                     	;# 
   421  0E1D                     	;# 
   422  0E1E                     	;# 
   423  0E1F                     	;# 
   424  0E1F                     	;# 
   425  0E1F                     	;# 
   426  0E20                     	;# 
   427  0E21                     	;# 
   428  0E22                     	;# 
   429  0E24                     	;# 
   430  0E25                     	;# 
   431  0E28                     	;# 
   432  0E29                     	;# 
   433  0E2A                     	;# 
   434  0E2B                     	;# 
   435  0E2C                     	;# 
   436  0E2D                     	;# 
   437  0E2E                     	;# 
   438  0E2F                     	;# 
   439  0E30                     	;# 
   440  0E31                     	;# 
   441  0E32                     	;# 
   442  0E33                     	;# 
   443  0E34                     	;# 
   444  0E35                     	;# 
   445  0E90                     	;# 
   446  0E91                     	;# 
   447  0E92                     	;# 
   448  0E94                     	;# 
   449  0E95                     	;# 
   450  0E9C                     	;# 
   451  0E9D                     	;# 
   452  0E9E                     	;# 
   453  0E9F                     	;# 
   454  0EA0                     	;# 
   455  0EA1                     	;# 
   456  0EA2                     	;# 
   457  0EA3                     	;# 
   458  0EA4                     	;# 
   459  0EA5                     	;# 
   460  0EA6                     	;# 
   461  0EA7                     	;# 
   462  0F0F                     	;# 
   463  0F10                     	;# 
   464  0F11                     	;# 
   465  0F12                     	;# 
   466  0F13                     	;# 
   467  0F14                     	;# 
   468  0F15                     	;# 
   469  0F16                     	;# 
   470  0F17                     	;# 
   471  0F18                     	;# 
   472  0F19                     	;# 
   473  0F1A                     	;# 
   474  0F1B                     	;# 
   475  0F1C                     	;# 
   476  0F1D                     	;# 
   477  0F1E                     	;# 
   478  0F1F                     	;# 
   479  0F20                     	;# 
   480  0F21                     	;# 
   481  0F22                     	;# 
   482  0F23                     	;# 
   483  0F24                     	;# 
   484  0F25                     	;# 
   485  0F26                     	;# 
   486  0F27                     	;# 
   487  0F28                     	;# 
   488  0F29                     	;# 
   489  0F2A                     	;# 
   490  0F2B                     	;# 
   491  0F2C                     	;# 
   492  0F2D                     	;# 
   493  0FE4                     	;# 
   494  0FE5                     	;# 
   495  0FE6                     	;# 
   496  0FE7                     	;# 
   497  0FE8                     	;# 
   498  0FE9                     	;# 
   499  0FEA                     	;# 
   500  0FEB                     	;# 
   501  0FED                     	;# 
   502  0FEE                     	;# 
   503  0FEF                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  0008                     	;# 
   513  0009                     	;# 
   514  000A                     	;# 
   515  000B                     	;# 
   516  000C                     	;# 
   517  000D                     	;# 
   518  000E                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0016                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001A                     	;# 
   531  001B                     	;# 
   532  001B                     	;# 
   533  001C                     	;# 
   534  001D                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  008C                     	;# 
   538  008D                     	;# 
   539  008E                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0094                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0097                     	;# 
   547  0098                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  009F                     	;# 
   556  010C                     	;# 
   557  010D                     	;# 
   558  010E                     	;# 
   559  010F                     	;# 
   560  0110                     	;# 
   561  0111                     	;# 
   562  0112                     	;# 
   563  0113                     	;# 
   564  0114                     	;# 
   565  0115                     	;# 
   566  0116                     	;# 
   567  0117                     	;# 
   568  0118                     	;# 
   569  0119                     	;# 
   570  011A                     	;# 
   571  011B                     	;# 
   572  011C                     	;# 
   573  011D                     	;# 
   574  011E                     	;# 
   575  011F                     	;# 
   576  018C                     	;# 
   577  018D                     	;# 
   578  018E                     	;# 
   579  0191                     	;# 
   580  0191                     	;# 
   581  0192                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0194                     	;# 
   585  0195                     	;# 
   586  0196                     	;# 
   587  0197                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  020E                     	;# 
   616  0211                     	;# 
   617  0211                     	;# 
   618  0212                     	;# 
   619  0212                     	;# 
   620  0213                     	;# 
   621  0213                     	;# 
   622  0214                     	;# 
   623  0214                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  021D                     	;# 
   633  021E                     	;# 
   634  021F                     	;# 
   635  028C                     	;# 
   636  028D                     	;# 
   637  028E                     	;# 
   638  0291                     	;# 
   639  0291                     	;# 
   640  0292                     	;# 
   641  0293                     	;# 
   642  0294                     	;# 
   643  0298                     	;# 
   644  0298                     	;# 
   645  0299                     	;# 
   646  029A                     	;# 
   647  029B                     	;# 
   648  029E                     	;# 
   649  030C                     	;# 
   650  030D                     	;# 
   651  030E                     	;# 
   652  031B                     	;# 
   653  031C                     	;# 
   654  031D                     	;# 
   655  031E                     	;# 
   656  031F                     	;# 
   657  038C                     	;# 
   658  038D                     	;# 
   659  038E                     	;# 
   660  0391                     	;# 
   661  0392                     	;# 
   662  0393                     	;# 
   663  0394                     	;# 
   664  0395                     	;# 
   665  0396                     	;# 
   666  0397                     	;# 
   667  0398                     	;# 
   668  0399                     	;# 
   669  039B                     	;# 
   670  039C                     	;# 
   671  039D                     	;# 
   672  039E                     	;# 
   673  039F                     	;# 
   674  040E                     	;# 
   675  0413                     	;# 
   676  0413                     	;# 
   677  0414                     	;# 
   678  0414                     	;# 
   679  0415                     	;# 
   680  0416                     	;# 
   681  0417                     	;# 
   682  0418                     	;# 
   683  041A                     	;# 
   684  041A                     	;# 
   685  041B                     	;# 
   686  041B                     	;# 
   687  041C                     	;# 
   688  041D                     	;# 
   689  041E                     	;# 
   690  041F                     	;# 
   691  0493                     	;# 
   692  0493                     	;# 
   693  0494                     	;# 
   694  0495                     	;# 
   695  0496                     	;# 
   696  049A                     	;# 
   697  049A                     	;# 
   698  049B                     	;# 
   699  049C                     	;# 
   700  049D                     	;# 
   701  050F                     	;# 
   702  0510                     	;# 
   703  0511                     	;# 
   704  0512                     	;# 
   705  0513                     	;# 
   706  0514                     	;# 
   707  0515                     	;# 
   708  0516                     	;# 
   709  0590                     	;# 
   710  0591                     	;# 
   711  0592                     	;# 
   712  0592                     	;# 
   713  0592                     	;# 
   714  0593                     	;# 
   715  0593                     	;# 
   716  0594                     	;# 
   717  0595                     	;# 
   718  0595                     	;# 
   719  0595                     	;# 
   720  0596                     	;# 
   721  0596                     	;# 
   722  0597                     	;# 
   723  0598                     	;# 
   724  0598                     	;# 
   725  0599                     	;# 
   726  059A                     	;# 
   727  059A                     	;# 
   728  0617                     	;# 
   729  0617                     	;# 
   730  0618                     	;# 
   731  0619                     	;# 
   732  061A                     	;# 
   733  061A                     	;# 
   734  061B                     	;# 
   735  061C                     	;# 
   736  068D                     	;# 
   737  068E                     	;# 
   738  068F                     	;# 
   739  0690                     	;# 
   740  0691                     	;# 
   741  0692                     	;# 
   742  0693                     	;# 
   743  0694                     	;# 
   744  0695                     	;# 
   745  0696                     	;# 
   746  0697                     	;# 
   747  0698                     	;# 
   748  0699                     	;# 
   749  069A                     	;# 
   750  069B                     	;# 
   751  069C                     	;# 
   752  069D                     	;# 
   753  069E                     	;# 
   754  069F                     	;# 
   755  070D                     	;# 
   756  070E                     	;# 
   757  070F                     	;# 
   758  0710                     	;# 
   759  0711                     	;# 
   760  0712                     	;# 
   761  0713                     	;# 
   762  0714                     	;# 
   763  0715                     	;# 
   764  0716                     	;# 
   765  0717                     	;# 
   766  0718                     	;# 
   767  0719                     	;# 
   768  071A                     	;# 
   769  071B                     	;# 
   770  071C                     	;# 
   771  071D                     	;# 
   772  071E                     	;# 
   773  071F                     	;# 
   774  0794                     	;# 
   775  0795                     	;# 
   776  0796                     	;# 
   777  0797                     	;# 
   778  0798                     	;# 
   779  0799                     	;# 
   780  079A                     	;# 
   781  079B                     	;# 
   782  079C                     	;# 
   783  079D                     	;# 
   784  079E                     	;# 
   785  079F                     	;# 
   786  0D8E                     	;# 
   787  0D8F                     	;# 
   788  0D90                     	;# 
   789  0D91                     	;# 
   790  0D91                     	;# 
   791  0D92                     	;# 
   792  0D93                     	;# 
   793  0D93                     	;# 
   794  0D94                     	;# 
   795  0D95                     	;# 
   796  0D95                     	;# 
   797  0D96                     	;# 
   798  0D97                     	;# 
   799  0D97                     	;# 
   800  0D98                     	;# 
   801  0D99                     	;# 
   802  0D99                     	;# 
   803  0D9A                     	;# 
   804  0D9B                     	;# 
   805  0D9C                     	;# 
   806  0D9C                     	;# 
   807  0D9D                     	;# 
   808  0D9D                     	;# 
   809  0D9E                     	;# 
   810  0D9F                     	;# 
   811  0DA0                     	;# 
   812  0DA1                     	;# 
   813  0DA1                     	;# 
   814  0DA2                     	;# 
   815  0DA3                     	;# 
   816  0DA3                     	;# 
   817  0DA4                     	;# 
   818  0DA5                     	;# 
   819  0DA5                     	;# 
   820  0DA6                     	;# 
   821  0DA7                     	;# 
   822  0DA7                     	;# 
   823  0DA8                     	;# 
   824  0DA9                     	;# 
   825  0DA9                     	;# 
   826  0DAA                     	;# 
   827  0DAB                     	;# 
   828  0DAC                     	;# 
   829  0DAC                     	;# 
   830  0DAD                     	;# 
   831  0DAD                     	;# 
   832  0DAE                     	;# 
   833  0DAF                     	;# 
   834  0DB0                     	;# 
   835  0E0F                     	;# 
   836  0E10                     	;# 
   837  0E11                     	;# 
   838  0E12                     	;# 
   839  0E13                     	;# 
   840  0E14                     	;# 
   841  0E15                     	;# 
   842  0E16                     	;# 
   843  0E17                     	;# 
   844  0E19                     	;# 
   845  0E19                     	;# 
   846  0E19                     	;# 
   847  0E1A                     	;# 
   848  0E1B                     	;# 
   849  0E1C                     	;# 
   850  0E1C                     	;# 
   851  0E1C                     	;# 
   852  0E1D                     	;# 
   853  0E1E                     	;# 
   854  0E1F                     	;# 
   855  0E1F                     	;# 
   856  0E1F                     	;# 
   857  0E20                     	;# 
   858  0E21                     	;# 
   859  0E22                     	;# 
   860  0E24                     	;# 
   861  0E25                     	;# 
   862  0E28                     	;# 
   863  0E29                     	;# 
   864  0E2A                     	;# 
   865  0E2B                     	;# 
   866  0E2C                     	;# 
   867  0E2D                     	;# 
   868  0E2E                     	;# 
   869  0E2F                     	;# 
   870  0E30                     	;# 
   871  0E31                     	;# 
   872  0E32                     	;# 
   873  0E33                     	;# 
   874  0E34                     	;# 
   875  0E35                     	;# 
   876  0E90                     	;# 
   877  0E91                     	;# 
   878  0E92                     	;# 
   879  0E94                     	;# 
   880  0E95                     	;# 
   881  0E9C                     	;# 
   882  0E9D                     	;# 
   883  0E9E                     	;# 
   884  0E9F                     	;# 
   885  0EA0                     	;# 
   886  0EA1                     	;# 
   887  0EA2                     	;# 
   888  0EA3                     	;# 
   889  0EA4                     	;# 
   890  0EA5                     	;# 
   891  0EA6                     	;# 
   892  0EA7                     	;# 
   893  0F0F                     	;# 
   894  0F10                     	;# 
   895  0F11                     	;# 
   896  0F12                     	;# 
   897  0F13                     	;# 
   898  0F14                     	;# 
   899  0F15                     	;# 
   900  0F16                     	;# 
   901  0F17                     	;# 
   902  0F18                     	;# 
   903  0F19                     	;# 
   904  0F1A                     	;# 
   905  0F1B                     	;# 
   906  0F1C                     	;# 
   907  0F1D                     	;# 
   908  0F1E                     	;# 
   909  0F1F                     	;# 
   910  0F20                     	;# 
   911  0F21                     	;# 
   912  0F22                     	;# 
   913  0F23                     	;# 
   914  0F24                     	;# 
   915  0F25                     	;# 
   916  0F26                     	;# 
   917  0F27                     	;# 
   918  0F28                     	;# 
   919  0F29                     	;# 
   920  0F2A                     	;# 
   921  0F2B                     	;# 
   922  0F2C                     	;# 
   923  0F2D                     	;# 
   924  0FE4                     	;# 
   925  0FE5                     	;# 
   926  0FE6                     	;# 
   927  0FE7                     	;# 
   928  0FE8                     	;# 
   929  0FE9                     	;# 
   930  0FEA                     	;# 
   931  0FEB                     	;# 
   932  0FED                     	;# 
   933  0FEE                     	;# 
   934  0FEF                     	;# 
   935  0000                     	;# 
   936  0001                     	;# 
   937  0002                     	;# 
   938  0003                     	;# 
   939  0004                     	;# 
   940  0005                     	;# 
   941  0006                     	;# 
   942  0007                     	;# 
   943  0008                     	;# 
   944  0009                     	;# 
   945  000A                     	;# 
   946  000B                     	;# 
   947  000C                     	;# 
   948  000D                     	;# 
   949  000E                     	;# 
   950  0011                     	;# 
   951  0012                     	;# 
   952  0013                     	;# 
   953  0014                     	;# 
   954  0015                     	;# 
   955  0016                     	;# 
   956  0016                     	;# 
   957  0017                     	;# 
   958  0018                     	;# 
   959  0019                     	;# 
   960  001A                     	;# 
   961  001A                     	;# 
   962  001B                     	;# 
   963  001B                     	;# 
   964  001C                     	;# 
   965  001D                     	;# 
   966  001E                     	;# 
   967  001F                     	;# 
   968  008C                     	;# 
   969  008D                     	;# 
   970  008E                     	;# 
   971  0091                     	;# 
   972  0092                     	;# 
   973  0093                     	;# 
   974  0094                     	;# 
   975  0095                     	;# 
   976  0096                     	;# 
   977  0097                     	;# 
   978  0098                     	;# 
   979  0099                     	;# 
   980  009A                     	;# 
   981  009B                     	;# 
   982  009B                     	;# 
   983  009C                     	;# 
   984  009D                     	;# 
   985  009E                     	;# 
   986  009F                     	;# 
   987  010C                     	;# 
   988  010D                     	;# 
   989  010E                     	;# 
   990  010F                     	;# 
   991  0110                     	;# 
   992  0111                     	;# 
   993  0112                     	;# 
   994  0113                     	;# 
   995  0114                     	;# 
   996  0115                     	;# 
   997  0116                     	;# 
   998  0117                     	;# 
   999  0118                     	;# 
  1000  0119                     	;# 
  1001  011A                     	;# 
  1002  011B                     	;# 
  1003  011C                     	;# 
  1004  011D                     	;# 
  1005  011E                     	;# 
  1006  011F                     	;# 
  1007  018C                     	;# 
  1008  018D                     	;# 
  1009  018E                     	;# 
  1010  0191                     	;# 
  1011  0191                     	;# 
  1012  0192                     	;# 
  1013  0193                     	;# 
  1014  0193                     	;# 
  1015  0194                     	;# 
  1016  0195                     	;# 
  1017  0196                     	;# 
  1018  0197                     	;# 
  1019  0199                     	;# 
  1020  0199                     	;# 
  1021  0199                     	;# 
  1022  019A                     	;# 
  1023  019A                     	;# 
  1024  019A                     	;# 
  1025  019B                     	;# 
  1026  019B                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019C                     	;# 
  1031  019C                     	;# 
  1032  019C                     	;# 
  1033  019D                     	;# 
  1034  019D                     	;# 
  1035  019D                     	;# 
  1036  019E                     	;# 
  1037  019E                     	;# 
  1038  019E                     	;# 
  1039  019F                     	;# 
  1040  019F                     	;# 
  1041  019F                     	;# 
  1042  019F                     	;# 
  1043  019F                     	;# 
  1044  020C                     	;# 
  1045  020D                     	;# 
  1046  020E                     	;# 
  1047  0211                     	;# 
  1048  0211                     	;# 
  1049  0212                     	;# 
  1050  0212                     	;# 
  1051  0213                     	;# 
  1052  0213                     	;# 
  1053  0214                     	;# 
  1054  0214                     	;# 
  1055  0215                     	;# 
  1056  0215                     	;# 
  1057  0215                     	;# 
  1058  0215                     	;# 
  1059  0216                     	;# 
  1060  0216                     	;# 
  1061  0217                     	;# 
  1062  0217                     	;# 
  1063  021D                     	;# 
  1064  021E                     	;# 
  1065  021F                     	;# 
  1066  028C                     	;# 
  1067  028D                     	;# 
  1068  028E                     	;# 
  1069  0291                     	;# 
  1070  0291                     	;# 
  1071  0292                     	;# 
  1072  0293                     	;# 
  1073  0294                     	;# 
  1074  0298                     	;# 
  1075  0298                     	;# 
  1076  0299                     	;# 
  1077  029A                     	;# 
  1078  029B                     	;# 
  1079  029E                     	;# 
  1080  030C                     	;# 
  1081  030D                     	;# 
  1082  030E                     	;# 
  1083  031B                     	;# 
  1084  031C                     	;# 
  1085  031D                     	;# 
  1086  031E                     	;# 
  1087  031F                     	;# 
  1088  038C                     	;# 
  1089  038D                     	;# 
  1090  038E                     	;# 
  1091  0391                     	;# 
  1092  0392                     	;# 
  1093  0393                     	;# 
  1094  0394                     	;# 
  1095  0395                     	;# 
  1096  0396                     	;# 
  1097  0397                     	;# 
  1098  0398                     	;# 
  1099  0399                     	;# 
  1100  039B                     	;# 
  1101  039C                     	;# 
  1102  039D                     	;# 
  1103  039E                     	;# 
  1104  039F                     	;# 
  1105  040E                     	;# 
  1106  0413                     	;# 
  1107  0413                     	;# 
  1108  0414                     	;# 
  1109  0414                     	;# 
  1110  0415                     	;# 
  1111  0416                     	;# 
  1112  0417                     	;# 
  1113  0418                     	;# 
  1114  041A                     	;# 
  1115  041A                     	;# 
  1116  041B                     	;# 
  1117  041B                     	;# 
  1118  041C                     	;# 
  1119  041D                     	;# 
  1120  041E                     	;# 
  1121  041F                     	;# 
  1122  0493                     	;# 
  1123  0493                     	;# 
  1124  0494                     	;# 
  1125  0495                     	;# 
  1126  0496                     	;# 
  1127  049A                     	;# 
  1128  049A                     	;# 
  1129  049B                     	;# 
  1130  049C                     	;# 
  1131  049D                     	;# 
  1132  050F                     	;# 
  1133  0510                     	;# 
  1134  0511                     	;# 
  1135  0512                     	;# 
  1136  0513                     	;# 
  1137  0514                     	;# 
  1138  0515                     	;# 
  1139  0516                     	;# 
  1140  0590                     	;# 
  1141  0591                     	;# 
  1142  0592                     	;# 
  1143  0592                     	;# 
  1144  0592                     	;# 
  1145  0593                     	;# 
  1146  0593                     	;# 
  1147  0594                     	;# 
  1148  0595                     	;# 
  1149  0595                     	;# 
  1150  0595                     	;# 
  1151  0596                     	;# 
  1152  0596                     	;# 
  1153  0597                     	;# 
  1154  0598                     	;# 
  1155  0598                     	;# 
  1156  0599                     	;# 
  1157  059A                     	;# 
  1158  059A                     	;# 
  1159  0617                     	;# 
  1160  0617                     	;# 
  1161  0618                     	;# 
  1162  0619                     	;# 
  1163  061A                     	;# 
  1164  061A                     	;# 
  1165  061B                     	;# 
  1166  061C                     	;# 
  1167  068D                     	;# 
  1168  068E                     	;# 
  1169  068F                     	;# 
  1170  0690                     	;# 
  1171  0691                     	;# 
  1172  0692                     	;# 
  1173  0693                     	;# 
  1174  0694                     	;# 
  1175  0695                     	;# 
  1176  0696                     	;# 
  1177  0697                     	;# 
  1178  0698                     	;# 
  1179  0699                     	;# 
  1180  069A                     	;# 
  1181  069B                     	;# 
  1182  069C                     	;# 
  1183  069D                     	;# 
  1184  069E                     	;# 
  1185  069F                     	;# 
  1186  070D                     	;# 
  1187  070E                     	;# 
  1188  070F                     	;# 
  1189  0710                     	;# 
  1190  0711                     	;# 
  1191  0712                     	;# 
  1192  0713                     	;# 
  1193  0714                     	;# 
  1194  0715                     	;# 
  1195  0716                     	;# 
  1196  0717                     	;# 
  1197  0718                     	;# 
  1198  0719                     	;# 
  1199  071A                     	;# 
  1200  071B                     	;# 
  1201  071C                     	;# 
  1202  071D                     	;# 
  1203  071E                     	;# 
  1204  071F                     	;# 
  1205  0794                     	;# 
  1206  0795                     	;# 
  1207  0796                     	;# 
  1208  0797                     	;# 
  1209  0798                     	;# 
  1210  0799                     	;# 
  1211  079A                     	;# 
  1212  079B                     	;# 
  1213  079C                     	;# 
  1214  079D                     	;# 
  1215  079E                     	;# 
  1216  079F                     	;# 
  1217  0D8E                     	;# 
  1218  0D8F                     	;# 
  1219  0D90                     	;# 
  1220  0D91                     	;# 
  1221  0D91                     	;# 
  1222  0D92                     	;# 
  1223  0D93                     	;# 
  1224  0D93                     	;# 
  1225  0D94                     	;# 
  1226  0D95                     	;# 
  1227  0D95                     	;# 
  1228  0D96                     	;# 
  1229  0D97                     	;# 
  1230  0D97                     	;# 
  1231  0D98                     	;# 
  1232  0D99                     	;# 
  1233  0D99                     	;# 
  1234  0D9A                     	;# 
  1235  0D9B                     	;# 
  1236  0D9C                     	;# 
  1237  0D9C                     	;# 
  1238  0D9D                     	;# 
  1239  0D9D                     	;# 
  1240  0D9E                     	;# 
  1241  0D9F                     	;# 
  1242  0DA0                     	;# 
  1243  0DA1                     	;# 
  1244  0DA1                     	;# 
  1245  0DA2                     	;# 
  1246  0DA3                     	;# 
  1247  0DA3                     	;# 
  1248  0DA4                     	;# 
  1249  0DA5                     	;# 
  1250  0DA5                     	;# 
  1251  0DA6                     	;# 
  1252  0DA7                     	;# 
  1253  0DA7                     	;# 
  1254  0DA8                     	;# 
  1255  0DA9                     	;# 
  1256  0DA9                     	;# 
  1257  0DAA                     	;# 
  1258  0DAB                     	;# 
  1259  0DAC                     	;# 
  1260  0DAC                     	;# 
  1261  0DAD                     	;# 
  1262  0DAD                     	;# 
  1263  0DAE                     	;# 
  1264  0DAF                     	;# 
  1265  0DB0                     	;# 
  1266  0E0F                     	;# 
  1267  0E10                     	;# 
  1268  0E11                     	;# 
  1269  0E12                     	;# 
  1270  0E13                     	;# 
  1271  0E14                     	;# 
  1272  0E15                     	;# 
  1273  0E16                     	;# 
  1274  0E17                     	;# 
  1275  0E19                     	;# 
  1276  0E19                     	;# 
  1277  0E19                     	;# 
  1278  0E1A                     	;# 
  1279  0E1B                     	;# 
  1280  0E1C                     	;# 
  1281  0E1C                     	;# 
  1282  0E1C                     	;# 
  1283  0E1D                     	;# 
  1284  0E1E                     	;# 
  1285  0E1F                     	;# 
  1286  0E1F                     	;# 
  1287  0E1F                     	;# 
  1288  0E20                     	;# 
  1289  0E21                     	;# 
  1290  0E22                     	;# 
  1291  0E24                     	;# 
  1292  0E25                     	;# 
  1293  0E28                     	;# 
  1294  0E29                     	;# 
  1295  0E2A                     	;# 
  1296  0E2B                     	;# 
  1297  0E2C                     	;# 
  1298  0E2D                     	;# 
  1299  0E2E                     	;# 
  1300  0E2F                     	;# 
  1301  0E30                     	;# 
  1302  0E31                     	;# 
  1303  0E32                     	;# 
  1304  0E33                     	;# 
  1305  0E34                     	;# 
  1306  0E35                     	;# 
  1307  0E90                     	;# 
  1308  0E91                     	;# 
  1309  0E92                     	;# 
  1310  0E94                     	;# 
  1311  0E95                     	;# 
  1312  0E9C                     	;# 
  1313  0E9D                     	;# 
  1314  0E9E                     	;# 
  1315  0E9F                     	;# 
  1316  0EA0                     	;# 
  1317  0EA1                     	;# 
  1318  0EA2                     	;# 
  1319  0EA3                     	;# 
  1320  0EA4                     	;# 
  1321  0EA5                     	;# 
  1322  0EA6                     	;# 
  1323  0EA7                     	;# 
  1324  0F0F                     	;# 
  1325  0F10                     	;# 
  1326  0F11                     	;# 
  1327  0F12                     	;# 
  1328  0F13                     	;# 
  1329  0F14                     	;# 
  1330  0F15                     	;# 
  1331  0F16                     	;# 
  1332  0F17                     	;# 
  1333  0F18                     	;# 
  1334  0F19                     	;# 
  1335  0F1A                     	;# 
  1336  0F1B                     	;# 
  1337  0F1C                     	;# 
  1338  0F1D                     	;# 
  1339  0F1E                     	;# 
  1340  0F1F                     	;# 
  1341  0F20                     	;# 
  1342  0F21                     	;# 
  1343  0F22                     	;# 
  1344  0F23                     	;# 
  1345  0F24                     	;# 
  1346  0F25                     	;# 
  1347  0F26                     	;# 
  1348  0F27                     	;# 
  1349  0F28                     	;# 
  1350  0F29                     	;# 
  1351  0F2A                     	;# 
  1352  0F2B                     	;# 
  1353  0F2C                     	;# 
  1354  0F2D                     	;# 
  1355  0FE4                     	;# 
  1356  0FE5                     	;# 
  1357  0FE6                     	;# 
  1358  0FE7                     	;# 
  1359  0FE8                     	;# 
  1360  0FE9                     	;# 
  1361  0FEA                     	;# 
  1362  0FEB                     	;# 
  1363  0FED                     	;# 
  1364  0FEE                     	;# 
  1365  0FEF                     	;# 
  1366  0000                     	;# 
  1367  0001                     	;# 
  1368  0002                     	;# 
  1369  0003                     	;# 
  1370  0004                     	;# 
  1371  0005                     	;# 
  1372  0006                     	;# 
  1373  0007                     	;# 
  1374  0008                     	;# 
  1375  0009                     	;# 
  1376  000A                     	;# 
  1377  000B                     	;# 
  1378  000C                     	;# 
  1379  000D                     	;# 
  1380  000E                     	;# 
  1381  0011                     	;# 
  1382  0012                     	;# 
  1383  0013                     	;# 
  1384  0014                     	;# 
  1385  0015                     	;# 
  1386  0016                     	;# 
  1387  0016                     	;# 
  1388  0017                     	;# 
  1389  0018                     	;# 
  1390  0019                     	;# 
  1391  001A                     	;# 
  1392  001A                     	;# 
  1393  001B                     	;# 
  1394  001B                     	;# 
  1395  001C                     	;# 
  1396  001D                     	;# 
  1397  001E                     	;# 
  1398  001F                     	;# 
  1399  008C                     	;# 
  1400  008D                     	;# 
  1401  008E                     	;# 
  1402  0091                     	;# 
  1403  0092                     	;# 
  1404  0093                     	;# 
  1405  0094                     	;# 
  1406  0095                     	;# 
  1407  0096                     	;# 
  1408  0097                     	;# 
  1409  0098                     	;# 
  1410  0099                     	;# 
  1411  009A                     	;# 
  1412  009B                     	;# 
  1413  009B                     	;# 
  1414  009C                     	;# 
  1415  009D                     	;# 
  1416  009E                     	;# 
  1417  009F                     	;# 
  1418  010C                     	;# 
  1419  010D                     	;# 
  1420  010E                     	;# 
  1421  010F                     	;# 
  1422  0110                     	;# 
  1423  0111                     	;# 
  1424  0112                     	;# 
  1425  0113                     	;# 
  1426  0114                     	;# 
  1427  0115                     	;# 
  1428  0116                     	;# 
  1429  0117                     	;# 
  1430  0118                     	;# 
  1431  0119                     	;# 
  1432  011A                     	;# 
  1433  011B                     	;# 
  1434  011C                     	;# 
  1435  011D                     	;# 
  1436  011E                     	;# 
  1437  011F                     	;# 
  1438  018C                     	;# 
  1439  018D                     	;# 
  1440  018E                     	;# 
  1441  0191                     	;# 
  1442  0191                     	;# 
  1443  0192                     	;# 
  1444  0193                     	;# 
  1445  0193                     	;# 
  1446  0194                     	;# 
  1447  0195                     	;# 
  1448  0196                     	;# 
  1449  0197                     	;# 
  1450  0199                     	;# 
  1451  0199                     	;# 
  1452  0199                     	;# 
  1453  019A                     	;# 
  1454  019A                     	;# 
  1455  019A                     	;# 
  1456  019B                     	;# 
  1457  019B                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019C                     	;# 
  1462  019C                     	;# 
  1463  019C                     	;# 
  1464  019D                     	;# 
  1465  019D                     	;# 
  1466  019D                     	;# 
  1467  019E                     	;# 
  1468  019E                     	;# 
  1469  019E                     	;# 
  1470  019F                     	;# 
  1471  019F                     	;# 
  1472  019F                     	;# 
  1473  019F                     	;# 
  1474  019F                     	;# 
  1475  020C                     	;# 
  1476  020D                     	;# 
  1477  020E                     	;# 
  1478  0211                     	;# 
  1479  0211                     	;# 
  1480  0212                     	;# 
  1481  0212                     	;# 
  1482  0213                     	;# 
  1483  0213                     	;# 
  1484  0214                     	;# 
  1485  0214                     	;# 
  1486  0215                     	;# 
  1487  0215                     	;# 
  1488  0215                     	;# 
  1489  0215                     	;# 
  1490  0216                     	;# 
  1491  0216                     	;# 
  1492  0217                     	;# 
  1493  0217                     	;# 
  1494  021D                     	;# 
  1495  021E                     	;# 
  1496  021F                     	;# 
  1497  028C                     	;# 
  1498  028D                     	;# 
  1499  028E                     	;# 
  1500  0291                     	;# 
  1501  0291                     	;# 
  1502  0292                     	;# 
  1503  0293                     	;# 
  1504  0294                     	;# 
  1505  0298                     	;# 
  1506  0298                     	;# 
  1507  0299                     	;# 
  1508  029A                     	;# 
  1509  029B                     	;# 
  1510  029E                     	;# 
  1511  030C                     	;# 
  1512  030D                     	;# 
  1513  030E                     	;# 
  1514  031B                     	;# 
  1515  031C                     	;# 
  1516  031D                     	;# 
  1517  031E                     	;# 
  1518  031F                     	;# 
  1519  038C                     	;# 
  1520  038D                     	;# 
  1521  038E                     	;# 
  1522  0391                     	;# 
  1523  0392                     	;# 
  1524  0393                     	;# 
  1525  0394                     	;# 
  1526  0395                     	;# 
  1527  0396                     	;# 
  1528  0397                     	;# 
  1529  0398                     	;# 
  1530  0399                     	;# 
  1531  039B                     	;# 
  1532  039C                     	;# 
  1533  039D                     	;# 
  1534  039E                     	;# 
  1535  039F                     	;# 
  1536  040E                     	;# 
  1537  0413                     	;# 
  1538  0413                     	;# 
  1539  0414                     	;# 
  1540  0414                     	;# 
  1541  0415                     	;# 
  1542  0416                     	;# 
  1543  0417                     	;# 
  1544  0418                     	;# 
  1545  041A                     	;# 
  1546  041A                     	;# 
  1547  041B                     	;# 
  1548  041B                     	;# 
  1549  041C                     	;# 
  1550  041D                     	;# 
  1551  041E                     	;# 
  1552  041F                     	;# 
  1553  0493                     	;# 
  1554  0493                     	;# 
  1555  0494                     	;# 
  1556  0495                     	;# 
  1557  0496                     	;# 
  1558  049A                     	;# 
  1559  049A                     	;# 
  1560  049B                     	;# 
  1561  049C                     	;# 
  1562  049D                     	;# 
  1563  050F                     	;# 
  1564  0510                     	;# 
  1565  0511                     	;# 
  1566  0512                     	;# 
  1567  0513                     	;# 
  1568  0514                     	;# 
  1569  0515                     	;# 
  1570  0516                     	;# 
  1571  0590                     	;# 
  1572  0591                     	;# 
  1573  0592                     	;# 
  1574  0592                     	;# 
  1575  0592                     	;# 
  1576  0593                     	;# 
  1577  0593                     	;# 
  1578  0594                     	;# 
  1579  0595                     	;# 
  1580  0595                     	;# 
  1581  0595                     	;# 
  1582  0596                     	;# 
  1583  0596                     	;# 
  1584  0597                     	;# 
  1585  0598                     	;# 
  1586  0598                     	;# 
  1587  0599                     	;# 
  1588  059A                     	;# 
  1589  059A                     	;# 
  1590  0617                     	;# 
  1591  0617                     	;# 
  1592  0618                     	;# 
  1593  0619                     	;# 
  1594  061A                     	;# 
  1595  061A                     	;# 
  1596  061B                     	;# 
  1597  061C                     	;# 
  1598  068D                     	;# 
  1599  068E                     	;# 
  1600  068F                     	;# 
  1601  0690                     	;# 
  1602  0691                     	;# 
  1603  0692                     	;# 
  1604  0693                     	;# 
  1605  0694                     	;# 
  1606  0695                     	;# 
  1607  0696                     	;# 
  1608  0697                     	;# 
  1609  0698                     	;# 
  1610  0699                     	;# 
  1611  069A                     	;# 
  1612  069B                     	;# 
  1613  069C                     	;# 
  1614  069D                     	;# 
  1615  069E                     	;# 
  1616  069F                     	;# 
  1617  070D                     	;# 
  1618  070E                     	;# 
  1619  070F                     	;# 
  1620  0710                     	;# 
  1621  0711                     	;# 
  1622  0712                     	;# 
  1623  0713                     	;# 
  1624  0714                     	;# 
  1625  0715                     	;# 
  1626  0716                     	;# 
  1627  0717                     	;# 
  1628  0718                     	;# 
  1629  0719                     	;# 
  1630  071A                     	;# 
  1631  071B                     	;# 
  1632  071C                     	;# 
  1633  071D                     	;# 
  1634  071E                     	;# 
  1635  071F                     	;# 
  1636  0794                     	;# 
  1637  0795                     	;# 
  1638  0796                     	;# 
  1639  0797                     	;# 
  1640  0798                     	;# 
  1641  0799                     	;# 
  1642  079A                     	;# 
  1643  079B                     	;# 
  1644  079C                     	;# 
  1645  079D                     	;# 
  1646  079E                     	;# 
  1647  079F                     	;# 
  1648  0D8E                     	;# 
  1649  0D8F                     	;# 
  1650  0D90                     	;# 
  1651  0D91                     	;# 
  1652  0D91                     	;# 
  1653  0D92                     	;# 
  1654  0D93                     	;# 
  1655  0D93                     	;# 
  1656  0D94                     	;# 
  1657  0D95                     	;# 
  1658  0D95                     	;# 
  1659  0D96                     	;# 
  1660  0D97                     	;# 
  1661  0D97                     	;# 
  1662  0D98                     	;# 
  1663  0D99                     	;# 
  1664  0D99                     	;# 
  1665  0D9A                     	;# 
  1666  0D9B                     	;# 
  1667  0D9C                     	;# 
  1668  0D9C                     	;# 
  1669  0D9D                     	;# 
  1670  0D9D                     	;# 
  1671  0D9E                     	;# 
  1672  0D9F                     	;# 
  1673  0DA0                     	;# 
  1674  0DA1                     	;# 
  1675  0DA1                     	;# 
  1676  0DA2                     	;# 
  1677  0DA3                     	;# 
  1678  0DA3                     	;# 
  1679  0DA4                     	;# 
  1680  0DA5                     	;# 
  1681  0DA5                     	;# 
  1682  0DA6                     	;# 
  1683  0DA7                     	;# 
  1684  0DA7                     	;# 
  1685  0DA8                     	;# 
  1686  0DA9                     	;# 
  1687  0DA9                     	;# 
  1688  0DAA                     	;# 
  1689  0DAB                     	;# 
  1690  0DAC                     	;# 
  1691  0DAC                     	;# 
  1692  0DAD                     	;# 
  1693  0DAD                     	;# 
  1694  0DAE                     	;# 
  1695  0DAF                     	;# 
  1696  0DB0                     	;# 
  1697  0E0F                     	;# 
  1698  0E10                     	;# 
  1699  0E11                     	;# 
  1700  0E12                     	;# 
  1701  0E13                     	;# 
  1702  0E14                     	;# 
  1703  0E15                     	;# 
  1704  0E16                     	;# 
  1705  0E17                     	;# 
  1706  0E19                     	;# 
  1707  0E19                     	;# 
  1708  0E19                     	;# 
  1709  0E1A                     	;# 
  1710  0E1B                     	;# 
  1711  0E1C                     	;# 
  1712  0E1C                     	;# 
  1713  0E1C                     	;# 
  1714  0E1D                     	;# 
  1715  0E1E                     	;# 
  1716  0E1F                     	;# 
  1717  0E1F                     	;# 
  1718  0E1F                     	;# 
  1719  0E20                     	;# 
  1720  0E21                     	;# 
  1721  0E22                     	;# 
  1722  0E24                     	;# 
  1723  0E25                     	;# 
  1724  0E28                     	;# 
  1725  0E29                     	;# 
  1726  0E2A                     	;# 
  1727  0E2B                     	;# 
  1728  0E2C                     	;# 
  1729  0E2D                     	;# 
  1730  0E2E                     	;# 
  1731  0E2F                     	;# 
  1732  0E30                     	;# 
  1733  0E31                     	;# 
  1734  0E32                     	;# 
  1735  0E33                     	;# 
  1736  0E34                     	;# 
  1737  0E35                     	;# 
  1738  0E90                     	;# 
  1739  0E91                     	;# 
  1740  0E92                     	;# 
  1741  0E94                     	;# 
  1742  0E95                     	;# 
  1743  0E9C                     	;# 
  1744  0E9D                     	;# 
  1745  0E9E                     	;# 
  1746  0E9F                     	;# 
  1747  0EA0                     	;# 
  1748  0EA1                     	;# 
  1749  0EA2                     	;# 
  1750  0EA3                     	;# 
  1751  0EA4                     	;# 
  1752  0EA5                     	;# 
  1753  0EA6                     	;# 
  1754  0EA7                     	;# 
  1755  0F0F                     	;# 
  1756  0F10                     	;# 
  1757  0F11                     	;# 
  1758  0F12                     	;# 
  1759  0F13                     	;# 
  1760  0F14                     	;# 
  1761  0F15                     	;# 
  1762  0F16                     	;# 
  1763  0F17                     	;# 
  1764  0F18                     	;# 
  1765  0F19                     	;# 
  1766  0F1A                     	;# 
  1767  0F1B                     	;# 
  1768  0F1C                     	;# 
  1769  0F1D                     	;# 
  1770  0F1E                     	;# 
  1771  0F1F                     	;# 
  1772  0F20                     	;# 
  1773  0F21                     	;# 
  1774  0F22                     	;# 
  1775  0F23                     	;# 
  1776  0F24                     	;# 
  1777  0F25                     	;# 
  1778  0F26                     	;# 
  1779  0F27                     	;# 
  1780  0F28                     	;# 
  1781  0F29                     	;# 
  1782  0F2A                     	;# 
  1783  0F2B                     	;# 
  1784  0F2C                     	;# 
  1785  0F2D                     	;# 
  1786  0FE4                     	;# 
  1787  0FE5                     	;# 
  1788  0FE6                     	;# 
  1789  0FE7                     	;# 
  1790  0FE8                     	;# 
  1791  0FE9                     	;# 
  1792  0FEA                     	;# 
  1793  0FEB                     	;# 
  1794  0FED                     	;# 
  1795  0FEE                     	;# 
  1796  0FEF                     	;# 
  1797  0000                     	;# 
  1798  0001                     	;# 
  1799  0002                     	;# 
  1800  0003                     	;# 
  1801  0004                     	;# 
  1802  0005                     	;# 
  1803  0006                     	;# 
  1804  0007                     	;# 
  1805  0008                     	;# 
  1806  0009                     	;# 
  1807  000A                     	;# 
  1808  000B                     	;# 
  1809  000C                     	;# 
  1810  000D                     	;# 
  1811  000E                     	;# 
  1812  0011                     	;# 
  1813  0012                     	;# 
  1814  0013                     	;# 
  1815  0014                     	;# 
  1816  0015                     	;# 
  1817  0016                     	;# 
  1818  0016                     	;# 
  1819  0017                     	;# 
  1820  0018                     	;# 
  1821  0019                     	;# 
  1822  001A                     	;# 
  1823  001A                     	;# 
  1824  001B                     	;# 
  1825  001B                     	;# 
  1826  001C                     	;# 
  1827  001D                     	;# 
  1828  001E                     	;# 
  1829  001F                     	;# 
  1830  008C                     	;# 
  1831  008D                     	;# 
  1832  008E                     	;# 
  1833  0091                     	;# 
  1834  0092                     	;# 
  1835  0093                     	;# 
  1836  0094                     	;# 
  1837  0095                     	;# 
  1838  0096                     	;# 
  1839  0097                     	;# 
  1840  0098                     	;# 
  1841  0099                     	;# 
  1842  009A                     	;# 
  1843  009B                     	;# 
  1844  009B                     	;# 
  1845  009C                     	;# 
  1846  009D                     	;# 
  1847  009E                     	;# 
  1848  009F                     	;# 
  1849  010C                     	;# 
  1850  010D                     	;# 
  1851  010E                     	;# 
  1852  010F                     	;# 
  1853  0110                     	;# 
  1854  0111                     	;# 
  1855  0112                     	;# 
  1856  0113                     	;# 
  1857  0114                     	;# 
  1858  0115                     	;# 
  1859  0116                     	;# 
  1860  0117                     	;# 
  1861  0118                     	;# 
  1862  0119                     	;# 
  1863  011A                     	;# 
  1864  011B                     	;# 
  1865  011C                     	;# 
  1866  011D                     	;# 
  1867  011E                     	;# 
  1868  011F                     	;# 
  1869  018C                     	;# 
  1870  018D                     	;# 
  1871  018E                     	;# 
  1872  0191                     	;# 
  1873  0191                     	;# 
  1874  0192                     	;# 
  1875  0193                     	;# 
  1876  0193                     	;# 
  1877  0194                     	;# 
  1878  0195                     	;# 
  1879  0196                     	;# 
  1880  0197                     	;# 
  1881  0199                     	;# 
  1882  0199                     	;# 
  1883  0199                     	;# 
  1884  019A                     	;# 
  1885  019A                     	;# 
  1886  019A                     	;# 
  1887  019B                     	;# 
  1888  019B                     	;# 
  1889  019B                     	;# 
  1890  019B                     	;# 
  1891  019B                     	;# 
  1892  019C                     	;# 
  1893  019C                     	;# 
  1894  019C                     	;# 
  1895  019D                     	;# 
  1896  019D                     	;# 
  1897  019D                     	;# 
  1898  019E                     	;# 
  1899  019E                     	;# 
  1900  019E                     	;# 
  1901  019F                     	;# 
  1902  019F                     	;# 
  1903  019F                     	;# 
  1904  019F                     	;# 
  1905  019F                     	;# 
  1906  020C                     	;# 
  1907  020D                     	;# 
  1908  020E                     	;# 
  1909  0211                     	;# 
  1910  0211                     	;# 
  1911  0212                     	;# 
  1912  0212                     	;# 
  1913  0213                     	;# 
  1914  0213                     	;# 
  1915  0214                     	;# 
  1916  0214                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0215                     	;# 
  1921  0216                     	;# 
  1922  0216                     	;# 
  1923  0217                     	;# 
  1924  0217                     	;# 
  1925  021D                     	;# 
  1926  021E                     	;# 
  1927  021F                     	;# 
  1928  028C                     	;# 
  1929  028D                     	;# 
  1930  028E                     	;# 
  1931  0291                     	;# 
  1932  0291                     	;# 
  1933  0292                     	;# 
  1934  0293                     	;# 
  1935  0294                     	;# 
  1936  0298                     	;# 
  1937  0298                     	;# 
  1938  0299                     	;# 
  1939  029A                     	;# 
  1940  029B                     	;# 
  1941  029E                     	;# 
  1942  030C                     	;# 
  1943  030D                     	;# 
  1944  030E                     	;# 
  1945  031B                     	;# 
  1946  031C                     	;# 
  1947  031D                     	;# 
  1948  031E                     	;# 
  1949  031F                     	;# 
  1950  038C                     	;# 
  1951  038D                     	;# 
  1952  038E                     	;# 
  1953  0391                     	;# 
  1954  0392                     	;# 
  1955  0393                     	;# 
  1956  0394                     	;# 
  1957  0395                     	;# 
  1958  0396                     	;# 
  1959  0397                     	;# 
  1960  0398                     	;# 
  1961  0399                     	;# 
  1962  039B                     	;# 
  1963  039C                     	;# 
  1964  039D                     	;# 
  1965  039E                     	;# 
  1966  039F                     	;# 
  1967  040E                     	;# 
  1968  0413                     	;# 
  1969  0413                     	;# 
  1970  0414                     	;# 
  1971  0414                     	;# 
  1972  0415                     	;# 
  1973  0416                     	;# 
  1974  0417                     	;# 
  1975  0418                     	;# 
  1976  041A                     	;# 
  1977  041A                     	;# 
  1978  041B                     	;# 
  1979  041B                     	;# 
  1980  041C                     	;# 
  1981  041D                     	;# 
  1982  041E                     	;# 
  1983  041F                     	;# 
  1984  0493                     	;# 
  1985  0493                     	;# 
  1986  0494                     	;# 
  1987  0495                     	;# 
  1988  0496                     	;# 
  1989  049A                     	;# 
  1990  049A                     	;# 
  1991  049B                     	;# 
  1992  049C                     	;# 
  1993  049D                     	;# 
  1994  050F                     	;# 
  1995  0510                     	;# 
  1996  0511                     	;# 
  1997  0512                     	;# 
  1998  0513                     	;# 
  1999  0514                     	;# 
  2000  0515                     	;# 
  2001  0516                     	;# 
  2002  0590                     	;# 
  2003  0591                     	;# 
  2004  0592                     	;# 
  2005  0592                     	;# 
  2006  0592                     	;# 
  2007  0593                     	;# 
  2008  0593                     	;# 
  2009  0594                     	;# 
  2010  0595                     	;# 
  2011  0595                     	;# 
  2012  0595                     	;# 
  2013  0596                     	;# 
  2014  0596                     	;# 
  2015  0597                     	;# 
  2016  0598                     	;# 
  2017  0598                     	;# 
  2018  0599                     	;# 
  2019  059A                     	;# 
  2020  059A                     	;# 
  2021  0617                     	;# 
  2022  0617                     	;# 
  2023  0618                     	;# 
  2024  0619                     	;# 
  2025  061A                     	;# 
  2026  061A                     	;# 
  2027  061B                     	;# 
  2028  061C                     	;# 
  2029  068D                     	;# 
  2030  068E                     	;# 
  2031  068F                     	;# 
  2032  0690                     	;# 
  2033  0691                     	;# 
  2034  0692                     	;# 
  2035  0693                     	;# 
  2036  0694                     	;# 
  2037  0695                     	;# 
  2038  0696                     	;# 
  2039  0697                     	;# 
  2040  0698                     	;# 
  2041  0699                     	;# 
  2042  069A                     	;# 
  2043  069B                     	;# 
  2044  069C                     	;# 
  2045  069D                     	;# 
  2046  069E                     	;# 
  2047  069F                     	;# 
  2048  070D                     	;# 
  2049  070E                     	;# 
  2050  070F                     	;# 
  2051  0710                     	;# 
  2052  0711                     	;# 
  2053  0712                     	;# 
  2054  0713                     	;# 
  2055  0714                     	;# 
  2056  0715                     	;# 
  2057  0716                     	;# 
  2058  0717                     	;# 
  2059  0718                     	;# 
  2060  0719                     	;# 
  2061  071A                     	;# 
  2062  071B                     	;# 
  2063  071C                     	;# 
  2064  071D                     	;# 
  2065  071E                     	;# 
  2066  071F                     	;# 
  2067  0794                     	;# 
  2068  0795                     	;# 
  2069  0796                     	;# 
  2070  0797                     	;# 
  2071  0798                     	;# 
  2072  0799                     	;# 
  2073  079A                     	;# 
  2074  079B                     	;# 
  2075  079C                     	;# 
  2076  079D                     	;# 
  2077  079E                     	;# 
  2078  079F                     	;# 
  2079  0D8E                     	;# 
  2080  0D8F                     	;# 
  2081  0D90                     	;# 
  2082  0D91                     	;# 
  2083  0D91                     	;# 
  2084  0D92                     	;# 
  2085  0D93                     	;# 
  2086  0D93                     	;# 
  2087  0D94                     	;# 
  2088  0D95                     	;# 
  2089  0D95                     	;# 
  2090  0D96                     	;# 
  2091  0D97                     	;# 
  2092  0D97                     	;# 
  2093  0D98                     	;# 
  2094  0D99                     	;# 
  2095  0D99                     	;# 
  2096  0D9A                     	;# 
  2097  0D9B                     	;# 
  2098  0D9C                     	;# 
  2099  0D9C                     	;# 
  2100  0D9D                     	;# 
  2101  0D9D                     	;# 
  2102  0D9E                     	;# 
  2103  0D9F                     	;# 
  2104  0DA0                     	;# 
  2105  0DA1                     	;# 
  2106  0DA1                     	;# 
  2107  0DA2                     	;# 
  2108  0DA3                     	;# 
  2109  0DA3                     	;# 
  2110  0DA4                     	;# 
  2111  0DA5                     	;# 
  2112  0DA5                     	;# 
  2113  0DA6                     	;# 
  2114  0DA7                     	;# 
  2115  0DA7                     	;# 
  2116  0DA8                     	;# 
  2117  0DA9                     	;# 
  2118  0DA9                     	;# 
  2119  0DAA                     	;# 
  2120  0DAB                     	;# 
  2121  0DAC                     	;# 
  2122  0DAC                     	;# 
  2123  0DAD                     	;# 
  2124  0DAD                     	;# 
  2125  0DAE                     	;# 
  2126  0DAF                     	;# 
  2127  0DB0                     	;# 
  2128  0E0F                     	;# 
  2129  0E10                     	;# 
  2130  0E11                     	;# 
  2131  0E12                     	;# 
  2132  0E13                     	;# 
  2133  0E14                     	;# 
  2134  0E15                     	;# 
  2135  0E16                     	;# 
  2136  0E17                     	;# 
  2137  0E19                     	;# 
  2138  0E19                     	;# 
  2139  0E19                     	;# 
  2140  0E1A                     	;# 
  2141  0E1B                     	;# 
  2142  0E1C                     	;# 
  2143  0E1C                     	;# 
  2144  0E1C                     	;# 
  2145  0E1D                     	;# 
  2146  0E1E                     	;# 
  2147  0E1F                     	;# 
  2148  0E1F                     	;# 
  2149  0E1F                     	;# 
  2150  0E20                     	;# 
  2151  0E21                     	;# 
  2152  0E22                     	;# 
  2153  0E24                     	;# 
  2154  0E25                     	;# 
  2155  0E28                     	;# 
  2156  0E29                     	;# 
  2157  0E2A                     	;# 
  2158  0E2B                     	;# 
  2159  0E2C                     	;# 
  2160  0E2D                     	;# 
  2161  0E2E                     	;# 
  2162  0E2F                     	;# 
  2163  0E30                     	;# 
  2164  0E31                     	;# 
  2165  0E32                     	;# 
  2166  0E33                     	;# 
  2167  0E34                     	;# 
  2168  0E35                     	;# 
  2169  0E90                     	;# 
  2170  0E91                     	;# 
  2171  0E92                     	;# 
  2172  0E94                     	;# 
  2173  0E95                     	;# 
  2174  0E9C                     	;# 
  2175  0E9D                     	;# 
  2176  0E9E                     	;# 
  2177  0E9F                     	;# 
  2178  0EA0                     	;# 
  2179  0EA1                     	;# 
  2180  0EA2                     	;# 
  2181  0EA3                     	;# 
  2182  0EA4                     	;# 
  2183  0EA5                     	;# 
  2184  0EA6                     	;# 
  2185  0EA7                     	;# 
  2186  0F0F                     	;# 
  2187  0F10                     	;# 
  2188  0F11                     	;# 
  2189  0F12                     	;# 
  2190  0F13                     	;# 
  2191  0F14                     	;# 
  2192  0F15                     	;# 
  2193  0F16                     	;# 
  2194  0F17                     	;# 
  2195  0F18                     	;# 
  2196  0F19                     	;# 
  2197  0F1A                     	;# 
  2198  0F1B                     	;# 
  2199  0F1C                     	;# 
  2200  0F1D                     	;# 
  2201  0F1E                     	;# 
  2202  0F1F                     	;# 
  2203  0F20                     	;# 
  2204  0F21                     	;# 
  2205  0F22                     	;# 
  2206  0F23                     	;# 
  2207  0F24                     	;# 
  2208  0F25                     	;# 
  2209  0F26                     	;# 
  2210  0F27                     	;# 
  2211  0F28                     	;# 
  2212  0F29                     	;# 
  2213  0F2A                     	;# 
  2214  0F2B                     	;# 
  2215  0F2C                     	;# 
  2216  0F2D                     	;# 
  2217  0FE4                     	;# 
  2218  0FE5                     	;# 
  2219  0FE6                     	;# 
  2220  0FE7                     	;# 
  2221  0FE8                     	;# 
  2222  0FE9                     	;# 
  2223  0FEA                     	;# 
  2224  0FEB                     	;# 
  2225  0FED                     	;# 
  2226  0FEE                     	;# 
  2227  0FEF                     	;# 
  2228                           
  2229 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2230  0000                     
  2231 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2232  0000                     
  2233 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2234  0000                     
  2235                           	psect	nvBANK0
  2236  0051                     __pnvBANK0:
  2237  0051                     _EUSART_ErrorHandler:
  2238  0051                     	ds	2
  2239  0053                     _EUSART_OverrunErrorHandler:
  2240  0053                     	ds	2
  2241  0055                     _EUSART_FramingErrorHandler:
  2242  0055                     	ds	2
  2243  0011                     _PIR1bits	set	17
  2244  0097                     _WDTCON	set	151
  2245  0098                     _OSCTUNE	set	152
  2246  009A                     _OSCSTAT	set	154
  2247  0099                     _OSCCON	set	153
  2248  0095                     _OPTION_REGbits	set	149
  2249  008E                     _TRISC	set	142
  2250  008D                     _TRISB	set	141
  2251  008C                     _TRISA	set	140
  2252  010D                     _LATBbits	set	269
  2253  010E                     _LATCbits	set	270
  2254  010C                     _LATAbits	set	268
  2255  010E                     _LATC	set	270
  2256  010D                     _LATB	set	269
  2257  010C                     _LATA	set	268
  2258  018C                     _ANSELA	set	396
  2259  018D                     _ANSELB	set	397
  2260  018E                     _ANSELC	set	398
  2261  019A                     _TX1REG	set	410
  2262  0199                     _RC1REG	set	409
  2263  019D                     _RC1STAbits	set	413
  2264  019E                     _TX1STAbits	set	414
  2265  019C                     _SPBRGH	set	412
  2266  019B                     _SPBRGL	set	411
  2267  019E                     _TX1STA	set	414
  2268  019D                     _RC1STA	set	413
  2269  019F                     _BAUD1CON	set	415
  2270  021D                     _BORCON	set	541
  2271  020E                     _WPUC	set	526
  2272  020C                     _WPUA	set	524
  2273  020D                     _WPUB	set	525
  2274  028E                     _ODCONC	set	654
  2275  028D                     _ODCONB	set	653
  2276  028C                     _ODCONA	set	652
  2277  030E                     _SLRCONC	set	782
  2278  030D                     _SLRCONB	set	781
  2279  030C                     _SLRCONA	set	780
  2280  038E                     _INLVLC	set	910
  2281  038D                     _INLVLB	set	909
  2282  038C                     _INLVLA	set	908
  2283  0E24                     _RXPPS	set	3620
  2284  0E9C                     _RB4PPS	set	3740
  2285                           
  2286                           	psect	cinit
  2287  07FB                     start_initialization:	
  2288                           ; #config settings
  2289                           
  2290  07FB                     __initialization:
  2291                           
  2292                           ; Clear objects allocated to BANK0
  2293  07FB  0020               	movlb	0	; select bank0
  2294  07FC  01D7               	clrf	__pbssBANK0& (0+127)
  2295  07FD                     end_of_initialization:	
  2296                           ;End of C runtime variable initialization code
  2297                           
  2298  07FD                     __end_of__initialization:
  2299  07FD  0020               	movlb	0
  2300  07FE  3182  2AA0         	ljmp	_main	;jump to C main() function
  2301                           
  2302                           	psect	bssBANK0
  2303  0057                     __pbssBANK0:
  2304  0057                     _eusartRxLastError:
  2305  0057                     	ds	1
  2306                           
  2307                           	psect	cstackCOMMON
  2308  0070                     __pcstackCOMMON:
  2309  0070                     ?_EUSART_SetFramingErrorHandler:
  2310  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313  0070                     ?_EUSART_SetErrorHandler:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_OSCILLATOR_Initialize:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ??_OSCILLATOR_Initialize:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ?_WDT_Initialize:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ??_WDT_Initialize:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ?_DELAY_milliseconds:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_EUSART_Initialize:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_PIN_MANAGER_Initialize:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ??_PIN_MANAGER_Initialize:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ?_SYSTEM_Initialize:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_displayClear:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ??_displayClear:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_displayZero:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ??_displayZero:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_displayOne:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ??_displayOne:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_displayTwo:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ??_displayTwo:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ?_displayThree:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ??_displayThree:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ?_displayFour:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ??_displayFour:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ?_displayFive:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ??_displayFive:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ?_displaySix:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ??_displaySix:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ?_displaySeven:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ??_displaySeven:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ?_displayEight:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ??_displayEight:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ?_displayNine:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ??_displayNine:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ?_selectDIG:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_main:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ?___awdiv:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2419                           ; 2 bytes @ 0x0
  2420                           
  2421  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2422                           ; 2 bytes @ 0x0
  2423                           
  2424  0070                     EUSART_SetErrorHandler@interruptHandler:	
  2425                           ; 2 bytes @ 0x0
  2426                           
  2427  0070                     selectDIG@dig:	
  2428                           ; 2 bytes @ 0x0
  2429                           
  2430  0070                     DELAY_milliseconds@milliseconds:	
  2431                           ; 2 bytes @ 0x0
  2432                           
  2433  0070                     ___awdiv@divisor:	
  2434                           ; 2 bytes @ 0x0
  2435                           
  2436                           
  2437                           ; 2 bytes @ 0x0
  2438  0070                     	ds	2
  2439  0072                     ??_EUSART_SetFramingErrorHandler:
  2440  0072                     ??_EUSART_SetOverrunErrorHandler:	
  2441                           ; 1 bytes @ 0x2
  2442                           
  2443  0072                     ??_EUSART_SetErrorHandler:	
  2444                           ; 1 bytes @ 0x2
  2445                           
  2446  0072                     ??_DELAY_milliseconds:	
  2447                           ; 1 bytes @ 0x2
  2448                           
  2449  0072                     ??_EUSART_Initialize:	
  2450                           ; 1 bytes @ 0x2
  2451                           
  2452  0072                     ??_SYSTEM_Initialize:	
  2453                           ; 1 bytes @ 0x2
  2454                           
  2455  0072                     ?_displaySegments:	
  2456                           ; 1 bytes @ 0x2
  2457                           
  2458  0072                     ??_selectDIG:	
  2459                           ; 1 bytes @ 0x2
  2460                           
  2461  0072                     ?_displayRoll:	
  2462                           ; 1 bytes @ 0x2
  2463                           
  2464  0072                     displaySegments@num:	
  2465                           ; 1 bytes @ 0x2
  2466                           
  2467  0072                     displayRoll@cnt:	
  2468                           ; 2 bytes @ 0x2
  2469                           
  2470  0072                     ___awdiv@dividend:	
  2471                           ; 2 bytes @ 0x2
  2472                           
  2473                           
  2474                           ; 2 bytes @ 0x2
  2475  0072                     	ds	2
  2476  0074                     ??_displaySegments:
  2477  0074                     ??_displayRoll:	
  2478                           ; 1 bytes @ 0x4
  2479                           
  2480  0074                     ??___awdiv:	
  2481                           ; 1 bytes @ 0x4
  2482                           
  2483                           
  2484                           ; 1 bytes @ 0x4
  2485  0074                     	ds	1
  2486  0075                     ___awdiv@counter:
  2487                           
  2488                           ; 1 bytes @ 0x5
  2489  0075                     	ds	1
  2490  0076                     ___awdiv@sign:
  2491                           
  2492                           ; 1 bytes @ 0x6
  2493  0076                     	ds	1
  2494  0077                     ___awdiv@quotient:
  2495                           
  2496                           ; 2 bytes @ 0x7
  2497  0077                     	ds	2
  2498  0079                     ?___awmod:
  2499  0079                     ___awmod@divisor:	
  2500                           ; 2 bytes @ 0x9
  2501                           
  2502                           
  2503                           ; 2 bytes @ 0x9
  2504  0079                     	ds	2
  2505  007B                     ___awmod@dividend:
  2506                           
  2507                           ; 2 bytes @ 0xB
  2508  007B                     	ds	2
  2509  007D                     ??___awmod:
  2510                           
  2511                           ; 1 bytes @ 0xD
  2512  007D                     	ds	1
  2513  007E                     ??_main:
  2514                           
  2515                           	psect	cstackBANK0
  2516  0020                     __pcstackBANK0:	
  2517                           ; 1 bytes @ 0xE
  2518                           
  2519  0020                     ___awmod@counter:
  2520                           
  2521                           ; 1 bytes @ 0x0
  2522  0020                     	ds	1
  2523  0021                     ___awmod@sign:
  2524                           
  2525                           ; 1 bytes @ 0x1
  2526  0021                     	ds	1
  2527  0022                     ?_displayLotteryResult:
  2528  0022                     displayLotteryResult@val:	
  2529                           ; 1 bytes @ 0x2
  2530                           
  2531                           
  2532                           ; 2 bytes @ 0x2
  2533  0022                     	ds	2
  2534  0024                     ??_displayLotteryResult:
  2535                           
  2536                           ; 1 bytes @ 0x4
  2537  0024                     	ds	1
  2538  0025                     displayLotteryResult@dig_4:
  2539                           
  2540                           ; 2 bytes @ 0x5
  2541  0025                     	ds	2
  2542  0027                     displayLotteryResult@dig_3:
  2543                           
  2544                           ; 2 bytes @ 0x7
  2545  0027                     	ds	2
  2546  0029                     displayLotteryResult@x:
  2547                           
  2548                           ; 2 bytes @ 0x9
  2549  0029                     	ds	2
  2550  002B                     displayLotteryResult@wait_cnt:
  2551                           
  2552                           ; 2 bytes @ 0xB
  2553  002B                     	ds	2
  2554  002D                     displayLotteryResult@x_399:
  2555                           
  2556                           ; 2 bytes @ 0xD
  2557  002D                     	ds	2
  2558  002F                     displayLotteryResult@wait_cnt_401:
  2559                           
  2560                           ; 2 bytes @ 0xF
  2561  002F                     	ds	2
  2562  0031                     displayLotteryResult@x_404:
  2563                           
  2564                           ; 2 bytes @ 0x11
  2565  0031                     	ds	2
  2566  0033                     displayLotteryResult@wait_cnt_406:
  2567                           
  2568                           ; 2 bytes @ 0x13
  2569  0033                     	ds	2
  2570  0035                     displayLotteryResult@x_408:
  2571                           
  2572                           ; 2 bytes @ 0x15
  2573  0035                     	ds	2
  2574  0037                     displayLotteryResult@wait_cnt_410:
  2575                           
  2576                           ; 2 bytes @ 0x17
  2577  0037                     	ds	2
  2578  0039                     displayLotteryResult@wait_cnt_412:
  2579                           
  2580                           ; 2 bytes @ 0x19
  2581  0039                     	ds	2
  2582  003B                     displayLotteryResult@dig_2:
  2583                           
  2584                           ; 2 bytes @ 0x1B
  2585  003B                     	ds	2
  2586  003D                     displayLotteryResult@i:
  2587                           
  2588                           ; 2 bytes @ 0x1D
  2589  003D                     	ds	2
  2590  003F                     displayLotteryResult@j:
  2591                           
  2592                           ; 2 bytes @ 0x1F
  2593  003F                     	ds	2
  2594  0041                     displayLotteryResult@i_400:
  2595                           
  2596                           ; 2 bytes @ 0x21
  2597  0041                     	ds	2
  2598  0043                     displayLotteryResult@i_405:
  2599                           
  2600                           ; 2 bytes @ 0x23
  2601  0043                     	ds	2
  2602  0045                     displayLotteryResult@i_409:
  2603                           
  2604                           ; 2 bytes @ 0x25
  2605  0045                     	ds	2
  2606  0047                     displayLotteryResult@dig_1:
  2607                           
  2608                           ; 2 bytes @ 0x27
  2609  0047                     	ds	2
  2610  0049                     displayLotteryResult@j_402:
  2611                           
  2612                           ; 2 bytes @ 0x29
  2613  0049                     	ds	2
  2614  004B                     displayLotteryResult@j_407:
  2615                           
  2616                           ; 2 bytes @ 0x2B
  2617  004B                     	ds	2
  2618  004D                     displayLotteryResult@j_411:
  2619                           
  2620                           ; 2 bytes @ 0x2D
  2621  004D                     	ds	2
  2622  004F                     displayLotteryResult@j_413:
  2623                           
  2624                           ; 2 bytes @ 0x2F
  2625  004F                     	ds	2
  2626                           
  2627                           	psect	maintext
  2628  02A0                     __pmaintext:	
  2629 ;;
  2630 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2631 ;;
  2632 ;; *************** function _main *****************
  2633 ;; Defined at:
  2634 ;;		line 325 in file "main.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : B1F/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels required when called: 4
  2654 ;; This function calls:
  2655 ;;		_SYSTEM_Initialize
  2656 ;;		_displayLotteryResult
  2657 ;; This function is called by:
  2658 ;;		Startup code after reset
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _main
  2664  02A0                     _main:
  2665  02A0                     l2130:	
  2666                           ;incstack = 0
  2667                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2668                           
  2669                           
  2670                           ;main.c: 328:     SYSTEM_Initialize();
  2671  02A0  3182  2293  3182   	fcall	_SYSTEM_Initialize
  2672  02A3                     l2132:
  2673                           
  2674                           ;main.c: 346:     {;main.c: 347:       displayLotteryResult(7777);
  2675  02A3  3061               	movlw	97
  2676  02A4  0020               	movlb	0	; select bank0
  2677  02A5  00A2               	movwf	displayLotteryResult@val
  2678  02A6  301E               	movlw	30
  2679  02A7  00A3               	movwf	displayLotteryResult@val+1
  2680  02A8  3184  2481  3182   	fcall	_displayLotteryResult
  2681  02AB  2AA3               	goto	l2132
  2682  02AC  3180  2802         	ljmp	start
  2683  02AE                     __end_of_main:
  2684                           
  2685                           	psect	text1
  2686  0481                     __ptext1:	
  2687 ;; *************** function _displayLotteryResult *****************
  2688 ;; Defined at:
  2689 ;;		line 237 in file "main.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  val             2    2[BANK0 ] int 
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;  j               2   45[BANK0 ] int 
  2694 ;;  j               2   43[BANK0 ] int 
  2695 ;;  j               2   41[BANK0 ] int 
  2696 ;;  j               2   31[BANK0 ] int 
  2697 ;;  wait_cnt        2   23[BANK0 ] int 
  2698 ;;  wait_cnt        2   19[BANK0 ] int 
  2699 ;;  wait_cnt        2   15[BANK0 ] int 
  2700 ;;  wait_cnt        2   11[BANK0 ] int 
  2701 ;;  j               2   47[BANK0 ] int 
  2702 ;;  i               2   37[BANK0 ] int 
  2703 ;;  i               2   35[BANK0 ] int 
  2704 ;;  i               2   33[BANK0 ] int 
  2705 ;;  i               2   29[BANK0 ] int 
  2706 ;;  wait_cnt        2   25[BANK0 ] int 
  2707 ;;  x               2   21[BANK0 ] int 
  2708 ;;  x               2   17[BANK0 ] int 
  2709 ;;  x               2   13[BANK0 ] int 
  2710 ;;  x               2    9[BANK0 ] int 
  2711 ;;  dig_1           2   39[BANK0 ] int 
  2712 ;;  dig_2           2   27[BANK0 ] int 
  2713 ;;  dig_3           2    7[BANK0 ] int 
  2714 ;;  dig_4           2    5[BANK0 ] int 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;Total ram usage:       47 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 3
  2731 ;; This function calls:
  2732 ;;		___awdiv
  2733 ;;		___awmod
  2734 ;;		_displayRoll
  2735 ;;		_displaySegments
  2736 ;;		_selectDIG
  2737 ;; This function is called by:
  2738 ;;		_main
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           
  2743                           ;psect for function _displayLotteryResult
  2744  0481                     _displayLotteryResult:
  2745  0481                     l1926:	
  2746                           ;incstack = 0
  2747                           ; Regs used in _displayLotteryResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2748                           
  2749                           
  2750                           ;main.c: 238:   int dig_1 = val / 1000;
  2751  0481  30E8               	movlw	232
  2752  0482  00F0               	movwf	___awdiv@divisor
  2753  0483  3003               	movlw	3
  2754  0484  00F1               	movwf	___awdiv@divisor+1
  2755  0485  0020               	movlb	0	; select bank0
  2756  0486  0823               	movf	displayLotteryResult@val+1,w
  2757  0487  00F3               	movwf	___awdiv@dividend+1
  2758  0488  0822               	movf	displayLotteryResult@val,w
  2759  0489  00F2               	movwf	___awdiv@dividend
  2760  048A  3184  2422  3184   	fcall	___awdiv
  2761  048D  0871               	movf	?___awdiv+1,w
  2762  048E  0020               	movlb	0	; select bank0
  2763  048F  00C8               	movwf	displayLotteryResult@dig_1+1
  2764  0490  0870               	movf	?___awdiv,w
  2765  0491  00C7               	movwf	displayLotteryResult@dig_1
  2766                           
  2767                           ;main.c: 239:   int dig_2 = (val / 100) % 10;
  2768  0492  300A               	movlw	10
  2769  0493  00F9               	movwf	___awmod@divisor
  2770  0494  3000               	movlw	0
  2771  0495  00FA               	movwf	___awmod@divisor+1
  2772  0496  3064               	movlw	100
  2773  0497  00F0               	movwf	___awdiv@divisor
  2774  0498  3000               	movlw	0
  2775  0499  00F1               	movwf	___awdiv@divisor+1
  2776  049A  0823               	movf	displayLotteryResult@val+1,w
  2777  049B  00F3               	movwf	___awdiv@dividend+1
  2778  049C  0822               	movf	displayLotteryResult@val,w
  2779  049D  00F2               	movwf	___awdiv@dividend
  2780  049E  3184  2422  3184   	fcall	___awdiv
  2781  04A1  0871               	movf	?___awdiv+1,w
  2782  04A2  00FC               	movwf	___awmod@dividend+1
  2783  04A3  0870               	movf	?___awdiv,w
  2784  04A4  00FB               	movwf	___awmod@dividend
  2785  04A5  3183  2375  3184   	fcall	___awmod
  2786  04A8  087A               	movf	?___awmod+1,w
  2787  04A9  0020               	movlb	0	; select bank0
  2788  04AA  00BC               	movwf	displayLotteryResult@dig_2+1
  2789  04AB  0879               	movf	?___awmod,w
  2790  04AC  00BB               	movwf	displayLotteryResult@dig_2
  2791                           
  2792                           ;main.c: 240:   int dig_3 = (val / 10) % 10;
  2793  04AD  300A               	movlw	10
  2794  04AE  00F9               	movwf	___awmod@divisor
  2795  04AF  3000               	movlw	0
  2796  04B0  00FA               	movwf	___awmod@divisor+1
  2797  04B1  300A               	movlw	10
  2798  04B2  00F0               	movwf	___awdiv@divisor
  2799  04B3  3000               	movlw	0
  2800  04B4  00F1               	movwf	___awdiv@divisor+1
  2801  04B5  0823               	movf	displayLotteryResult@val+1,w
  2802  04B6  00F3               	movwf	___awdiv@dividend+1
  2803  04B7  0822               	movf	displayLotteryResult@val,w
  2804  04B8  00F2               	movwf	___awdiv@dividend
  2805  04B9  3184  2422  3184   	fcall	___awdiv
  2806  04BC  0871               	movf	?___awdiv+1,w
  2807  04BD  00FC               	movwf	___awmod@dividend+1
  2808  04BE  0870               	movf	?___awdiv,w
  2809  04BF  00FB               	movwf	___awmod@dividend
  2810  04C0  3183  2375  3184   	fcall	___awmod
  2811  04C3  087A               	movf	?___awmod+1,w
  2812  04C4  0020               	movlb	0	; select bank0
  2813  04C5  00A8               	movwf	displayLotteryResult@dig_3+1
  2814  04C6  0879               	movf	?___awmod,w
  2815  04C7  00A7               	movwf	displayLotteryResult@dig_3
  2816                           
  2817                           ;main.c: 241:   int dig_4 = val % 10;
  2818  04C8  300A               	movlw	10
  2819  04C9  00F9               	movwf	___awmod@divisor
  2820  04CA  3000               	movlw	0
  2821  04CB  00FA               	movwf	___awmod@divisor+1
  2822  04CC  0823               	movf	displayLotteryResult@val+1,w
  2823  04CD  00FC               	movwf	___awmod@dividend+1
  2824  04CE  0822               	movf	displayLotteryResult@val,w
  2825  04CF  00FB               	movwf	___awmod@dividend
  2826  04D0  3183  2375  3184   	fcall	___awmod
  2827  04D3  087A               	movf	?___awmod+1,w
  2828  04D4  0020               	movlb	0	; select bank0
  2829  04D5  00A6               	movwf	displayLotteryResult@dig_4+1
  2830  04D6  0879               	movf	?___awmod,w
  2831  04D7  00A5               	movwf	displayLotteryResult@dig_4
  2832  04D8                     l1928:
  2833                           
  2834                           ;main.c: 243:   for(int x=0; x<3; x++){
  2835  04D8  01A9               	clrf	displayLotteryResult@x
  2836  04D9  01AA               	clrf	displayLotteryResult@x+1
  2837  04DA                     l1934:
  2838                           
  2839                           ;main.c: 244:     for(int i=1; i<7; i++){
  2840  04DA  3001               	movlw	1
  2841  04DB  0020               	movlb	0	; select bank0
  2842  04DC  00BD               	movwf	displayLotteryResult@i
  2843  04DD  3000               	movlw	0
  2844  04DE  00BE               	movwf	displayLotteryResult@i+1
  2845  04DF                     l1938:
  2846                           
  2847                           ;main.c: 245:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  2848  04DF  0020               	movlb	0	; select bank0
  2849  04E0  01AB               	clrf	displayLotteryResult@wait_cnt
  2850  04E1  01AC               	clrf	displayLotteryResult@wait_cnt+1
  2851  04E2                     l1944:
  2852                           
  2853                           ;main.c: 246:         for(int j=1; j<5; j++){
  2854  04E2  3001               	movlw	1
  2855  04E3  0020               	movlb	0	; select bank0
  2856  04E4  00BF               	movwf	displayLotteryResult@j
  2857  04E5  3000               	movlw	0
  2858  04E6  00C0               	movwf	displayLotteryResult@j+1
  2859  04E7                     l1948:
  2860                           
  2861                           ;main.c: 247:           selectDIG(j);
  2862  04E7  0020               	movlb	0	; select bank0
  2863  04E8  0840               	movf	displayLotteryResult@j+1,w
  2864  04E9  00F1               	movwf	selectDIG@dig+1
  2865  04EA  083F               	movf	displayLotteryResult@j,w
  2866  04EB  00F0               	movwf	selectDIG@dig
  2867  04EC  3182  22E2  3184   	fcall	_selectDIG
  2868                           
  2869                           ;main.c: 248:           displayRoll(i);
  2870  04EF  0020               	movlb	0	; select bank0
  2871  04F0  083E               	movf	displayLotteryResult@i+1,w
  2872  04F1  00F3               	movwf	displayRoll@cnt+1
  2873  04F2  083D               	movf	displayLotteryResult@i,w
  2874  04F3  00F2               	movwf	displayRoll@cnt
  2875  04F4  3183  2338  3184   	fcall	_displayRoll
  2876  04F7                     l1950:
  2877                           
  2878                           ;main.c: 249:         }
  2879  04F7  3001               	movlw	1
  2880  04F8  0020               	movlb	0	; select bank0
  2881  04F9  07BF               	addwf	displayLotteryResult@j,f
  2882  04FA  3000               	movlw	0
  2883  04FB  3DC0               	addwfc	displayLotteryResult@j+1,f
  2884  04FC                     l1952:
  2885  04FC  0840               	movf	displayLotteryResult@j+1,w
  2886  04FD  3A80               	xorlw	128
  2887  04FE  00A4               	movwf	??_displayLotteryResult
  2888  04FF  3080               	movlw	128
  2889  0500  0224               	subwf	??_displayLotteryResult,w
  2890  0501  1D03               	skipz
  2891  0502  2D05               	goto	u895
  2892  0503  3005               	movlw	5
  2893  0504  023F               	subwf	displayLotteryResult@j,w
  2894  0505                     u895:
  2895  0505  1C03               	skipc
  2896  0506  2D08               	goto	u891
  2897  0507  2D09               	goto	u890
  2898  0508                     u891:
  2899  0508  2CE7               	goto	l1948
  2900  0509                     u890:
  2901  0509                     l1954:
  2902                           
  2903                           ;main.c: 250:       }
  2904  0509  3001               	movlw	1
  2905  050A  0020               	movlb	0	; select bank0
  2906  050B  07AB               	addwf	displayLotteryResult@wait_cnt,f
  2907  050C  3000               	movlw	0
  2908  050D  3DAC               	addwfc	displayLotteryResult@wait_cnt+1,f
  2909  050E  082C               	movf	displayLotteryResult@wait_cnt+1,w
  2910  050F  3A80               	xorlw	128
  2911  0510  00A4               	movwf	??_displayLotteryResult
  2912  0511  3080               	movlw	128
  2913  0512  0224               	subwf	??_displayLotteryResult,w
  2914  0513  1D03               	skipz
  2915  0514  2D17               	goto	u905
  2916  0515  300A               	movlw	10
  2917  0516  022B               	subwf	displayLotteryResult@wait_cnt,w
  2918  0517                     u905:
  2919  0517  1C03               	skipc
  2920  0518  2D1A               	goto	u901
  2921  0519  2D1B               	goto	u900
  2922  051A                     u901:
  2923  051A  2CE2               	goto	l1944
  2924  051B                     u900:
  2925  051B                     l1956:
  2926                           
  2927                           ;main.c: 251:     }
  2928  051B  3001               	movlw	1
  2929  051C  0020               	movlb	0	; select bank0
  2930  051D  07BD               	addwf	displayLotteryResult@i,f
  2931  051E  3000               	movlw	0
  2932  051F  3DBE               	addwfc	displayLotteryResult@i+1,f
  2933  0520  083E               	movf	displayLotteryResult@i+1,w
  2934  0521  3A80               	xorlw	128
  2935  0522  00A4               	movwf	??_displayLotteryResult
  2936  0523  3080               	movlw	128
  2937  0524  0224               	subwf	??_displayLotteryResult,w
  2938  0525  1D03               	skipz
  2939  0526  2D29               	goto	u915
  2940  0527  3007               	movlw	7
  2941  0528  023D               	subwf	displayLotteryResult@i,w
  2942  0529                     u915:
  2943  0529  1C03               	skipc
  2944  052A  2D2C               	goto	u911
  2945  052B  2D2D               	goto	u910
  2946  052C                     u911:
  2947  052C  2CDF               	goto	l1938
  2948  052D                     u910:
  2949  052D                     l1958:
  2950                           
  2951                           ;main.c: 252:   }
  2952  052D  3001               	movlw	1
  2953  052E  0020               	movlb	0	; select bank0
  2954  052F  07A9               	addwf	displayLotteryResult@x,f
  2955  0530  3000               	movlw	0
  2956  0531  3DAA               	addwfc	displayLotteryResult@x+1,f
  2957  0532  082A               	movf	displayLotteryResult@x+1,w
  2958  0533  3A80               	xorlw	128
  2959  0534  00A4               	movwf	??_displayLotteryResult
  2960  0535  3080               	movlw	128
  2961  0536  0224               	subwf	??_displayLotteryResult,w
  2962  0537  1D03               	skipz
  2963  0538  2D3B               	goto	u925
  2964  0539  3003               	movlw	3
  2965  053A  0229               	subwf	displayLotteryResult@x,w
  2966  053B                     u925:
  2967  053B  1C03               	skipc
  2968  053C  2D3E               	goto	u921
  2969  053D  2D3F               	goto	u920
  2970  053E                     u921:
  2971  053E  2CDA               	goto	l1934
  2972  053F                     u920:
  2973  053F                     l1960:
  2974                           
  2975                           ;main.c: 255:   for(int x=0; x<1; x++){
  2976  053F  0020               	movlb	0	; select bank0
  2977  0540  01AD               	clrf	displayLotteryResult@x_399
  2978  0541  01AE               	clrf	displayLotteryResult@x_399+1
  2979  0542                     l1962:
  2980  0542  082E               	movf	displayLotteryResult@x_399+1,w
  2981  0543  3A80               	xorlw	128
  2982  0544  00A4               	movwf	??_displayLotteryResult
  2983  0545  3080               	movlw	128
  2984  0546  0224               	subwf	??_displayLotteryResult,w
  2985  0547  1D03               	skipz
  2986  0548  2D4B               	goto	u935
  2987  0549  3001               	movlw	1
  2988  054A  022D               	subwf	displayLotteryResult@x_399,w
  2989  054B                     u935:
  2990  054B  1C03               	skipc
  2991  054C  2D4E               	goto	u931
  2992  054D  2D4F               	goto	u930
  2993  054E                     u931:
  2994  054E  2D50               	goto	l1966
  2995  054F                     u930:
  2996  054F  2DED               	goto	l1998
  2997  0550                     l1966:
  2998                           
  2999                           ;main.c: 256:     for(int i=1; i<7; i++){
  3000  0550  3001               	movlw	1
  3001  0551  0020               	movlb	0	; select bank0
  3002  0552  00C1               	movwf	displayLotteryResult@i_400
  3003  0553  3000               	movlw	0
  3004  0554  00C2               	movwf	displayLotteryResult@i_400+1
  3005  0555  0842               	movf	displayLotteryResult@i_400+1,w
  3006  0556  3A80               	xorlw	128
  3007  0557  00A4               	movwf	??_displayLotteryResult
  3008  0558  3080               	movlw	128
  3009  0559  0224               	subwf	??_displayLotteryResult,w
  3010  055A  1D03               	skipz
  3011  055B  2D5E               	goto	u945
  3012  055C  3007               	movlw	7
  3013  055D  0241               	subwf	displayLotteryResult@i_400,w
  3014  055E                     u945:
  3015  055E  1C03               	skipc
  3016  055F  2D61               	goto	u941
  3017  0560  2D62               	goto	u940
  3018  0561                     u941:
  3019  0561  2D63               	goto	l1970
  3020  0562                     u940:
  3021  0562  2DDB               	goto	l1996
  3022  0563                     l1970:
  3023                           
  3024                           ;main.c: 257:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3025  0563  0020               	movlb	0	; select bank0
  3026  0564  01AF               	clrf	displayLotteryResult@wait_cnt_401
  3027  0565  01B0               	clrf	displayLotteryResult@wait_cnt_401+1
  3028  0566                     l1972:
  3029  0566  0830               	movf	displayLotteryResult@wait_cnt_401+1,w
  3030  0567  3A80               	xorlw	128
  3031  0568  00A4               	movwf	??_displayLotteryResult
  3032  0569  3080               	movlw	128
  3033  056A  0224               	subwf	??_displayLotteryResult,w
  3034  056B  1D03               	skipz
  3035  056C  2D6F               	goto	u955
  3036  056D  300A               	movlw	10
  3037  056E  022F               	subwf	displayLotteryResult@wait_cnt_401,w
  3038  056F                     u955:
  3039  056F  1C03               	skipc
  3040  0570  2D72               	goto	u951
  3041  0571  2D73               	goto	u950
  3042  0572                     u951:
  3043  0572  2D74               	goto	l1976
  3044  0573                     u950:
  3045  0573  2DC9               	goto	l1994
  3046  0574                     l1976:
  3047                           
  3048                           ;main.c: 258:         for(int j=1; j<5; j++){
  3049  0574  3001               	movlw	1
  3050  0575  0020               	movlb	0	; select bank0
  3051  0576  00C9               	movwf	displayLotteryResult@j_402
  3052  0577  3000               	movlw	0
  3053  0578  00CA               	movwf	displayLotteryResult@j_402+1
  3054  0579  084A               	movf	displayLotteryResult@j_402+1,w
  3055  057A  3A80               	xorlw	128
  3056  057B  00A4               	movwf	??_displayLotteryResult
  3057  057C  3080               	movlw	128
  3058  057D  0224               	subwf	??_displayLotteryResult,w
  3059  057E  1D03               	skipz
  3060  057F  2D82               	goto	u965
  3061  0580  3005               	movlw	5
  3062  0581  0249               	subwf	displayLotteryResult@j_402,w
  3063  0582                     u965:
  3064  0582  1C03               	skipc
  3065  0583  2D85               	goto	u961
  3066  0584  2D86               	goto	u960
  3067  0585                     u961:
  3068  0585  2D87               	goto	l1980
  3069  0586                     u960:
  3070  0586  2DB7               	goto	l1992
  3071  0587                     l1980:
  3072                           
  3073                           ;main.c: 259:           selectDIG(j);
  3074  0587  0020               	movlb	0	; select bank0
  3075  0588  084A               	movf	displayLotteryResult@j_402+1,w
  3076  0589  00F1               	movwf	selectDIG@dig+1
  3077  058A  0849               	movf	displayLotteryResult@j_402,w
  3078  058B  00F0               	movwf	selectDIG@dig
  3079  058C  3182  22E2  3184   	fcall	_selectDIG
  3080  058F                     l1982:
  3081                           
  3082                           ;main.c: 260:           if(j == 1){
  3083  058F  0020               	movlb	0	; select bank0
  3084  0590  0349               	decf	displayLotteryResult@j_402,w
  3085  0591  044A               	iorwf	displayLotteryResult@j_402+1,w
  3086  0592  1D03               	btfss	3,2
  3087  0593  2D95               	goto	u971
  3088  0594  2D96               	goto	u970
  3089  0595                     u971:
  3090  0595  2D9E               	goto	l1986
  3091  0596                     u970:
  3092  0596                     l1984:
  3093                           
  3094                           ;main.c: 261:             displaySegments(dig_1);
  3095  0596  0848               	movf	displayLotteryResult@dig_1+1,w
  3096  0597  00F3               	movwf	displaySegments@num+1
  3097  0598  0847               	movf	displayLotteryResult@dig_1,w
  3098  0599  00F2               	movwf	displaySegments@num
  3099  059A  3183  23C9  3184   	fcall	_displaySegments
  3100                           
  3101                           ;main.c: 262:           }else{
  3102  059D  2DA5               	goto	l1988
  3103  059E                     l1986:
  3104                           
  3105                           ;main.c: 263:             displayRoll(i);
  3106  059E  0842               	movf	displayLotteryResult@i_400+1,w
  3107  059F  00F3               	movwf	displayRoll@cnt+1
  3108  05A0  0841               	movf	displayLotteryResult@i_400,w
  3109  05A1  00F2               	movwf	displayRoll@cnt
  3110  05A2  3183  2338  3184   	fcall	_displayRoll
  3111  05A5                     l1988:
  3112                           
  3113                           ;main.c: 265:         }
  3114  05A5  3001               	movlw	1
  3115  05A6  0020               	movlb	0	; select bank0
  3116  05A7  07C9               	addwf	displayLotteryResult@j_402,f
  3117  05A8  3000               	movlw	0
  3118  05A9  3DCA               	addwfc	displayLotteryResult@j_402+1,f
  3119  05AA                     l1990:
  3120  05AA  084A               	movf	displayLotteryResult@j_402+1,w
  3121  05AB  3A80               	xorlw	128
  3122  05AC  00A4               	movwf	??_displayLotteryResult
  3123  05AD  3080               	movlw	128
  3124  05AE  0224               	subwf	??_displayLotteryResult,w
  3125  05AF  1D03               	skipz
  3126  05B0  2DB3               	goto	u985
  3127  05B1  3005               	movlw	5
  3128  05B2  0249               	subwf	displayLotteryResult@j_402,w
  3129  05B3                     u985:
  3130  05B3  1C03               	skipc
  3131  05B4  2DB6               	goto	u981
  3132  05B5  2DB7               	goto	u980
  3133  05B6                     u981:
  3134  05B6  2D87               	goto	l1980
  3135  05B7                     u980:
  3136  05B7                     l1992:
  3137                           
  3138                           ;main.c: 266:       }
  3139  05B7  3001               	movlw	1
  3140  05B8  0020               	movlb	0	; select bank0
  3141  05B9  07AF               	addwf	displayLotteryResult@wait_cnt_401,f
  3142  05BA  3000               	movlw	0
  3143  05BB  3DB0               	addwfc	displayLotteryResult@wait_cnt_401+1,f
  3144  05BC  0830               	movf	displayLotteryResult@wait_cnt_401+1,w
  3145  05BD  3A80               	xorlw	128
  3146  05BE  00A4               	movwf	??_displayLotteryResult
  3147  05BF  3080               	movlw	128
  3148  05C0  0224               	subwf	??_displayLotteryResult,w
  3149  05C1  1D03               	skipz
  3150  05C2  2DC5               	goto	u995
  3151  05C3  300A               	movlw	10
  3152  05C4  022F               	subwf	displayLotteryResult@wait_cnt_401,w
  3153  05C5                     u995:
  3154  05C5  1C03               	skipc
  3155  05C6  2DC8               	goto	u991
  3156  05C7  2DC9               	goto	u990
  3157  05C8                     u991:
  3158  05C8  2D74               	goto	l1976
  3159  05C9                     u990:
  3160  05C9                     l1994:
  3161                           
  3162                           ;main.c: 267:     }
  3163  05C9  3001               	movlw	1
  3164  05CA  0020               	movlb	0	; select bank0
  3165  05CB  07C1               	addwf	displayLotteryResult@i_400,f
  3166  05CC  3000               	movlw	0
  3167  05CD  3DC2               	addwfc	displayLotteryResult@i_400+1,f
  3168  05CE  0842               	movf	displayLotteryResult@i_400+1,w
  3169  05CF  3A80               	xorlw	128
  3170  05D0  00A4               	movwf	??_displayLotteryResult
  3171  05D1  3080               	movlw	128
  3172  05D2  0224               	subwf	??_displayLotteryResult,w
  3173  05D3  1D03               	skipz
  3174  05D4  2DD7               	goto	u1005
  3175  05D5  3007               	movlw	7
  3176  05D6  0241               	subwf	displayLotteryResult@i_400,w
  3177  05D7                     u1005:
  3178  05D7  1C03               	skipc
  3179  05D8  2DDA               	goto	u1001
  3180  05D9  2DDB               	goto	u1000
  3181  05DA                     u1001:
  3182  05DA  2D63               	goto	l1970
  3183  05DB                     u1000:
  3184  05DB                     l1996:
  3185                           
  3186                           ;main.c: 268:   }
  3187  05DB  3001               	movlw	1
  3188  05DC  0020               	movlb	0	; select bank0
  3189  05DD  07AD               	addwf	displayLotteryResult@x_399,f
  3190  05DE  3000               	movlw	0
  3191  05DF  3DAE               	addwfc	displayLotteryResult@x_399+1,f
  3192  05E0  082E               	movf	displayLotteryResult@x_399+1,w
  3193  05E1  3A80               	xorlw	128
  3194  05E2  00A4               	movwf	??_displayLotteryResult
  3195  05E3  3080               	movlw	128
  3196  05E4  0224               	subwf	??_displayLotteryResult,w
  3197  05E5  1D03               	skipz
  3198  05E6  2DE9               	goto	u1015
  3199  05E7  3001               	movlw	1
  3200  05E8  022D               	subwf	displayLotteryResult@x_399,w
  3201  05E9                     u1015:
  3202  05E9  1C03               	skipc
  3203  05EA  2DEC               	goto	u1011
  3204  05EB  2DED               	goto	u1010
  3205  05EC                     u1011:
  3206  05EC  2D50               	goto	l1966
  3207  05ED                     u1010:
  3208  05ED                     l1998:
  3209                           
  3210                           ;main.c: 271:   for(int x=0; x<1; x++){
  3211  05ED  0020               	movlb	0	; select bank0
  3212  05EE  01B1               	clrf	displayLotteryResult@x_404
  3213  05EF  01B2               	clrf	displayLotteryResult@x_404+1
  3214  05F0                     l2000:
  3215  05F0  0832               	movf	displayLotteryResult@x_404+1,w
  3216  05F1  3A80               	xorlw	128
  3217  05F2  00A4               	movwf	??_displayLotteryResult
  3218  05F3  3080               	movlw	128
  3219  05F4  0224               	subwf	??_displayLotteryResult,w
  3220  05F5  1D03               	skipz
  3221  05F6  2DF9               	goto	u1025
  3222  05F7  3001               	movlw	1
  3223  05F8  0231               	subwf	displayLotteryResult@x_404,w
  3224  05F9                     u1025:
  3225  05F9  1C03               	skipc
  3226  05FA  2DFC               	goto	u1021
  3227  05FB  2DFD               	goto	u1020
  3228  05FC                     u1021:
  3229  05FC  2DFE               	goto	l2004
  3230  05FD                     u1020:
  3231  05FD  2EAA               	goto	l2040
  3232  05FE                     l2004:
  3233                           
  3234                           ;main.c: 272:     for(int i=1; i<7; i++){
  3235  05FE  3001               	movlw	1
  3236  05FF  0020               	movlb	0	; select bank0
  3237  0600  00C3               	movwf	displayLotteryResult@i_405
  3238  0601  3000               	movlw	0
  3239  0602  00C4               	movwf	displayLotteryResult@i_405+1
  3240  0603  0844               	movf	displayLotteryResult@i_405+1,w
  3241  0604  3A80               	xorlw	128
  3242  0605  00A4               	movwf	??_displayLotteryResult
  3243  0606  3080               	movlw	128
  3244  0607  0224               	subwf	??_displayLotteryResult,w
  3245  0608  1D03               	skipz
  3246  0609  2E0C               	goto	u1035
  3247  060A  3007               	movlw	7
  3248  060B  0243               	subwf	displayLotteryResult@i_405,w
  3249  060C                     u1035:
  3250  060C  1C03               	skipc
  3251  060D  2E0F               	goto	u1031
  3252  060E  2E10               	goto	u1030
  3253  060F                     u1031:
  3254  060F  2E11               	goto	l2008
  3255  0610                     u1030:
  3256  0610  2E98               	goto	l2038
  3257  0611                     l2008:
  3258                           
  3259                           ;main.c: 273:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3260  0611  0020               	movlb	0	; select bank0
  3261  0612  01B3               	clrf	displayLotteryResult@wait_cnt_406
  3262  0613  01B4               	clrf	displayLotteryResult@wait_cnt_406+1
  3263  0614                     l2010:
  3264  0614  0834               	movf	displayLotteryResult@wait_cnt_406+1,w
  3265  0615  3A80               	xorlw	128
  3266  0616  00A4               	movwf	??_displayLotteryResult
  3267  0617  3080               	movlw	128
  3268  0618  0224               	subwf	??_displayLotteryResult,w
  3269  0619  1D03               	skipz
  3270  061A  2E1D               	goto	u1045
  3271  061B  300A               	movlw	10
  3272  061C  0233               	subwf	displayLotteryResult@wait_cnt_406,w
  3273  061D                     u1045:
  3274  061D  1C03               	skipc
  3275  061E  2E20               	goto	u1041
  3276  061F  2E21               	goto	u1040
  3277  0620                     u1041:
  3278  0620  2E22               	goto	l2014
  3279  0621                     u1040:
  3280  0621  2E86               	goto	l2036
  3281  0622                     l2014:
  3282                           
  3283                           ;main.c: 274:         for(int j=1; j<5; j++){
  3284  0622  3001               	movlw	1
  3285  0623  0020               	movlb	0	; select bank0
  3286  0624  00CB               	movwf	displayLotteryResult@j_407
  3287  0625  3000               	movlw	0
  3288  0626  00CC               	movwf	displayLotteryResult@j_407+1
  3289  0627  084C               	movf	displayLotteryResult@j_407+1,w
  3290  0628  3A80               	xorlw	128
  3291  0629  00A4               	movwf	??_displayLotteryResult
  3292  062A  3080               	movlw	128
  3293  062B  0224               	subwf	??_displayLotteryResult,w
  3294  062C  1D03               	skipz
  3295  062D  2E30               	goto	u1055
  3296  062E  3005               	movlw	5
  3297  062F  024B               	subwf	displayLotteryResult@j_407,w
  3298  0630                     u1055:
  3299  0630  1C03               	skipc
  3300  0631  2E33               	goto	u1051
  3301  0632  2E34               	goto	u1050
  3302  0633                     u1051:
  3303  0633  2E35               	goto	l2018
  3304  0634                     u1050:
  3305  0634  2E74               	goto	l2034
  3306  0635                     l2018:
  3307                           
  3308                           ;main.c: 275:           selectDIG(j);
  3309  0635  0020               	movlb	0	; select bank0
  3310  0636  084C               	movf	displayLotteryResult@j_407+1,w
  3311  0637  00F1               	movwf	selectDIG@dig+1
  3312  0638  084B               	movf	displayLotteryResult@j_407,w
  3313  0639  00F0               	movwf	selectDIG@dig
  3314  063A  3182  22E2  3184   	fcall	_selectDIG
  3315  063D                     l2020:
  3316                           
  3317                           ;main.c: 276:           if(j == 1){
  3318  063D  0020               	movlb	0	; select bank0
  3319  063E  034B               	decf	displayLotteryResult@j_407,w
  3320  063F  044C               	iorwf	displayLotteryResult@j_407+1,w
  3321  0640  1D03               	btfss	3,2
  3322  0641  2E43               	goto	u1061
  3323  0642  2E44               	goto	u1060
  3324  0643                     u1061:
  3325  0643  2E4C               	goto	l2024
  3326  0644                     u1060:
  3327  0644                     l2022:
  3328                           
  3329                           ;main.c: 277:             displaySegments(dig_1);
  3330  0644  0848               	movf	displayLotteryResult@dig_1+1,w
  3331  0645  00F3               	movwf	displaySegments@num+1
  3332  0646  0847               	movf	displayLotteryResult@dig_1,w
  3333  0647  00F2               	movwf	displaySegments@num
  3334  0648  3183  23C9  3184   	fcall	_displaySegments
  3335                           
  3336                           ;main.c: 278:           }else if(j == 2){
  3337  064B  2E62               	goto	l2030
  3338  064C                     l2024:
  3339  064C  3002               	movlw	2
  3340  064D  064B               	xorwf	displayLotteryResult@j_407,w
  3341  064E  044C               	iorwf	displayLotteryResult@j_407+1,w
  3342  064F  1D03               	btfss	3,2
  3343  0650  2E52               	goto	u1071
  3344  0651  2E53               	goto	u1070
  3345  0652                     u1071:
  3346  0652  2E5B               	goto	l2028
  3347  0653                     u1070:
  3348  0653                     l2026:
  3349                           
  3350                           ;main.c: 279:             displaySegments(dig_2);
  3351  0653  083C               	movf	displayLotteryResult@dig_2+1,w
  3352  0654  00F3               	movwf	displaySegments@num+1
  3353  0655  083B               	movf	displayLotteryResult@dig_2,w
  3354  0656  00F2               	movwf	displaySegments@num
  3355  0657  3183  23C9  3184   	fcall	_displaySegments
  3356                           
  3357                           ;main.c: 280:           }else{
  3358  065A  2E62               	goto	l2030
  3359  065B                     l2028:
  3360                           
  3361                           ;main.c: 281:             displayRoll(i);
  3362  065B  0844               	movf	displayLotteryResult@i_405+1,w
  3363  065C  00F3               	movwf	displayRoll@cnt+1
  3364  065D  0843               	movf	displayLotteryResult@i_405,w
  3365  065E  00F2               	movwf	displayRoll@cnt
  3366  065F  3183  2338  3184   	fcall	_displayRoll
  3367  0662                     l2030:
  3368                           
  3369                           ;main.c: 283:         }
  3370  0662  3001               	movlw	1
  3371  0663  0020               	movlb	0	; select bank0
  3372  0664  07CB               	addwf	displayLotteryResult@j_407,f
  3373  0665  3000               	movlw	0
  3374  0666  3DCC               	addwfc	displayLotteryResult@j_407+1,f
  3375  0667                     l2032:
  3376  0667  084C               	movf	displayLotteryResult@j_407+1,w
  3377  0668  3A80               	xorlw	128
  3378  0669  00A4               	movwf	??_displayLotteryResult
  3379  066A  3080               	movlw	128
  3380  066B  0224               	subwf	??_displayLotteryResult,w
  3381  066C  1D03               	skipz
  3382  066D  2E70               	goto	u1085
  3383  066E  3005               	movlw	5
  3384  066F  024B               	subwf	displayLotteryResult@j_407,w
  3385  0670                     u1085:
  3386  0670  1C03               	skipc
  3387  0671  2E73               	goto	u1081
  3388  0672  2E74               	goto	u1080
  3389  0673                     u1081:
  3390  0673  2E35               	goto	l2018
  3391  0674                     u1080:
  3392  0674                     l2034:
  3393                           
  3394                           ;main.c: 284:       }
  3395  0674  3001               	movlw	1
  3396  0675  0020               	movlb	0	; select bank0
  3397  0676  07B3               	addwf	displayLotteryResult@wait_cnt_406,f
  3398  0677  3000               	movlw	0
  3399  0678  3DB4               	addwfc	displayLotteryResult@wait_cnt_406+1,f
  3400  0679  0834               	movf	displayLotteryResult@wait_cnt_406+1,w
  3401  067A  3A80               	xorlw	128
  3402  067B  00A4               	movwf	??_displayLotteryResult
  3403  067C  3080               	movlw	128
  3404  067D  0224               	subwf	??_displayLotteryResult,w
  3405  067E  1D03               	skipz
  3406  067F  2E82               	goto	u1095
  3407  0680  300A               	movlw	10
  3408  0681  0233               	subwf	displayLotteryResult@wait_cnt_406,w
  3409  0682                     u1095:
  3410  0682  1C03               	skipc
  3411  0683  2E85               	goto	u1091
  3412  0684  2E86               	goto	u1090
  3413  0685                     u1091:
  3414  0685  2E22               	goto	l2014
  3415  0686                     u1090:
  3416  0686                     l2036:
  3417                           
  3418                           ;main.c: 285:     }
  3419  0686  3001               	movlw	1
  3420  0687  0020               	movlb	0	; select bank0
  3421  0688  07C3               	addwf	displayLotteryResult@i_405,f
  3422  0689  3000               	movlw	0
  3423  068A  3DC4               	addwfc	displayLotteryResult@i_405+1,f
  3424  068B  0844               	movf	displayLotteryResult@i_405+1,w
  3425  068C  3A80               	xorlw	128
  3426  068D  00A4               	movwf	??_displayLotteryResult
  3427  068E  3080               	movlw	128
  3428  068F  0224               	subwf	??_displayLotteryResult,w
  3429  0690  1D03               	skipz
  3430  0691  2E94               	goto	u1105
  3431  0692  3007               	movlw	7
  3432  0693  0243               	subwf	displayLotteryResult@i_405,w
  3433  0694                     u1105:
  3434  0694  1C03               	skipc
  3435  0695  2E97               	goto	u1101
  3436  0696  2E98               	goto	u1100
  3437  0697                     u1101:
  3438  0697  2E11               	goto	l2008
  3439  0698                     u1100:
  3440  0698                     l2038:
  3441                           
  3442                           ;main.c: 286:   }
  3443  0698  3001               	movlw	1
  3444  0699  0020               	movlb	0	; select bank0
  3445  069A  07B1               	addwf	displayLotteryResult@x_404,f
  3446  069B  3000               	movlw	0
  3447  069C  3DB2               	addwfc	displayLotteryResult@x_404+1,f
  3448  069D  0832               	movf	displayLotteryResult@x_404+1,w
  3449  069E  3A80               	xorlw	128
  3450  069F  00A4               	movwf	??_displayLotteryResult
  3451  06A0  3080               	movlw	128
  3452  06A1  0224               	subwf	??_displayLotteryResult,w
  3453  06A2  1D03               	skipz
  3454  06A3  2EA6               	goto	u1115
  3455  06A4  3001               	movlw	1
  3456  06A5  0231               	subwf	displayLotteryResult@x_404,w
  3457  06A6                     u1115:
  3458  06A6  1C03               	skipc
  3459  06A7  2EA9               	goto	u1111
  3460  06A8  2EAA               	goto	u1110
  3461  06A9                     u1111:
  3462  06A9  2DFE               	goto	l2004
  3463  06AA                     u1110:
  3464  06AA                     l2040:
  3465                           
  3466                           ;main.c: 289:   for(int x=0; x<1; x++){
  3467  06AA  0020               	movlb	0	; select bank0
  3468  06AB  01B5               	clrf	displayLotteryResult@x_408
  3469  06AC  01B6               	clrf	displayLotteryResult@x_408+1
  3470  06AD                     l2042:
  3471  06AD  0836               	movf	displayLotteryResult@x_408+1,w
  3472  06AE  3A80               	xorlw	128
  3473  06AF  00A4               	movwf	??_displayLotteryResult
  3474  06B0  3080               	movlw	128
  3475  06B1  0224               	subwf	??_displayLotteryResult,w
  3476  06B2  1D03               	skipz
  3477  06B3  2EB6               	goto	u1125
  3478  06B4  3001               	movlw	1
  3479  06B5  0235               	subwf	displayLotteryResult@x_408,w
  3480  06B6                     u1125:
  3481  06B6  1C03               	skipc
  3482  06B7  2EB9               	goto	u1121
  3483  06B8  2EBA               	goto	u1120
  3484  06B9                     u1121:
  3485  06B9  2EBB               	goto	l2046
  3486  06BA                     u1120:
  3487  06BA  2F76               	goto	l2086
  3488  06BB                     l2046:
  3489                           
  3490                           ;main.c: 290:     for(int i=1; i<7; i++){
  3491  06BB  3001               	movlw	1
  3492  06BC  0020               	movlb	0	; select bank0
  3493  06BD  00C5               	movwf	displayLotteryResult@i_409
  3494  06BE  3000               	movlw	0
  3495  06BF  00C6               	movwf	displayLotteryResult@i_409+1
  3496  06C0  0846               	movf	displayLotteryResult@i_409+1,w
  3497  06C1  3A80               	xorlw	128
  3498  06C2  00A4               	movwf	??_displayLotteryResult
  3499  06C3  3080               	movlw	128
  3500  06C4  0224               	subwf	??_displayLotteryResult,w
  3501  06C5  1D03               	skipz
  3502  06C6  2EC9               	goto	u1135
  3503  06C7  3007               	movlw	7
  3504  06C8  0245               	subwf	displayLotteryResult@i_409,w
  3505  06C9                     u1135:
  3506  06C9  1C03               	skipc
  3507  06CA  2ECC               	goto	u1131
  3508  06CB  2ECD               	goto	u1130
  3509  06CC                     u1131:
  3510  06CC  2ECE               	goto	l2050
  3511  06CD                     u1130:
  3512  06CD  2F64               	goto	l2084
  3513  06CE                     l2050:
  3514                           
  3515                           ;main.c: 291:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3516  06CE  0020               	movlb	0	; select bank0
  3517  06CF  01B7               	clrf	displayLotteryResult@wait_cnt_410
  3518  06D0  01B8               	clrf	displayLotteryResult@wait_cnt_410+1
  3519  06D1                     l2052:
  3520  06D1  0838               	movf	displayLotteryResult@wait_cnt_410+1,w
  3521  06D2  3A80               	xorlw	128
  3522  06D3  00A4               	movwf	??_displayLotteryResult
  3523  06D4  3080               	movlw	128
  3524  06D5  0224               	subwf	??_displayLotteryResult,w
  3525  06D6  1D03               	skipz
  3526  06D7  2EDA               	goto	u1145
  3527  06D8  300A               	movlw	10
  3528  06D9  0237               	subwf	displayLotteryResult@wait_cnt_410,w
  3529  06DA                     u1145:
  3530  06DA  1C03               	skipc
  3531  06DB  2EDD               	goto	u1141
  3532  06DC  2EDE               	goto	u1140
  3533  06DD                     u1141:
  3534  06DD  2EDF               	goto	l2056
  3535  06DE                     u1140:
  3536  06DE  2F52               	goto	l2082
  3537  06DF                     l2056:
  3538                           
  3539                           ;main.c: 292:         for(int j=1; j<5; j++){
  3540  06DF  3001               	movlw	1
  3541  06E0  0020               	movlb	0	; select bank0
  3542  06E1  00CD               	movwf	displayLotteryResult@j_411
  3543  06E2  3000               	movlw	0
  3544  06E3  00CE               	movwf	displayLotteryResult@j_411+1
  3545  06E4  084E               	movf	displayLotteryResult@j_411+1,w
  3546  06E5  3A80               	xorlw	128
  3547  06E6  00A4               	movwf	??_displayLotteryResult
  3548  06E7  3080               	movlw	128
  3549  06E8  0224               	subwf	??_displayLotteryResult,w
  3550  06E9  1D03               	skipz
  3551  06EA  2EED               	goto	u1155
  3552  06EB  3005               	movlw	5
  3553  06EC  024D               	subwf	displayLotteryResult@j_411,w
  3554  06ED                     u1155:
  3555  06ED  1C03               	skipc
  3556  06EE  2EF0               	goto	u1151
  3557  06EF  2EF1               	goto	u1150
  3558  06F0                     u1151:
  3559  06F0  2EF2               	goto	l2060
  3560  06F1                     u1150:
  3561  06F1  2F40               	goto	l2080
  3562  06F2                     l2060:
  3563                           
  3564                           ;main.c: 293:           selectDIG(j);
  3565  06F2  0020               	movlb	0	; select bank0
  3566  06F3  084E               	movf	displayLotteryResult@j_411+1,w
  3567  06F4  00F1               	movwf	selectDIG@dig+1
  3568  06F5  084D               	movf	displayLotteryResult@j_411,w
  3569  06F6  00F0               	movwf	selectDIG@dig
  3570  06F7  3182  22E2  3184   	fcall	_selectDIG
  3571  06FA                     l2062:
  3572                           
  3573                           ;main.c: 294:           if(j == 1){
  3574  06FA  0020               	movlb	0	; select bank0
  3575  06FB  034D               	decf	displayLotteryResult@j_411,w
  3576  06FC  044E               	iorwf	displayLotteryResult@j_411+1,w
  3577  06FD  1D03               	btfss	3,2
  3578  06FE  2F00               	goto	u1161
  3579  06FF  2F01               	goto	u1160
  3580  0700                     u1161:
  3581  0700  2F09               	goto	l2066
  3582  0701                     u1160:
  3583  0701                     l2064:
  3584                           
  3585                           ;main.c: 295:             displaySegments(dig_1);
  3586  0701  0848               	movf	displayLotteryResult@dig_1+1,w
  3587  0702  00F3               	movwf	displaySegments@num+1
  3588  0703  0847               	movf	displayLotteryResult@dig_1,w
  3589  0704  00F2               	movwf	displaySegments@num
  3590  0705  3183  23C9  3184   	fcall	_displaySegments
  3591                           
  3592                           ;main.c: 296:           }else if(j == 2){
  3593  0708  2F2E               	goto	l2076
  3594  0709                     l2066:
  3595  0709  3002               	movlw	2
  3596  070A  064D               	xorwf	displayLotteryResult@j_411,w
  3597  070B  044E               	iorwf	displayLotteryResult@j_411+1,w
  3598  070C  1D03               	btfss	3,2
  3599  070D  2F0F               	goto	u1171
  3600  070E  2F10               	goto	u1170
  3601  070F                     u1171:
  3602  070F  2F18               	goto	l2070
  3603  0710                     u1170:
  3604  0710                     l2068:
  3605                           
  3606                           ;main.c: 297:             displaySegments(dig_2);
  3607  0710  083C               	movf	displayLotteryResult@dig_2+1,w
  3608  0711  00F3               	movwf	displaySegments@num+1
  3609  0712  083B               	movf	displayLotteryResult@dig_2,w
  3610  0713  00F2               	movwf	displaySegments@num
  3611  0714  3183  23C9  3184   	fcall	_displaySegments
  3612                           
  3613                           ;main.c: 298:           }else if(j == 3){
  3614  0717  2F2E               	goto	l2076
  3615  0718                     l2070:
  3616  0718  3003               	movlw	3
  3617  0719  064D               	xorwf	displayLotteryResult@j_411,w
  3618  071A  044E               	iorwf	displayLotteryResult@j_411+1,w
  3619  071B  1D03               	btfss	3,2
  3620  071C  2F1E               	goto	u1181
  3621  071D  2F1F               	goto	u1180
  3622  071E                     u1181:
  3623  071E  2F27               	goto	l2074
  3624  071F                     u1180:
  3625  071F                     l2072:
  3626                           
  3627                           ;main.c: 299:             displaySegments(dig_3);
  3628  071F  0828               	movf	displayLotteryResult@dig_3+1,w
  3629  0720  00F3               	movwf	displaySegments@num+1
  3630  0721  0827               	movf	displayLotteryResult@dig_3,w
  3631  0722  00F2               	movwf	displaySegments@num
  3632  0723  3183  23C9  3184   	fcall	_displaySegments
  3633                           
  3634                           ;main.c: 300:           }else{
  3635  0726  2F2E               	goto	l2076
  3636  0727                     l2074:
  3637                           
  3638                           ;main.c: 301:             displayRoll(i);
  3639  0727  0846               	movf	displayLotteryResult@i_409+1,w
  3640  0728  00F3               	movwf	displayRoll@cnt+1
  3641  0729  0845               	movf	displayLotteryResult@i_409,w
  3642  072A  00F2               	movwf	displayRoll@cnt
  3643  072B  3183  2338  3184   	fcall	_displayRoll
  3644  072E                     l2076:
  3645                           
  3646                           ;main.c: 303:         }
  3647  072E  3001               	movlw	1
  3648  072F  0020               	movlb	0	; select bank0
  3649  0730  07CD               	addwf	displayLotteryResult@j_411,f
  3650  0731  3000               	movlw	0
  3651  0732  3DCE               	addwfc	displayLotteryResult@j_411+1,f
  3652  0733                     l2078:
  3653  0733  084E               	movf	displayLotteryResult@j_411+1,w
  3654  0734  3A80               	xorlw	128
  3655  0735  00A4               	movwf	??_displayLotteryResult
  3656  0736  3080               	movlw	128
  3657  0737  0224               	subwf	??_displayLotteryResult,w
  3658  0738  1D03               	skipz
  3659  0739  2F3C               	goto	u1195
  3660  073A  3005               	movlw	5
  3661  073B  024D               	subwf	displayLotteryResult@j_411,w
  3662  073C                     u1195:
  3663  073C  1C03               	skipc
  3664  073D  2F3F               	goto	u1191
  3665  073E  2F40               	goto	u1190
  3666  073F                     u1191:
  3667  073F  2EF2               	goto	l2060
  3668  0740                     u1190:
  3669  0740                     l2080:
  3670                           
  3671                           ;main.c: 304:       }
  3672  0740  3001               	movlw	1
  3673  0741  0020               	movlb	0	; select bank0
  3674  0742  07B7               	addwf	displayLotteryResult@wait_cnt_410,f
  3675  0743  3000               	movlw	0
  3676  0744  3DB8               	addwfc	displayLotteryResult@wait_cnt_410+1,f
  3677  0745  0838               	movf	displayLotteryResult@wait_cnt_410+1,w
  3678  0746  3A80               	xorlw	128
  3679  0747  00A4               	movwf	??_displayLotteryResult
  3680  0748  3080               	movlw	128
  3681  0749  0224               	subwf	??_displayLotteryResult,w
  3682  074A  1D03               	skipz
  3683  074B  2F4E               	goto	u1205
  3684  074C  300A               	movlw	10
  3685  074D  0237               	subwf	displayLotteryResult@wait_cnt_410,w
  3686  074E                     u1205:
  3687  074E  1C03               	skipc
  3688  074F  2F51               	goto	u1201
  3689  0750  2F52               	goto	u1200
  3690  0751                     u1201:
  3691  0751  2EDF               	goto	l2056
  3692  0752                     u1200:
  3693  0752                     l2082:
  3694                           
  3695                           ;main.c: 305:     }
  3696  0752  3001               	movlw	1
  3697  0753  0020               	movlb	0	; select bank0
  3698  0754  07C5               	addwf	displayLotteryResult@i_409,f
  3699  0755  3000               	movlw	0
  3700  0756  3DC6               	addwfc	displayLotteryResult@i_409+1,f
  3701  0757  0846               	movf	displayLotteryResult@i_409+1,w
  3702  0758  3A80               	xorlw	128
  3703  0759  00A4               	movwf	??_displayLotteryResult
  3704  075A  3080               	movlw	128
  3705  075B  0224               	subwf	??_displayLotteryResult,w
  3706  075C  1D03               	skipz
  3707  075D  2F60               	goto	u1215
  3708  075E  3007               	movlw	7
  3709  075F  0245               	subwf	displayLotteryResult@i_409,w
  3710  0760                     u1215:
  3711  0760  1C03               	skipc
  3712  0761  2F63               	goto	u1211
  3713  0762  2F64               	goto	u1210
  3714  0763                     u1211:
  3715  0763  2ECE               	goto	l2050
  3716  0764                     u1210:
  3717  0764                     l2084:
  3718                           
  3719                           ;main.c: 306:   }
  3720  0764  3001               	movlw	1
  3721  0765  0020               	movlb	0	; select bank0
  3722  0766  07B5               	addwf	displayLotteryResult@x_408,f
  3723  0767  3000               	movlw	0
  3724  0768  3DB6               	addwfc	displayLotteryResult@x_408+1,f
  3725  0769  0836               	movf	displayLotteryResult@x_408+1,w
  3726  076A  3A80               	xorlw	128
  3727  076B  00A4               	movwf	??_displayLotteryResult
  3728  076C  3080               	movlw	128
  3729  076D  0224               	subwf	??_displayLotteryResult,w
  3730  076E  1D03               	skipz
  3731  076F  2F72               	goto	u1225
  3732  0770  3001               	movlw	1
  3733  0771  0235               	subwf	displayLotteryResult@x_408,w
  3734  0772                     u1225:
  3735  0772  1C03               	skipc
  3736  0773  2F75               	goto	u1221
  3737  0774  2F76               	goto	u1220
  3738  0775                     u1221:
  3739  0775  2EBB               	goto	l2046
  3740  0776                     u1220:
  3741  0776                     l2086:
  3742                           
  3743                           ;main.c: 309:   for(int wait_cnt=0; wait_cnt<1000; wait_cnt++){
  3744  0776  0020               	movlb	0	; select bank0
  3745  0777  01B9               	clrf	displayLotteryResult@wait_cnt_412
  3746  0778  01BA               	clrf	displayLotteryResult@wait_cnt_412+1
  3747  0779                     l2088:
  3748  0779  083A               	movf	displayLotteryResult@wait_cnt_412+1,w
  3749  077A  3A80               	xorlw	128
  3750  077B  00A4               	movwf	??_displayLotteryResult
  3751  077C  3083               	movlw	131
  3752  077D  0224               	subwf	??_displayLotteryResult,w
  3753  077E  1D03               	skipz
  3754  077F  2F82               	goto	u1235
  3755  0780  30E8               	movlw	232
  3756  0781  0239               	subwf	displayLotteryResult@wait_cnt_412,w
  3757  0782                     u1235:
  3758  0782  1C03               	skipc
  3759  0783  2F85               	goto	u1231
  3760  0784  2F86               	goto	u1230
  3761  0785                     u1231:
  3762  0785  2F87               	goto	l2092
  3763  0786                     u1230:
  3764  0786  2FFA               	goto	l459
  3765  0787                     l2092:
  3766                           
  3767                           ;main.c: 310:     for(int j=1; j<5; j++){
  3768  0787  3001               	movlw	1
  3769  0788  0020               	movlb	0	; select bank0
  3770  0789  00CF               	movwf	displayLotteryResult@j_413
  3771  078A  3000               	movlw	0
  3772  078B  00D0               	movwf	displayLotteryResult@j_413+1
  3773  078C  0850               	movf	displayLotteryResult@j_413+1,w
  3774  078D  3A80               	xorlw	128
  3775  078E  00A4               	movwf	??_displayLotteryResult
  3776  078F  3080               	movlw	128
  3777  0790  0224               	subwf	??_displayLotteryResult,w
  3778  0791  1D03               	skipz
  3779  0792  2F95               	goto	u1245
  3780  0793  3005               	movlw	5
  3781  0794  024F               	subwf	displayLotteryResult@j_413,w
  3782  0795                     u1245:
  3783  0795  1C03               	skipc
  3784  0796  2F98               	goto	u1241
  3785  0797  2F99               	goto	u1240
  3786  0798                     u1241:
  3787  0798  2F9A               	goto	l2096
  3788  0799                     u1240:
  3789  0799  2FE8               	goto	l2116
  3790  079A                     l2096:
  3791                           
  3792                           ;main.c: 311:       selectDIG(j);
  3793  079A  0020               	movlb	0	; select bank0
  3794  079B  0850               	movf	displayLotteryResult@j_413+1,w
  3795  079C  00F1               	movwf	selectDIG@dig+1
  3796  079D  084F               	movf	displayLotteryResult@j_413,w
  3797  079E  00F0               	movwf	selectDIG@dig
  3798  079F  3182  22E2  3184   	fcall	_selectDIG
  3799  07A2                     l2098:
  3800                           
  3801                           ;main.c: 312:       if(j == 1){
  3802  07A2  0020               	movlb	0	; select bank0
  3803  07A3  034F               	decf	displayLotteryResult@j_413,w
  3804  07A4  0450               	iorwf	displayLotteryResult@j_413+1,w
  3805  07A5  1D03               	btfss	3,2
  3806  07A6  2FA8               	goto	u1251
  3807  07A7  2FA9               	goto	u1250
  3808  07A8                     u1251:
  3809  07A8  2FB1               	goto	l2102
  3810  07A9                     u1250:
  3811  07A9                     l2100:
  3812                           
  3813                           ;main.c: 313:         displaySegments(dig_1);
  3814  07A9  0848               	movf	displayLotteryResult@dig_1+1,w
  3815  07AA  00F3               	movwf	displaySegments@num+1
  3816  07AB  0847               	movf	displayLotteryResult@dig_1,w
  3817  07AC  00F2               	movwf	displaySegments@num
  3818  07AD  3183  23C9  3184   	fcall	_displaySegments
  3819                           
  3820                           ;main.c: 314:       }else if(j == 2){
  3821  07B0  2FD6               	goto	l2112
  3822  07B1                     l2102:
  3823  07B1  3002               	movlw	2
  3824  07B2  064F               	xorwf	displayLotteryResult@j_413,w
  3825  07B3  0450               	iorwf	displayLotteryResult@j_413+1,w
  3826  07B4  1D03               	btfss	3,2
  3827  07B5  2FB7               	goto	u1261
  3828  07B6  2FB8               	goto	u1260
  3829  07B7                     u1261:
  3830  07B7  2FC0               	goto	l2106
  3831  07B8                     u1260:
  3832  07B8                     l2104:
  3833                           
  3834                           ;main.c: 315:         displaySegments(dig_2);
  3835  07B8  083C               	movf	displayLotteryResult@dig_2+1,w
  3836  07B9  00F3               	movwf	displaySegments@num+1
  3837  07BA  083B               	movf	displayLotteryResult@dig_2,w
  3838  07BB  00F2               	movwf	displaySegments@num
  3839  07BC  3183  23C9  3184   	fcall	_displaySegments
  3840                           
  3841                           ;main.c: 316:       }else if(j == 3){
  3842  07BF  2FD6               	goto	l2112
  3843  07C0                     l2106:
  3844  07C0  3003               	movlw	3
  3845  07C1  064F               	xorwf	displayLotteryResult@j_413,w
  3846  07C2  0450               	iorwf	displayLotteryResult@j_413+1,w
  3847  07C3  1D03               	btfss	3,2
  3848  07C4  2FC6               	goto	u1271
  3849  07C5  2FC7               	goto	u1270
  3850  07C6                     u1271:
  3851  07C6  2FCF               	goto	l2110
  3852  07C7                     u1270:
  3853  07C7                     l2108:
  3854                           
  3855                           ;main.c: 317:         displaySegments(dig_3);
  3856  07C7  0828               	movf	displayLotteryResult@dig_3+1,w
  3857  07C8  00F3               	movwf	displaySegments@num+1
  3858  07C9  0827               	movf	displayLotteryResult@dig_3,w
  3859  07CA  00F2               	movwf	displaySegments@num
  3860  07CB  3183  23C9  3184   	fcall	_displaySegments
  3861                           
  3862                           ;main.c: 318:       }else{
  3863  07CE  2FD6               	goto	l2112
  3864  07CF                     l2110:
  3865                           
  3866                           ;main.c: 319:         displaySegments(dig_4);
  3867  07CF  0826               	movf	displayLotteryResult@dig_4+1,w
  3868  07D0  00F3               	movwf	displaySegments@num+1
  3869  07D1  0825               	movf	displayLotteryResult@dig_4,w
  3870  07D2  00F2               	movwf	displaySegments@num
  3871  07D3  3183  23C9  3184   	fcall	_displaySegments
  3872  07D6                     l2112:
  3873                           
  3874                           ;main.c: 321:     }
  3875  07D6  3001               	movlw	1
  3876  07D7  0020               	movlb	0	; select bank0
  3877  07D8  07CF               	addwf	displayLotteryResult@j_413,f
  3878  07D9  3000               	movlw	0
  3879  07DA  3DD0               	addwfc	displayLotteryResult@j_413+1,f
  3880  07DB                     l2114:
  3881  07DB  0850               	movf	displayLotteryResult@j_413+1,w
  3882  07DC  3A80               	xorlw	128
  3883  07DD  00A4               	movwf	??_displayLotteryResult
  3884  07DE  3080               	movlw	128
  3885  07DF  0224               	subwf	??_displayLotteryResult,w
  3886  07E0  1D03               	skipz
  3887  07E1  2FE4               	goto	u1285
  3888  07E2  3005               	movlw	5
  3889  07E3  024F               	subwf	displayLotteryResult@j_413,w
  3890  07E4                     u1285:
  3891  07E4  1C03               	skipc
  3892  07E5  2FE7               	goto	u1281
  3893  07E6  2FE8               	goto	u1280
  3894  07E7                     u1281:
  3895  07E7  2F9A               	goto	l2096
  3896  07E8                     u1280:
  3897  07E8                     l2116:
  3898                           
  3899                           ;main.c: 322:   }
  3900  07E8  3001               	movlw	1
  3901  07E9  0020               	movlb	0	; select bank0
  3902  07EA  07B9               	addwf	displayLotteryResult@wait_cnt_412,f
  3903  07EB  3000               	movlw	0
  3904  07EC  3DBA               	addwfc	displayLotteryResult@wait_cnt_412+1,f
  3905  07ED  083A               	movf	displayLotteryResult@wait_cnt_412+1,w
  3906  07EE  3A80               	xorlw	128
  3907  07EF  00A4               	movwf	??_displayLotteryResult
  3908  07F0  3083               	movlw	131
  3909  07F1  0224               	subwf	??_displayLotteryResult,w
  3910  07F2  1D03               	skipz
  3911  07F3  2FF6               	goto	u1295
  3912  07F4  30E8               	movlw	232
  3913  07F5  0239               	subwf	displayLotteryResult@wait_cnt_412,w
  3914  07F6                     u1295:
  3915  07F6  1C03               	skipc
  3916  07F7  2FF9               	goto	u1291
  3917  07F8  2FFA               	goto	u1290
  3918  07F9                     u1291:
  3919  07F9  2F87               	goto	l2092
  3920  07FA                     u1290:
  3921  07FA                     l459:
  3922  07FA  0008               	return
  3923  07FB                     __end_of_displayLotteryResult:
  3924                           
  3925                           	psect	text2
  3926  02E2                     __ptext2:	
  3927 ;; *************** function _selectDIG *****************
  3928 ;; Defined at:
  3929 ;;		line 176 in file "main.c"
  3930 ;; Parameters:    Size  Location     Type
  3931 ;;  dig             2    0[COMMON] int 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;Total ram usage:        2 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 1
  3950 ;; This function calls:
  3951 ;;		_displayClear
  3952 ;; This function is called by:
  3953 ;;		_displayLotteryResult
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           
  3958                           ;psect for function _selectDIG
  3959  02E2                     _selectDIG:
  3960  02E2                     l1812:	
  3961                           ;incstack = 0
  3962                           ; Regs used in _selectDIG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3963                           
  3964                           
  3965                           ;main.c: 177:   displayClear();
  3966  02E2  3182  222E  3182   	fcall	_displayClear
  3967  02E5                     l1814:
  3968  02E5  0022               	movlb	2	; select bank2
  3969  02E6  178D               	bsf	13,7	;volatile
  3970  02E7                     l1816:
  3971  02E7  170D               	bsf	13,6	;volatile
  3972  02E8                     l1818:
  3973  02E8  150E               	bsf	14,2	;volatile
  3974  02E9                     l1820:
  3975  02E9  148E               	bsf	14,1	;volatile
  3976  02EA  2AF3               	goto	l1824
  3977  02EB                     l353:	
  3978                           ;main.c: 186:       do { LATBbits.LATB7 = 0; } while(0);
  3979                           
  3980  02EB  138D               	bcf	13,7	;volatile
  3981  02EC  2B06               	goto	l366
  3982  02ED                     l357:	
  3983                           ;main.c: 189:       do { LATBbits.LATB6 = 0; } while(0);
  3984                           
  3985  02ED  130D               	bcf	13,6	;volatile
  3986  02EE  2B06               	goto	l366
  3987  02EF                     l360:	
  3988                           ;main.c: 192:       do { LATCbits.LATC2 = 0; } while(0);
  3989                           
  3990  02EF  110E               	bcf	14,2	;volatile
  3991  02F0  2B06               	goto	l366
  3992  02F1                     l363:	
  3993                           ;main.c: 195:       do { LATCbits.LATC1 = 0; } while(0);
  3994                           
  3995  02F1  108E               	bcf	14,1	;volatile
  3996  02F2  2B06               	goto	l366
  3997  02F3                     l1824:
  3998                           
  3999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4000                           ; Switch size 1, requested type "simple"
  4001                           ; Number of cases is 1, Range of values is 0 to 0
  4002                           ; switch strategies available:
  4003                           ; Name         Instructions Cycles
  4004                           ; simple_byte            4     3 (average)
  4005                           ; direct_byte            8     6 (fixed)
  4006                           ; jumptable            260     6 (fixed)
  4007                           ;	Chosen strategy is simple_byte
  4008  02F3  0871               	movf	selectDIG@dig+1,w
  4009  02F4  3A00               	xorlw	0	; case 0
  4010  02F5  1903               	skipnz
  4011  02F6  2AF8               	goto	l2194
  4012  02F7  2B06               	goto	l366
  4013  02F8                     l2194:
  4014                           
  4015                           ; Switch size 1, requested type "simple"
  4016                           ; Number of cases is 4, Range of values is 1 to 4
  4017                           ; switch strategies available:
  4018                           ; Name         Instructions Cycles
  4019                           ; simple_byte           13     7 (average)
  4020                           ; direct_byte           17     9 (fixed)
  4021                           ; jumptable            263     9 (fixed)
  4022                           ;	Chosen strategy is simple_byte
  4023  02F8  0870               	movf	selectDIG@dig,w
  4024  02F9  3A01               	xorlw	1	; case 1
  4025  02FA  1903               	skipnz
  4026  02FB  2AEB               	goto	l353
  4027  02FC  3A03               	xorlw	3	; case 2
  4028  02FD  1903               	skipnz
  4029  02FE  2AED               	goto	l357
  4030  02FF  3A01               	xorlw	1	; case 3
  4031  0300  1903               	skipnz
  4032  0301  2AEF               	goto	l360
  4033  0302  3A07               	xorlw	7	; case 4
  4034  0303  1903               	skipnz
  4035  0304  2AF1               	goto	l363
  4036  0305  2B06               	goto	l366
  4037  0306                     l366:
  4038  0306  0008               	return
  4039  0307                     __end_of_selectDIG:
  4040                           
  4041                           	psect	text3
  4042  03C9                     __ptext3:	
  4043 ;; *************** function _displaySegments *****************
  4044 ;; Defined at:
  4045 ;;		line 135 in file "main.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  num             2    2[COMMON] int 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1    wreg      void 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4063 ;;Total ram usage:        2 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 2
  4066 ;; This function calls:
  4067 ;;		_DELAY_milliseconds
  4068 ;;		_displayClear
  4069 ;;		_displayEight
  4070 ;;		_displayFive
  4071 ;;		_displayFour
  4072 ;;		_displayNine
  4073 ;;		_displayOne
  4074 ;;		_displaySeven
  4075 ;;		_displaySix
  4076 ;;		_displayThree
  4077 ;;		_displayTwo
  4078 ;;		_displayZero
  4079 ;; This function is called by:
  4080 ;;		_displayLotteryResult
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084                           
  4085                           ;psect for function _displaySegments
  4086  03C9                     _displaySegments:
  4087  03C9                     l1780:	
  4088                           ;incstack = 0
  4089                           ; Regs used in _displaySegments: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4090                           
  4091                           
  4092                           ;main.c: 136:   displayClear();
  4093  03C9  3182  222E  3183   	fcall	_displayClear
  4094                           
  4095                           ;main.c: 137:   switch (num)
  4096  03CC  2BF5               	goto	l1804
  4097  03CD                     l1782:
  4098                           
  4099                           ;main.c: 140:     displayZero();
  4100  03CD  3182  227C  3183   	fcall	_displayZero
  4101                           
  4102                           ;main.c: 141:     break;
  4103  03D0  2C1A               	goto	l1806
  4104  03D1                     l1784:
  4105                           
  4106                           ;main.c: 143:     displayOne();
  4107  03D1  3182  221F  3183   	fcall	_displayOne
  4108                           
  4109                           ;main.c: 144:     break;
  4110  03D4  2C1A               	goto	l1806
  4111  03D5                     l1786:
  4112                           
  4113                           ;main.c: 146:     displayTwo();
  4114  03D5  3182  2267  3183   	fcall	_displayTwo
  4115                           
  4116                           ;main.c: 147:     break;
  4117  03D8  2C1A               	goto	l1806
  4118  03D9                     l1788:
  4119                           
  4120                           ;main.c: 149:     displayThree();
  4121  03D9  3182  225D  3183   	fcall	_displayThree
  4122                           
  4123                           ;main.c: 150:     break;
  4124  03DC  2C1A               	goto	l1806
  4125  03DD                     l1790:
  4126                           
  4127                           ;main.c: 152:     displayFour();
  4128  03DD  3182  2237  3183   	fcall	_displayFour
  4129                           
  4130                           ;main.c: 153:     break;
  4131  03E0  2C1A               	goto	l1806
  4132  03E1                     l1792:
  4133                           
  4134                           ;main.c: 155:     displayFive();
  4135  03E1  3182  2249  3183   	fcall	_displayFive
  4136                           
  4137                           ;main.c: 156:     break;
  4138  03E4  2C1A               	goto	l1806
  4139  03E5                     l1794:
  4140                           
  4141                           ;main.c: 158:     displaySix();
  4142  03E5  3182  2271  3183   	fcall	_displaySix
  4143                           
  4144                           ;main.c: 159:     break;
  4145  03E8  2C1A               	goto	l1806
  4146  03E9                     l1796:
  4147                           
  4148                           ;main.c: 161:     displaySeven();
  4149  03E9  3182  2240  3183   	fcall	_displaySeven
  4150                           
  4151                           ;main.c: 162:     break;
  4152  03EC  2C1A               	goto	l1806
  4153  03ED                     l1798:
  4154                           
  4155                           ;main.c: 164:     displayEight();
  4156  03ED  3182  2287  3183   	fcall	_displayEight
  4157                           
  4158                           ;main.c: 165:     break;
  4159  03F0  2C1A               	goto	l1806
  4160  03F1                     l1800:
  4161                           
  4162                           ;main.c: 167:     displayNine();
  4163  03F1  3182  2253  3183   	fcall	_displayNine
  4164                           
  4165                           ;main.c: 168:     break;
  4166  03F4  2C1A               	goto	l1806
  4167  03F5                     l1804:
  4168                           
  4169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4170                           ; Switch size 1, requested type "simple"
  4171                           ; Number of cases is 1, Range of values is 0 to 0
  4172                           ; switch strategies available:
  4173                           ; Name         Instructions Cycles
  4174                           ; simple_byte            4     3 (average)
  4175                           ; direct_byte            8     6 (fixed)
  4176                           ; jumptable            260     6 (fixed)
  4177                           ;	Chosen strategy is simple_byte
  4178  03F5  0873               	movf	displaySegments@num+1,w
  4179  03F6  3A00               	xorlw	0	; case 0
  4180  03F7  1903               	skipnz
  4181  03F8  2BFA               	goto	l2196
  4182  03F9  2C21               	goto	l340
  4183  03FA                     l2196:
  4184                           
  4185                           ; Switch size 1, requested type "simple"
  4186                           ; Number of cases is 10, Range of values is 0 to 9
  4187                           ; switch strategies available:
  4188                           ; Name         Instructions Cycles
  4189                           ; direct_byte           26     6 (fixed)
  4190                           ; simple_byte           31    16 (average)
  4191                           ; jumptable            260     6 (fixed)
  4192                           ;	Chosen strategy is simple_byte
  4193  03FA  0872               	movf	displaySegments@num,w
  4194  03FB  3A00               	xorlw	0	; case 0
  4195  03FC  1903               	skipnz
  4196  03FD  2BCD               	goto	l1782
  4197  03FE  3A01               	xorlw	1	; case 1
  4198  03FF  1903               	skipnz
  4199  0400  2BD1               	goto	l1784
  4200  0401  3A03               	xorlw	3	; case 2
  4201  0402  1903               	skipnz
  4202  0403  2BD5               	goto	l1786
  4203  0404  3A01               	xorlw	1	; case 3
  4204  0405  1903               	skipnz
  4205  0406  2BD9               	goto	l1788
  4206  0407  3A07               	xorlw	7	; case 4
  4207  0408  1903               	skipnz
  4208  0409  2BDD               	goto	l1790
  4209  040A  3A01               	xorlw	1	; case 5
  4210  040B  1903               	skipnz
  4211  040C  2BE1               	goto	l1792
  4212  040D  3A03               	xorlw	3	; case 6
  4213  040E  1903               	skipnz
  4214  040F  2BE5               	goto	l1794
  4215  0410  3A01               	xorlw	1	; case 7
  4216  0411  1903               	skipnz
  4217  0412  2BE9               	goto	l1796
  4218  0413  3A0F               	xorlw	15	; case 8
  4219  0414  1903               	skipnz
  4220  0415  2BED               	goto	l1798
  4221  0416  3A01               	xorlw	1	; case 9
  4222  0417  1903               	skipnz
  4223  0418  2BF1               	goto	l1800
  4224  0419  2C21               	goto	l340
  4225  041A                     l1806:
  4226                           
  4227                           ;main.c: 173:   DELAY_milliseconds(1);
  4228  041A  3001               	movlw	1
  4229  041B  00F0               	movwf	DELAY_milliseconds@milliseconds
  4230  041C  3000               	movlw	0
  4231  041D  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  4232  041E  3182  22AE  3183   	fcall	_DELAY_milliseconds
  4233  0421                     l340:
  4234  0421  0008               	return
  4235  0422                     __end_of_displaySegments:
  4236                           
  4237                           	psect	text4
  4238  027C                     __ptext4:	
  4239 ;; *************** function _displayZero *****************
  4240 ;; Defined at:
  4241 ;;		line 55 in file "main.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		status,2, status,0, pclath, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 1
  4262 ;; This function calls:
  4263 ;;		_displayClear
  4264 ;; This function is called by:
  4265 ;;		_displaySegments
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _displayZero
  4271  027C                     _displayZero:
  4272  027C                     l1644:	
  4273                           ;incstack = 0
  4274                           ; Regs used in _displayZero: [status,2+status,0+pclath+cstack]
  4275                           
  4276                           
  4277                           ;main.c: 56:   displayClear();
  4278  027C  3182  222E  3182   	fcall	_displayClear
  4279  027F                     l1646:
  4280  027F  0022               	movlb	2	; select bank2
  4281  0280  128C               	bcf	12,5	;volatile
  4282  0281                     l1648:
  4283  0281  120C               	bcf	12,4	;volatile
  4284  0282                     l1650:
  4285  0282  128E               	bcf	14,5	;volatile
  4286  0283                     l1652:
  4287  0283  120E               	bcf	14,4	;volatile
  4288  0284                     l1654:
  4289  0284  118E               	bcf	14,3	;volatile
  4290  0285                     l1656:
  4291  0285  130E               	bcf	14,6	;volatile
  4292  0286                     l211:
  4293  0286  0008               	return
  4294  0287                     __end_of_displayZero:
  4295                           
  4296                           	psect	text5
  4297  0267                     __ptext5:	
  4298 ;; *************** function _displayTwo *****************
  4299 ;; Defined at:
  4300 ;;		line 69 in file "main.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		status,2, status,0, pclath, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 1
  4321 ;; This function calls:
  4322 ;;		_displayClear
  4323 ;; This function is called by:
  4324 ;;		_displaySegments
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _displayTwo
  4330  0267                     _displayTwo:
  4331  0267                     l1664:	
  4332                           ;incstack = 0
  4333                           ; Regs used in _displayTwo: [status,2+status,0+pclath+cstack]
  4334                           
  4335                           
  4336                           ;main.c: 70:   displayClear();
  4337  0267  3182  222E  3182   	fcall	_displayClear
  4338  026A                     l1666:
  4339  026A  0022               	movlb	2	; select bank2
  4340  026B  128C               	bcf	12,5	;volatile
  4341  026C                     l1668:
  4342  026C  120C               	bcf	12,4	;volatile
  4343  026D                     l1670:
  4344  026D  138E               	bcf	14,7	;volatile
  4345  026E                     l1672:
  4346  026E  118E               	bcf	14,3	;volatile
  4347  026F                     l1674:
  4348  026F  120E               	bcf	14,4	;volatile
  4349  0270                     l231:
  4350  0270  0008               	return
  4351  0271                     __end_of_displayTwo:
  4352                           
  4353                           	psect	text6
  4354  025D                     __ptext6:	
  4355 ;; *************** function _displayThree *****************
  4356 ;; Defined at:
  4357 ;;		line 77 in file "main.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;		None
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      void 
  4364 ;; Registers used:
  4365 ;;		status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;Total ram usage:        0 bytes
  4376 ;; Hardware stack levels used: 1
  4377 ;; Hardware stack levels required when called: 1
  4378 ;; This function calls:
  4379 ;;		_displayClear
  4380 ;; This function is called by:
  4381 ;;		_displaySegments
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           
  4386                           ;psect for function _displayThree
  4387  025D                     _displayThree:
  4388  025D                     l1676:	
  4389                           ;incstack = 0
  4390                           ; Regs used in _displayThree: [status,2+status,0+pclath+cstack]
  4391                           
  4392                           
  4393                           ;main.c: 78:   displayClear();
  4394  025D  3182  222E  3182   	fcall	_displayClear
  4395  0260                     l1678:
  4396  0260  0022               	movlb	2	; select bank2
  4397  0261  128C               	bcf	12,5	;volatile
  4398  0262                     l1680:
  4399  0262  120C               	bcf	12,4	;volatile
  4400  0263                     l1682:
  4401  0263  138E               	bcf	14,7	;volatile
  4402  0264                     l1684:
  4403  0264  128E               	bcf	14,5	;volatile
  4404  0265                     l1686:
  4405  0265  120E               	bcf	14,4	;volatile
  4406  0266                     l244:
  4407  0266  0008               	return
  4408  0267                     __end_of_displayThree:
  4409                           
  4410                           	psect	text7
  4411  0271                     __ptext7:	
  4412 ;; *************** function _displaySix *****************
  4413 ;; Defined at:
  4414 ;;		line 100 in file "main.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;		None
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		status,2, status,0, pclath, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;Total ram usage:        0 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 1
  4435 ;; This function calls:
  4436 ;;		_displayClear
  4437 ;; This function is called by:
  4438 ;;		_displaySegments
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           
  4443                           ;psect for function _displaySix
  4444  0271                     _displaySix:
  4445  0271                     l1710:	
  4446                           ;incstack = 0
  4447                           ; Regs used in _displaySix: [status,2+status,0+pclath+cstack]
  4448                           
  4449                           
  4450                           ;main.c: 101:   displayClear();
  4451  0271  3182  222E  3182   	fcall	_displayClear
  4452  0274                     l1712:
  4453  0274  0022               	movlb	2	; select bank2
  4454  0275  128C               	bcf	12,5	;volatile
  4455  0276                     l1714:
  4456  0276  130E               	bcf	14,6	;volatile
  4457  0277                     l1716:
  4458  0277  138E               	bcf	14,7	;volatile
  4459  0278                     l1718:
  4460  0278  128E               	bcf	14,5	;volatile
  4461  0279                     l1720:
  4462  0279  120E               	bcf	14,4	;volatile
  4463  027A                     l1722:
  4464  027A  118E               	bcf	14,3	;volatile
  4465  027B                     l283:
  4466  027B  0008               	return
  4467  027C                     __end_of_displaySix:
  4468                           
  4469                           	psect	text8
  4470  0240                     __ptext8:	
  4471 ;; *************** function _displaySeven *****************
  4472 ;; Defined at:
  4473 ;;		line 109 in file "main.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;		None
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  1    wreg      void 
  4480 ;; Registers used:
  4481 ;;		status,2, status,0, pclath, cstack
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;Total ram usage:        0 bytes
  4492 ;; Hardware stack levels used: 1
  4493 ;; Hardware stack levels required when called: 1
  4494 ;; This function calls:
  4495 ;;		_displayClear
  4496 ;; This function is called by:
  4497 ;;		_displaySegments
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           
  4502                           ;psect for function _displaySeven
  4503  0240                     _displaySeven:
  4504  0240                     l1724:	
  4505                           ;incstack = 0
  4506                           ; Regs used in _displaySeven: [status,2+status,0+pclath+cstack]
  4507                           
  4508                           
  4509                           ;main.c: 110:   displayClear();
  4510  0240  3182  222E  3182   	fcall	_displayClear
  4511  0243                     l1726:
  4512  0243  0022               	movlb	2	; select bank2
  4513  0244  130E               	bcf	14,6	;volatile
  4514  0245                     l1728:
  4515  0245  128C               	bcf	12,5	;volatile
  4516  0246                     l1730:
  4517  0246  120C               	bcf	12,4	;volatile
  4518  0247                     l1732:
  4519  0247  128E               	bcf	14,5	;volatile
  4520  0248                     l294:
  4521  0248  0008               	return
  4522  0249                     __end_of_displaySeven:
  4523                           
  4524                           	psect	text9
  4525  021F                     __ptext9:	
  4526 ;; *************** function _displayOne *****************
  4527 ;; Defined at:
  4528 ;;		line 64 in file "main.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		status,2, status,0, pclath, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 1
  4549 ;; This function calls:
  4550 ;;		_displayClear
  4551 ;; This function is called by:
  4552 ;;		_displaySegments
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _displayOne
  4558  021F                     _displayOne:
  4559  021F                     l1658:	
  4560                           ;incstack = 0
  4561                           ; Regs used in _displayOne: [status,2+status,0+pclath+cstack]
  4562                           
  4563                           
  4564                           ;main.c: 65:   displayClear();
  4565  021F  3182  222E  3182   	fcall	_displayClear
  4566  0222                     l1660:
  4567  0222  0022               	movlb	2	; select bank2
  4568  0223  120C               	bcf	12,4	;volatile
  4569  0224                     l1662:
  4570  0224  128E               	bcf	14,5	;volatile
  4571  0225                     l218:
  4572  0225  0008               	return
  4573  0226                     __end_of_displayOne:
  4574                           
  4575                           	psect	text10
  4576  0253                     __ptext10:	
  4577 ;; *************** function _displayNine *****************
  4578 ;; Defined at:
  4579 ;;		line 126 in file "main.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;		None
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;		None
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		status,2, status,0, pclath, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;Total ram usage:        0 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 1
  4600 ;; This function calls:
  4601 ;;		_displayClear
  4602 ;; This function is called by:
  4603 ;;		_displaySegments
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function _displayNine
  4609  0253                     _displayNine:
  4610  0253                     l1750:	
  4611                           ;incstack = 0
  4612                           ; Regs used in _displayNine: [status,2+status,0+pclath+cstack]
  4613                           
  4614                           
  4615                           ;main.c: 127:   displayClear();
  4616  0253  3182  222E  3182   	fcall	_displayClear
  4617  0256                     l1752:
  4618  0256  0022               	movlb	2	; select bank2
  4619  0257  128C               	bcf	12,5	;volatile
  4620  0258                     l1754:
  4621  0258  120C               	bcf	12,4	;volatile
  4622  0259                     l1756:
  4623  0259  138E               	bcf	14,7	;volatile
  4624  025A                     l1758:
  4625  025A  130E               	bcf	14,6	;volatile
  4626  025B                     l1760:
  4627  025B  128E               	bcf	14,5	;volatile
  4628  025C                     l324:
  4629  025C  0008               	return
  4630  025D                     __end_of_displayNine:
  4631                           
  4632                           	psect	text11
  4633  0237                     __ptext11:	
  4634 ;; *************** function _displayFour *****************
  4635 ;; Defined at:
  4636 ;;		line 85 in file "main.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		status,2, status,0, pclath, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        0 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; Hardware stack levels required when called: 1
  4657 ;; This function calls:
  4658 ;;		_displayClear
  4659 ;; This function is called by:
  4660 ;;		_displaySegments
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           
  4665                           ;psect for function _displayFour
  4666  0237                     _displayFour:
  4667  0237                     l1688:	
  4668                           ;incstack = 0
  4669                           ; Regs used in _displayFour: [status,2+status,0+pclath+cstack]
  4670                           
  4671                           
  4672                           ;main.c: 86:   displayClear();
  4673  0237  3182  222E  3182   	fcall	_displayClear
  4674  023A                     l1690:
  4675  023A  0022               	movlb	2	; select bank2
  4676  023B  130E               	bcf	14,6	;volatile
  4677  023C                     l1692:
  4678  023C  138E               	bcf	14,7	;volatile
  4679  023D                     l1694:
  4680  023D  120C               	bcf	12,4	;volatile
  4681  023E                     l1696:
  4682  023E  128E               	bcf	14,5	;volatile
  4683  023F                     l255:
  4684  023F  0008               	return
  4685  0240                     __end_of_displayFour:
  4686                           
  4687                           	psect	text12
  4688  0249                     __ptext12:	
  4689 ;; *************** function _displayFive *****************
  4690 ;; Defined at:
  4691 ;;		line 92 in file "main.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 1
  4712 ;; This function calls:
  4713 ;;		_displayClear
  4714 ;; This function is called by:
  4715 ;;		_displaySegments
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _displayFive
  4721  0249                     _displayFive:
  4722  0249                     l1698:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _displayFive: [status,2+status,0+pclath+cstack]
  4725                           
  4726                           
  4727                           ;main.c: 93:   displayClear();
  4728  0249  3182  222E  3182   	fcall	_displayClear
  4729  024C                     l1700:
  4730  024C  0022               	movlb	2	; select bank2
  4731  024D  128C               	bcf	12,5	;volatile
  4732  024E                     l1702:
  4733  024E  130E               	bcf	14,6	;volatile
  4734  024F                     l1704:
  4735  024F  138E               	bcf	14,7	;volatile
  4736  0250                     l1706:
  4737  0250  128E               	bcf	14,5	;volatile
  4738  0251                     l1708:
  4739  0251  120E               	bcf	14,4	;volatile
  4740  0252                     l268:
  4741  0252  0008               	return
  4742  0253                     __end_of_displayFive:
  4743                           
  4744                           	psect	text13
  4745  0287                     __ptext13:	
  4746 ;; *************** function _displayEight *****************
  4747 ;; Defined at:
  4748 ;;		line 116 in file "main.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		status,2, status,0, pclath, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; Hardware stack levels required when called: 1
  4769 ;; This function calls:
  4770 ;;		_displayClear
  4771 ;; This function is called by:
  4772 ;;		_displaySegments
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _displayEight
  4778  0287                     _displayEight:
  4779  0287                     l1734:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _displayEight: [status,2+status,0+pclath+cstack]
  4782                           
  4783                           
  4784                           ;main.c: 117:   displayClear();
  4785  0287  3182  222E  3182   	fcall	_displayClear
  4786  028A                     l1736:
  4787  028A  0022               	movlb	2	; select bank2
  4788  028B  128C               	bcf	12,5	;volatile
  4789  028C                     l1738:
  4790  028C  120C               	bcf	12,4	;volatile
  4791  028D                     l1740:
  4792  028D  128E               	bcf	14,5	;volatile
  4793  028E                     l1742:
  4794  028E  120E               	bcf	14,4	;volatile
  4795  028F                     l1744:
  4796  028F  118E               	bcf	14,3	;volatile
  4797  0290                     l1746:
  4798  0290  130E               	bcf	14,6	;volatile
  4799  0291                     l1748:
  4800  0291  138E               	bcf	14,7	;volatile
  4801  0292                     l311:
  4802  0292  0008               	return
  4803  0293                     __end_of_displayEight:
  4804                           
  4805                           	psect	text14
  4806  0338                     __ptext14:	
  4807 ;; *************** function _displayRoll *****************
  4808 ;; Defined at:
  4809 ;;		line 203 in file "main.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  cnt             2    2[COMMON] int 
  4812 ;; Auto vars:     Size  Location     Type
  4813 ;;		None
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  1    wreg      void 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4826 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4827 ;;Total ram usage:        2 bytes
  4828 ;; Hardware stack levels used: 1
  4829 ;; Hardware stack levels required when called: 1
  4830 ;; This function calls:
  4831 ;;		_DELAY_milliseconds
  4832 ;;		_displayClear
  4833 ;; This function is called by:
  4834 ;;		_displayLotteryResult
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _displayRoll
  4840  0338                     _displayRoll:
  4841  0338                     l1830:	
  4842                           ;incstack = 0
  4843                           ; Regs used in _displayRoll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4844                           
  4845                           
  4846                           ;main.c: 204:   displayClear();
  4847  0338  3182  222E  3183   	fcall	_displayClear
  4848                           
  4849                           ;main.c: 205:   switch(cnt){
  4850  033B  2B54               	goto	l1834
  4851  033C                     l371:	
  4852                           ;main.c: 207:       do { LATAbits.LATA5 = 0; } while(0);
  4853                           
  4854  033C  0022               	movlb	2	; select bank2
  4855  033D  128C               	bcf	12,5	;volatile
  4856  033E                     l373:	
  4857                           ;main.c: 208:       do { LATAbits.LATA4 = 0; } while(0);
  4858                           
  4859  033E  120C               	bcf	12,4	;volatile
  4860  033F  2B6D               	goto	l1836
  4861  0340                     l377:	
  4862                           ;main.c: 211:       do { LATAbits.LATA4 = 0; } while(0);
  4863                           
  4864  0340  0022               	movlb	2	; select bank2
  4865  0341  120C               	bcf	12,4	;volatile
  4866  0342                     l379:	
  4867                           ;main.c: 212:       do { LATCbits.LATC5 = 0; } while(0);
  4868                           
  4869  0342  128E               	bcf	14,5	;volatile
  4870  0343  2B6D               	goto	l1836
  4871  0344                     l382:	
  4872                           ;main.c: 215:       do { LATCbits.LATC5 = 0; } while(0);
  4873                           
  4874  0344  0022               	movlb	2	; select bank2
  4875  0345  128E               	bcf	14,5	;volatile
  4876  0346                     l384:	
  4877                           ;main.c: 216:       do { LATCbits.LATC4 = 0; } while(0);
  4878                           
  4879  0346  120E               	bcf	14,4	;volatile
  4880  0347  2B6D               	goto	l1836
  4881  0348                     l387:	
  4882                           ;main.c: 219:       do { LATCbits.LATC4 = 0; } while(0);
  4883                           
  4884  0348  0022               	movlb	2	; select bank2
  4885  0349  120E               	bcf	14,4	;volatile
  4886  034A                     l389:	
  4887                           ;main.c: 220:       do { LATCbits.LATC3 = 0; } while(0);
  4888                           
  4889  034A  118E               	bcf	14,3	;volatile
  4890  034B  2B6D               	goto	l1836
  4891  034C                     l392:	
  4892                           ;main.c: 223:       do { LATCbits.LATC3 = 0; } while(0);
  4893                           
  4894  034C  0022               	movlb	2	; select bank2
  4895  034D  118E               	bcf	14,3	;volatile
  4896  034E                     l394:	
  4897                           ;main.c: 224:       do { LATCbits.LATC6 = 0; } while(0);
  4898                           
  4899  034E  130E               	bcf	14,6	;volatile
  4900  034F  2B6D               	goto	l1836
  4901  0350                     l397:	
  4902                           ;main.c: 227:       do { LATCbits.LATC6 = 0; } while(0);
  4903                           
  4904  0350  0022               	movlb	2	; select bank2
  4905  0351  130E               	bcf	14,6	;volatile
  4906  0352                     l399:	
  4907                           ;main.c: 228:       do { LATAbits.LATA5 = 0; } while(0);
  4908                           
  4909  0352  128C               	bcf	12,5	;volatile
  4910  0353  2B6D               	goto	l1836
  4911  0354                     l1834:
  4912                           
  4913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4914                           ; Switch size 1, requested type "simple"
  4915                           ; Number of cases is 1, Range of values is 0 to 0
  4916                           ; switch strategies available:
  4917                           ; Name         Instructions Cycles
  4918                           ; simple_byte            4     3 (average)
  4919                           ; direct_byte            8     6 (fixed)
  4920                           ; jumptable            260     6 (fixed)
  4921                           ;	Chosen strategy is simple_byte
  4922  0354  0873               	movf	displayRoll@cnt+1,w
  4923  0355  3A00               	xorlw	0	; case 0
  4924  0356  1903               	skipnz
  4925  0357  2B59               	goto	l2198
  4926  0358  2B74               	goto	l402
  4927  0359                     l2198:
  4928                           
  4929                           ; Switch size 1, requested type "simple"
  4930                           ; Number of cases is 6, Range of values is 1 to 6
  4931                           ; switch strategies available:
  4932                           ; Name         Instructions Cycles
  4933                           ; simple_byte           19    10 (average)
  4934                           ; direct_byte           21     9 (fixed)
  4935                           ; jumptable            263     9 (fixed)
  4936                           ;	Chosen strategy is simple_byte
  4937  0359  0872               	movf	displayRoll@cnt,w
  4938  035A  3A01               	xorlw	1	; case 1
  4939  035B  1903               	skipnz
  4940  035C  2B3C               	goto	l371
  4941  035D  3A03               	xorlw	3	; case 2
  4942  035E  1903               	skipnz
  4943  035F  2B40               	goto	l377
  4944  0360  3A01               	xorlw	1	; case 3
  4945  0361  1903               	skipnz
  4946  0362  2B44               	goto	l382
  4947  0363  3A07               	xorlw	7	; case 4
  4948  0364  1903               	skipnz
  4949  0365  2B48               	goto	l387
  4950  0366  3A01               	xorlw	1	; case 5
  4951  0367  1903               	skipnz
  4952  0368  2B4C               	goto	l392
  4953  0369  3A03               	xorlw	3	; case 6
  4954  036A  1903               	skipnz
  4955  036B  2B50               	goto	l397
  4956  036C  2B74               	goto	l402
  4957  036D                     l1836:
  4958                           
  4959                           ;main.c: 234:   DELAY_milliseconds(1);
  4960  036D  3001               	movlw	1
  4961  036E  00F0               	movwf	DELAY_milliseconds@milliseconds
  4962  036F  3000               	movlw	0
  4963  0370  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  4964  0371  3182  22AE  3183   	fcall	_DELAY_milliseconds
  4965  0374                     l402:
  4966  0374  0008               	return
  4967  0375                     __end_of_displayRoll:
  4968                           
  4969                           	psect	text15
  4970  022E                     __ptext15:	
  4971 ;; *************** function _displayClear *****************
  4972 ;; Defined at:
  4973 ;;		line 46 in file "main.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		None
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_displayZero
  4997 ;;		_displayOne
  4998 ;;		_displayTwo
  4999 ;;		_displayThree
  5000 ;;		_displayFour
  5001 ;;		_displayFive
  5002 ;;		_displaySix
  5003 ;;		_displaySeven
  5004 ;;		_displayEight
  5005 ;;		_displayNine
  5006 ;;		_displaySegments
  5007 ;;		_selectDIG
  5008 ;;		_displayRoll
  5009 ;; This function uses a non-reentrant model
  5010 ;;
  5011                           
  5012                           
  5013                           ;psect for function _displayClear
  5014  022E                     _displayClear:
  5015  022E                     l182:	
  5016                           ;incstack = 0
  5017                           ; Regs used in _displayClear: []
  5018                           ;main.c: 47:   do { LATAbits.LATA5 = 1; } while(0);
  5019                           
  5020  022E  0022               	movlb	2	; select bank2
  5021  022F  168C               	bsf	12,5	;volatile
  5022  0230                     l184:	
  5023                           ;main.c: 48:   do { LATAbits.LATA4 = 1; } while(0);
  5024                           
  5025  0230  160C               	bsf	12,4	;volatile
  5026  0231                     l186:	
  5027                           ;main.c: 49:   do { LATCbits.LATC5 = 1; } while(0);
  5028                           
  5029  0231  168E               	bsf	14,5	;volatile
  5030  0232                     l188:	
  5031                           ;main.c: 50:   do { LATCbits.LATC4 = 1; } while(0);
  5032                           
  5033  0232  160E               	bsf	14,4	;volatile
  5034  0233                     l190:	
  5035                           ;main.c: 51:   do { LATCbits.LATC3 = 1; } while(0);
  5036                           
  5037  0233  158E               	bsf	14,3	;volatile
  5038  0234                     l192:	
  5039                           ;main.c: 52:   do { LATCbits.LATC6 = 1; } while(0);
  5040                           
  5041  0234  170E               	bsf	14,6	;volatile
  5042  0235                     l194:	
  5043                           ;main.c: 53:   do { LATCbits.LATC7 = 1; } while(0);
  5044                           
  5045  0235  178E               	bsf	14,7	;volatile
  5046  0236                     l196:
  5047  0236  0008               	return
  5048  0237                     __end_of_displayClear:
  5049                           
  5050                           	psect	text16
  5051  02AE                     __ptext16:	
  5052 ;; *************** function _DELAY_milliseconds *****************
  5053 ;; Defined at:
  5054 ;;		line 38 in file "mcc_generated_files/delay.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;  milliseconds    2    0[COMMON] unsigned short 
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2, status,0
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;Total ram usage:        2 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_displaySegments
  5078 ;;		_displayRoll
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082                           
  5083                           ;psect for function _DELAY_milliseconds
  5084  02AE                     _DELAY_milliseconds:
  5085  02AE                     l1762:	
  5086                           ;incstack = 0
  5087                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
  5088                           
  5089                           
  5090                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5091  02AE  2AB3               	goto	l1766
  5092  02AF                     l1764:
  5093                           
  5094                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(500000/4000.0)));
  5095  02AF  3029               	movlw	41
  5096  02B0                     u1327:
  5097  02B0  0B89               	decfsz	9,f
  5098  02B1  2AB0               	goto	u1327
  5099  02B2  3200               	nop2
  5100  02B3                     l1766:
  5101                           
  5102                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5103  02B3  3001               	movlw	1
  5104  02B4  02F0               	subwf	DELAY_milliseconds@milliseconds,f
  5105  02B5  3000               	movlw	0
  5106  02B6  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
  5107  02B7  0A70               	incf	DELAY_milliseconds@milliseconds,w
  5108  02B8  1D03               	skipz
  5109  02B9  2ABE               	goto	u691
  5110  02BA  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
  5111  02BB  1D03               	btfss	3,2
  5112  02BC  2ABE               	goto	u691
  5113  02BD  2ABF               	goto	u690
  5114  02BE                     u691:
  5115  02BE  2AAF               	goto	l1764
  5116  02BF                     u690:
  5117  02BF                     l475:
  5118  02BF  0008               	return
  5119  02C0                     __end_of_DELAY_milliseconds:
  5120                           
  5121                           	psect	text17
  5122  0375                     __ptext17:	
  5123 ;; *************** function ___awmod *****************
  5124 ;; Defined at:
  5125 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  divisor         2    9[COMMON] int 
  5128 ;;  dividend        2   11[COMMON] int 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;  sign            1    1[BANK0 ] unsigned char 
  5131 ;;  counter         1    0[BANK0 ] unsigned char 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;                  2    9[COMMON] int 
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5143 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5144 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5145 ;;Total ram usage:        7 bytes
  5146 ;; Hardware stack levels used: 1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_displayLotteryResult
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function ___awmod
  5156  0375                     ___awmod:
  5157  0375                     l1886:	
  5158                           ;incstack = 0
  5159                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5160                           
  5161  0375  0020               	movlb	0	; select bank0
  5162  0376  01A1               	clrf	___awmod@sign
  5163  0377                     l1888:
  5164  0377  1FFC               	btfss	___awmod@dividend+1,7
  5165  0378  2B7A               	goto	u801
  5166  0379  2B7B               	goto	u800
  5167  037A                     u801:
  5168  037A  2B82               	goto	l1894
  5169  037B                     u800:
  5170  037B                     l1890:
  5171  037B  09FB               	comf	___awmod@dividend,f
  5172  037C  09FC               	comf	___awmod@dividend+1,f
  5173  037D  0AFB               	incf	___awmod@dividend,f
  5174  037E  1903               	skipnz
  5175  037F  0AFC               	incf	___awmod@dividend+1,f
  5176  0380                     l1892:
  5177  0380  01A1               	clrf	___awmod@sign
  5178  0381  0AA1               	incf	___awmod@sign,f
  5179  0382                     l1894:
  5180  0382  1FFA               	btfss	___awmod@divisor+1,7
  5181  0383  2B85               	goto	u811
  5182  0384  2B86               	goto	u810
  5183  0385                     u811:
  5184  0385  2B8B               	goto	l1898
  5185  0386                     u810:
  5186  0386                     l1896:
  5187  0386  09F9               	comf	___awmod@divisor,f
  5188  0387  09FA               	comf	___awmod@divisor+1,f
  5189  0388  0AF9               	incf	___awmod@divisor,f
  5190  0389  1903               	skipnz
  5191  038A  0AFA               	incf	___awmod@divisor+1,f
  5192  038B                     l1898:
  5193  038B  0879               	movf	___awmod@divisor,w
  5194  038C  047A               	iorwf	___awmod@divisor+1,w
  5195  038D  1903               	btfsc	3,2
  5196  038E  2B90               	goto	u821
  5197  038F  2B91               	goto	u820
  5198  0390                     u821:
  5199  0390  2BBA               	goto	l1916
  5200  0391                     u820:
  5201  0391                     l1900:
  5202  0391  01A0               	clrf	___awmod@counter
  5203  0392  0AA0               	incf	___awmod@counter,f
  5204  0393  2B9D               	goto	l1906
  5205  0394                     l1902:
  5206  0394  3001               	movlw	1
  5207  0395                     u835:
  5208  0395  35F9               	lslf	___awmod@divisor,f
  5209  0396  0DFA               	rlf	___awmod@divisor+1,f
  5210  0397  0B89               	decfsz	9,f
  5211  0398  2B95               	goto	u835
  5212  0399                     l1904:
  5213  0399  3001               	movlw	1
  5214  039A  00FD               	movwf	??___awmod
  5215  039B  087D               	movf	??___awmod,w
  5216  039C  07A0               	addwf	___awmod@counter,f
  5217  039D                     l1906:
  5218  039D  1FFA               	btfss	___awmod@divisor+1,7
  5219  039E  2BA0               	goto	u841
  5220  039F  2BA1               	goto	u840
  5221  03A0                     u841:
  5222  03A0  2B94               	goto	l1902
  5223  03A1                     u840:
  5224  03A1                     l1908:
  5225  03A1  087A               	movf	___awmod@divisor+1,w
  5226  03A2  027C               	subwf	___awmod@dividend+1,w
  5227  03A3  1D03               	skipz
  5228  03A4  2BA7               	goto	u855
  5229  03A5  0879               	movf	___awmod@divisor,w
  5230  03A6  027B               	subwf	___awmod@dividend,w
  5231  03A7                     u855:
  5232  03A7  1C03               	skipc
  5233  03A8  2BAA               	goto	u851
  5234  03A9  2BAB               	goto	u850
  5235  03AA                     u851:
  5236  03AA  2BAF               	goto	l1912
  5237  03AB                     u850:
  5238  03AB                     l1910:
  5239  03AB  0879               	movf	___awmod@divisor,w
  5240  03AC  02FB               	subwf	___awmod@dividend,f
  5241  03AD  087A               	movf	___awmod@divisor+1,w
  5242  03AE  3BFC               	subwfb	___awmod@dividend+1,f
  5243  03AF                     l1912:
  5244  03AF  3001               	movlw	1
  5245  03B0                     u865:
  5246  03B0  36FA               	lsrf	___awmod@divisor+1,f
  5247  03B1  0CF9               	rrf	___awmod@divisor,f
  5248  03B2  0B89               	decfsz	9,f
  5249  03B3  2BB0               	goto	u865
  5250  03B4                     l1914:
  5251  03B4  3001               	movlw	1
  5252  03B5  02A0               	subwf	___awmod@counter,f
  5253  03B6  1D03               	btfss	3,2
  5254  03B7  2BB9               	goto	u871
  5255  03B8  2BBA               	goto	u870
  5256  03B9                     u871:
  5257  03B9  2BA1               	goto	l1908
  5258  03BA                     u870:
  5259  03BA                     l1916:
  5260  03BA  0821               	movf	___awmod@sign,w
  5261  03BB  1903               	btfsc	3,2
  5262  03BC  2BBE               	goto	u881
  5263  03BD  2BBF               	goto	u880
  5264  03BE                     u881:
  5265  03BE  2BC4               	goto	l1920
  5266  03BF                     u880:
  5267  03BF                     l1918:
  5268  03BF  09FB               	comf	___awmod@dividend,f
  5269  03C0  09FC               	comf	___awmod@dividend+1,f
  5270  03C1  0AFB               	incf	___awmod@dividend,f
  5271  03C2  1903               	skipnz
  5272  03C3  0AFC               	incf	___awmod@dividend+1,f
  5273  03C4                     l1920:
  5274  03C4  087C               	movf	___awmod@dividend+1,w
  5275  03C5  00FA               	movwf	?___awmod+1
  5276  03C6  087B               	movf	___awmod@dividend,w
  5277  03C7  00F9               	movwf	?___awmod
  5278  03C8                     l718:
  5279  03C8  0008               	return
  5280  03C9                     __end_of___awmod:
  5281                           
  5282                           	psect	text18
  5283  0422                     __ptext18:	
  5284 ;; *************** function ___awdiv *****************
  5285 ;; Defined at:
  5286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  divisor         2    0[COMMON] int 
  5289 ;;  dividend        2    2[COMMON] int 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;  quotient        2    7[COMMON] int 
  5292 ;;  sign            1    6[COMMON] unsigned char 
  5293 ;;  counter         1    5[COMMON] unsigned char 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  2    0[COMMON] int 
  5296 ;; Registers used:
  5297 ;;		wreg, status,2, status,0
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;Total ram usage:        9 bytes
  5308 ;; Hardware stack levels used: 1
  5309 ;; This function calls:
  5310 ;;		Nothing
  5311 ;; This function is called by:
  5312 ;;		_displayLotteryResult
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function ___awdiv
  5318  0422                     ___awdiv:
  5319  0422                     l1842:	
  5320                           ;incstack = 0
  5321                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5322                           
  5323  0422  01F6               	clrf	___awdiv@sign
  5324  0423                     l1844:
  5325  0423  1FF1               	btfss	___awdiv@divisor+1,7
  5326  0424  2C26               	goto	u701
  5327  0425  2C27               	goto	u700
  5328  0426                     u701:
  5329  0426  2C2E               	goto	l1850
  5330  0427                     u700:
  5331  0427                     l1846:
  5332  0427  09F0               	comf	___awdiv@divisor,f
  5333  0428  09F1               	comf	___awdiv@divisor+1,f
  5334  0429  0AF0               	incf	___awdiv@divisor,f
  5335  042A  1903               	skipnz
  5336  042B  0AF1               	incf	___awdiv@divisor+1,f
  5337  042C                     l1848:
  5338  042C  01F6               	clrf	___awdiv@sign
  5339  042D  0AF6               	incf	___awdiv@sign,f
  5340  042E                     l1850:
  5341  042E  1FF3               	btfss	___awdiv@dividend+1,7
  5342  042F  2C31               	goto	u711
  5343  0430  2C32               	goto	u710
  5344  0431                     u711:
  5345  0431  2C3B               	goto	l1856
  5346  0432                     u710:
  5347  0432                     l1852:
  5348  0432  09F2               	comf	___awdiv@dividend,f
  5349  0433  09F3               	comf	___awdiv@dividend+1,f
  5350  0434  0AF2               	incf	___awdiv@dividend,f
  5351  0435  1903               	skipnz
  5352  0436  0AF3               	incf	___awdiv@dividend+1,f
  5353  0437                     l1854:
  5354  0437  3001               	movlw	1
  5355  0438  00F4               	movwf	??___awdiv
  5356  0439  0874               	movf	??___awdiv,w
  5357  043A  06F6               	xorwf	___awdiv@sign,f
  5358  043B                     l1856:
  5359  043B  01F7               	clrf	___awdiv@quotient
  5360  043C  01F8               	clrf	___awdiv@quotient+1
  5361  043D                     l1858:
  5362  043D  0870               	movf	___awdiv@divisor,w
  5363  043E  0471               	iorwf	___awdiv@divisor+1,w
  5364  043F  1903               	btfsc	3,2
  5365  0440  2C42               	goto	u721
  5366  0441  2C43               	goto	u720
  5367  0442                     u721:
  5368  0442  2C72               	goto	l1878
  5369  0443                     u720:
  5370  0443                     l1860:
  5371  0443  01F5               	clrf	___awdiv@counter
  5372  0444  0AF5               	incf	___awdiv@counter,f
  5373  0445  2C4F               	goto	l1866
  5374  0446                     l1862:
  5375  0446  3001               	movlw	1
  5376  0447                     u735:
  5377  0447  35F0               	lslf	___awdiv@divisor,f
  5378  0448  0DF1               	rlf	___awdiv@divisor+1,f
  5379  0449  0B89               	decfsz	9,f
  5380  044A  2C47               	goto	u735
  5381  044B                     l1864:
  5382  044B  3001               	movlw	1
  5383  044C  00F4               	movwf	??___awdiv
  5384  044D  0874               	movf	??___awdiv,w
  5385  044E  07F5               	addwf	___awdiv@counter,f
  5386  044F                     l1866:
  5387  044F  1FF1               	btfss	___awdiv@divisor+1,7
  5388  0450  2C52               	goto	u741
  5389  0451  2C53               	goto	u740
  5390  0452                     u741:
  5391  0452  2C46               	goto	l1862
  5392  0453                     u740:
  5393  0453                     l1868:
  5394  0453  3001               	movlw	1
  5395  0454                     u755:
  5396  0454  35F7               	lslf	___awdiv@quotient,f
  5397  0455  0DF8               	rlf	___awdiv@quotient+1,f
  5398  0456  0B89               	decfsz	9,f
  5399  0457  2C54               	goto	u755
  5400  0458  0871               	movf	___awdiv@divisor+1,w
  5401  0459  0273               	subwf	___awdiv@dividend+1,w
  5402  045A  1D03               	skipz
  5403  045B  2C5E               	goto	u765
  5404  045C  0870               	movf	___awdiv@divisor,w
  5405  045D  0272               	subwf	___awdiv@dividend,w
  5406  045E                     u765:
  5407  045E  1C03               	skipc
  5408  045F  2C61               	goto	u761
  5409  0460  2C62               	goto	u760
  5410  0461                     u761:
  5411  0461  2C67               	goto	l1874
  5412  0462                     u760:
  5413  0462                     l1870:
  5414  0462  0870               	movf	___awdiv@divisor,w
  5415  0463  02F2               	subwf	___awdiv@dividend,f
  5416  0464  0871               	movf	___awdiv@divisor+1,w
  5417  0465  3BF3               	subwfb	___awdiv@dividend+1,f
  5418  0466                     l1872:
  5419  0466  1477               	bsf	___awdiv@quotient,0
  5420  0467                     l1874:
  5421  0467  3001               	movlw	1
  5422  0468                     u775:
  5423  0468  36F1               	lsrf	___awdiv@divisor+1,f
  5424  0469  0CF0               	rrf	___awdiv@divisor,f
  5425  046A  0B89               	decfsz	9,f
  5426  046B  2C68               	goto	u775
  5427  046C                     l1876:
  5428  046C  3001               	movlw	1
  5429  046D  02F5               	subwf	___awdiv@counter,f
  5430  046E  1D03               	btfss	3,2
  5431  046F  2C71               	goto	u781
  5432  0470  2C72               	goto	u780
  5433  0471                     u781:
  5434  0471  2C53               	goto	l1868
  5435  0472                     u780:
  5436  0472                     l1878:
  5437  0472  0876               	movf	___awdiv@sign,w
  5438  0473  1903               	btfsc	3,2
  5439  0474  2C76               	goto	u791
  5440  0475  2C77               	goto	u790
  5441  0476                     u791:
  5442  0476  2C7C               	goto	l1882
  5443  0477                     u790:
  5444  0477                     l1880:
  5445  0477  09F7               	comf	___awdiv@quotient,f
  5446  0478  09F8               	comf	___awdiv@quotient+1,f
  5447  0479  0AF7               	incf	___awdiv@quotient,f
  5448  047A  1903               	skipnz
  5449  047B  0AF8               	incf	___awdiv@quotient+1,f
  5450  047C                     l1882:
  5451  047C  0878               	movf	___awdiv@quotient+1,w
  5452  047D  00F1               	movwf	?___awdiv+1
  5453  047E  0877               	movf	___awdiv@quotient,w
  5454  047F  00F0               	movwf	?___awdiv
  5455  0480                     l705:
  5456  0480  0008               	return
  5457  0481                     __end_of___awdiv:
  5458                           
  5459                           	psect	text19
  5460  0293                     __ptext19:	
  5461 ;; *************** function _SYSTEM_Initialize *****************
  5462 ;; Defined at:
  5463 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;		None
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;Total ram usage:        0 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 2
  5484 ;; This function calls:
  5485 ;;		_EUSART_Initialize
  5486 ;;		_OSCILLATOR_Initialize
  5487 ;;		_PIN_MANAGER_Initialize
  5488 ;;		_WDT_Initialize
  5489 ;; This function is called by:
  5490 ;;		_main
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           
  5495                           ;psect for function _SYSTEM_Initialize
  5496  0293                     _SYSTEM_Initialize:
  5497  0293                     l1924:	
  5498                           ;incstack = 0
  5499                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5500                           
  5501                           
  5502                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5503  0293  3183  2307  3182   	fcall	_PIN_MANAGER_Initialize
  5504                           
  5505                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5506  0296  3182  2226  3182   	fcall	_OSCILLATOR_Initialize
  5507                           
  5508                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5509  0299  3182  2209  3182   	fcall	_WDT_Initialize
  5510                           
  5511                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  5512  029C  3182  22C0  3182   	fcall	_EUSART_Initialize
  5513  029F                     l163:
  5514  029F  0008               	return
  5515  02A0                     __end_of_SYSTEM_Initialize:
  5516                           
  5517                           	psect	text20
  5518  0209                     __ptext20:	
  5519 ;; *************** function _WDT_Initialize *****************
  5520 ;; Defined at:
  5521 ;;		line 71 in file "mcc_generated_files/mcc.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  1    wreg      void 
  5528 ;; Registers used:
  5529 ;;		wreg
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_SYSTEM_Initialize
  5545 ;; This function uses a non-reentrant model
  5546 ;;
  5547                           
  5548                           
  5549                           ;psect for function _WDT_Initialize
  5550  0209                     _WDT_Initialize:
  5551  0209                     l1192:	
  5552                           ;incstack = 0
  5553                           ; Regs used in _WDT_Initialize: [wreg]
  5554                           
  5555                           
  5556                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  5557  0209  3016               	movlw	22
  5558  020A  0021               	movlb	1	; select bank1
  5559  020B  0097               	movwf	23	;volatile
  5560  020C                     l169:
  5561  020C  0008               	return
  5562  020D                     __end_of_WDT_Initialize:
  5563                           
  5564                           	psect	text21
  5565  0307                     __ptext21:	
  5566 ;; *************** function _PIN_MANAGER_Initialize *****************
  5567 ;; Defined at:
  5568 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;Total ram usage:        0 bytes
  5587 ;; Hardware stack levels used: 1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_SYSTEM_Initialize
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _PIN_MANAGER_Initialize
  5597  0307                     _PIN_MANAGER_Initialize:
  5598  0307                     l1152:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5601                           
  5602                           
  5603                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5604  0307  0022               	movlb	2	; select bank2
  5605  0308  018C               	clrf	12	;volatile
  5606                           
  5607                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5608  0309  018D               	clrf	13	;volatile
  5609                           
  5610                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5611  030A  018E               	clrf	14	;volatile
  5612  030B                     l1154:
  5613                           
  5614                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  5615  030B  3007               	movlw	7
  5616  030C  0021               	movlb	1	; select bank1
  5617  030D  008C               	movwf	12	;volatile
  5618  030E                     l1156:
  5619                           
  5620                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
  5621  030E  3020               	movlw	32
  5622  030F  008D               	movwf	13	;volatile
  5623  0310                     l1158:
  5624                           
  5625                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x01;
  5626  0310  3001               	movlw	1
  5627  0311  008E               	movwf	14	;volatile
  5628  0312                     l1160:
  5629                           
  5630                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5631  0312  30CF               	movlw	207
  5632  0313  0023               	movlb	3	; select bank3
  5633  0314  008E               	movwf	14	;volatile
  5634  0315                     l1162:
  5635                           
  5636                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5637  0315  30C0               	movlw	192
  5638  0316  008D               	movwf	13	;volatile
  5639  0317                     l1164:
  5640                           
  5641                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5642  0317  3017               	movlw	23
  5643  0318  008C               	movwf	12	;volatile
  5644                           
  5645                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5646  0319  0024               	movlb	4	; select bank4
  5647  031A  018D               	clrf	13	;volatile
  5648                           
  5649                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5650  031B  018C               	clrf	12	;volatile
  5651                           
  5652                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5653  031C  018E               	clrf	14	;volatile
  5654  031D                     l1166:
  5655                           
  5656                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5657  031D  0021               	movlb	1	; select bank1
  5658  031E  1795               	bsf	21,7	;volatile
  5659                           
  5660                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5661  031F  0025               	movlb	5	; select bank5
  5662  0320  018C               	clrf	12	;volatile
  5663                           
  5664                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5665  0321  018D               	clrf	13	;volatile
  5666                           
  5667                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5668  0322  018E               	clrf	14	;volatile
  5669  0323                     l1168:
  5670                           
  5671                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5672  0323  3037               	movlw	55
  5673  0324  0026               	movlb	6	; select bank6
  5674  0325  008C               	movwf	12	;volatile
  5675  0326                     l1170:
  5676                           
  5677                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5678  0326  30F0               	movlw	240
  5679  0327  008D               	movwf	13	;volatile
  5680  0328                     l1172:
  5681                           
  5682                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5683  0328  30FF               	movlw	255
  5684  0329  008E               	movwf	14	;volatile
  5685  032A                     l1174:
  5686                           
  5687                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5688  032A  303F               	movlw	63
  5689  032B  0027               	movlb	7	; select bank7
  5690  032C  008C               	movwf	12	;volatile
  5691  032D                     l1176:
  5692                           
  5693                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5694  032D  30F0               	movlw	240
  5695  032E  008D               	movwf	13	;volatile
  5696  032F                     l1178:
  5697                           
  5698                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5699  032F  30FF               	movlw	255
  5700  0330  008E               	movwf	14	;volatile
  5701  0331                     l1180:
  5702                           
  5703                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x0D;
  5704  0331  300D               	movlw	13
  5705  0332  003C               	movlb	28	; select bank28
  5706  0333  00A4               	movwf	36	;volatile
  5707  0334                     l1182:
  5708                           
  5709                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x16;
  5710  0334  3016               	movlw	22
  5711  0335  003D               	movlb	29	; select bank29
  5712  0336  009C               	movwf	28	;volatile
  5713  0337                     l139:
  5714  0337  0008               	return
  5715  0338                     __end_of_PIN_MANAGER_Initialize:
  5716                           
  5717                           	psect	text22
  5718  0226                     __ptext22:	
  5719 ;; *************** function _OSCILLATOR_Initialize *****************
  5720 ;; Defined at:
  5721 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;		None
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;		None
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5739 ;;Total ram usage:        0 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; This function calls:
  5742 ;;		Nothing
  5743 ;; This function is called by:
  5744 ;;		_SYSTEM_Initialize
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _OSCILLATOR_Initialize
  5750  0226                     _OSCILLATOR_Initialize:
  5751  0226                     l1184:	
  5752                           ;incstack = 0
  5753                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5754                           
  5755                           
  5756                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x38;
  5757  0226  3038               	movlw	56
  5758  0227  0021               	movlb	1	; select bank1
  5759  0228  0099               	movwf	25	;volatile
  5760  0229                     l1186:
  5761                           
  5762                           ;mcc_generated_files/mcc.c: 64:     OSCSTAT = 0x00;
  5763  0229  019A               	clrf	26	;volatile
  5764  022A                     l1188:
  5765                           
  5766                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  5767  022A  0198               	clrf	24	;volatile
  5768  022B                     l1190:
  5769                           
  5770                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  5771  022B  0024               	movlb	4	; select bank4
  5772  022C  019D               	clrf	29	;volatile
  5773  022D                     l166:
  5774  022D  0008               	return
  5775  022E                     __end_of_OSCILLATOR_Initialize:
  5776                           
  5777                           	psect	text23
  5778  02C0                     __ptext23:	
  5779 ;; *************** function _EUSART_Initialize *****************
  5780 ;; Defined at:
  5781 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;		None
  5784 ;; Auto vars:     Size  Location     Type
  5785 ;;		None
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0, pclath, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;Total ram usage:        0 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 1
  5802 ;; This function calls:
  5803 ;;		_EUSART_SetErrorHandler
  5804 ;;		_EUSART_SetFramingErrorHandler
  5805 ;;		_EUSART_SetOverrunErrorHandler
  5806 ;; This function is called by:
  5807 ;;		_SYSTEM_Initialize
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           
  5812                           ;psect for function _EUSART_Initialize
  5813  02C0                     _EUSART_Initialize:
  5814  02C0                     l1768:	
  5815                           ;incstack = 0
  5816                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5817                           
  5818                           
  5819                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  5820  02C0  3008               	movlw	8
  5821  02C1  0023               	movlb	3	; select bank3
  5822  02C2  009F               	movwf	31	;volatile
  5823                           
  5824                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  5825  02C3  3090               	movlw	144
  5826  02C4  009D               	movwf	29	;volatile
  5827                           
  5828                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  5829  02C5  3024               	movlw	36
  5830  02C6  009E               	movwf	30	;volatile
  5831                           
  5832                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x0C;
  5833  02C7  300C               	movlw	12
  5834  02C8  009B               	movwf	27	;volatile
  5835  02C9                     l1770:
  5836                           
  5837                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5838  02C9  019C               	clrf	28	;volatile
  5839  02CA                     l1772:
  5840                           
  5841                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5842  02CA  3000               	movlw	0
  5843  02CB  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5844  02CC  3000               	movlw	0
  5845  02CD  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5846  02CE  3182  2213  3182   	fcall	_EUSART_SetFramingErrorHandler
  5847  02D1                     l1774:
  5848                           
  5849                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5850  02D1  3000               	movlw	0
  5851  02D2  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5852  02D3  3000               	movlw	0
  5853  02D4  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5854  02D5  3182  2219  3182   	fcall	_EUSART_SetOverrunErrorHandler
  5855  02D8                     l1776:
  5856                           
  5857                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5858  02D8  3000               	movlw	0
  5859  02D9  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5860  02DA  3000               	movlw	0
  5861  02DB  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5862  02DC  3182  220D  3182   	fcall	_EUSART_SetErrorHandler
  5863  02DF                     l1778:
  5864                           
  5865                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5866  02DF  0020               	movlb	0	; select bank0
  5867  02E0  01D7               	clrf	_eusartRxLastError	;volatile
  5868  02E1                     l43:
  5869  02E1  0008               	return
  5870  02E2                     __end_of_EUSART_Initialize:
  5871                           
  5872                           	psect	text24
  5873  0219                     __ptext24:	
  5874 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5875 ;; Defined at:
  5876 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5879 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  1    wreg      void 
  5884 ;; Registers used:
  5885 ;;		wreg
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;Total ram usage:        2 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_EUSART_Initialize
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function _EUSART_SetOverrunErrorHandler
  5906  0219                     _EUSART_SetOverrunErrorHandler:
  5907  0219                     l1640:	
  5908                           ;incstack = 0
  5909                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5910                           
  5911                           
  5912                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5913  0219  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5914  021A  0020               	movlb	0	; select bank0
  5915  021B  00D4               	movwf	_EUSART_OverrunErrorHandler+1
  5916  021C  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5917  021D  00D3               	movwf	_EUSART_OverrunErrorHandler
  5918  021E                     l85:
  5919  021E  0008               	return
  5920  021F                     __end_of_EUSART_SetOverrunErrorHandler:
  5921                           
  5922                           	psect	text25
  5923  0213                     __ptext25:	
  5924 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5925 ;; Defined at:
  5926 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5929 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;		None
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;Total ram usage:        2 bytes
  5946 ;; Hardware stack levels used: 1
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_EUSART_Initialize
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function _EUSART_SetFramingErrorHandler
  5956  0213                     _EUSART_SetFramingErrorHandler:
  5957  0213                     l1638:	
  5958                           ;incstack = 0
  5959                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5960                           
  5961                           
  5962                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5963  0213  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5964  0214  0020               	movlb	0	; select bank0
  5965  0215  00D6               	movwf	_EUSART_FramingErrorHandler+1
  5966  0216  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  5967  0217  00D5               	movwf	_EUSART_FramingErrorHandler
  5968  0218                     l82:
  5969  0218  0008               	return
  5970  0219                     __end_of_EUSART_SetFramingErrorHandler:
  5971                           
  5972                           	psect	text26
  5973  020D                     __ptext26:	
  5974 ;; *************** function _EUSART_SetErrorHandler *****************
  5975 ;; Defined at:
  5976 ;;		line 165 in file "mcc_generated_files/eusart.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5979 ;;		 -> EUSART_DefaultErrorHandler(1), 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; This function calls:
  5998 ;;		Nothing
  5999 ;; This function is called by:
  6000 ;;		_EUSART_Initialize
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           
  6005                           ;psect for function _EUSART_SetErrorHandler
  6006  020D                     _EUSART_SetErrorHandler:
  6007  020D                     l1642:	
  6008                           ;incstack = 0
  6009                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6010                           
  6011                           
  6012                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6013  020D  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6014  020E  0020               	movlb	0	; select bank0
  6015  020F  00D2               	movwf	_EUSART_ErrorHandler+1
  6016  0210  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6017  0211  00D1               	movwf	_EUSART_ErrorHandler
  6018  0212                     l88:
  6019  0212  0008               	return
  6020  0213                     __end_of_EUSART_SetErrorHandler:
  6021  007E                     btemp	set	126	;btemp
  6022  007E                     wtemp0	set	126
  6023                           
  6024                           	psect	config
  6025                           
  6026                           ;Config register CONFIG1 @ 0x8007
  6027                           ;	Oscillator Selection Bits
  6028                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6029                           ;	Watchdog Timer Enable
  6030                           ;	WDTE = OFF, WDT disabled
  6031                           ;	Power-up Timer Enable
  6032                           ;	PWRTE = OFF, PWRT disabled
  6033                           ;	MCLR Pin Function Select
  6034                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6035                           ;	Flash Program Memory Code Protection
  6036                           ;	CP = OFF, Program memory code protection is disabled
  6037                           ;	Brown-out Reset Enable
  6038                           ;	BOREN = ON, Brown-out Reset enabled
  6039                           ;	Clock Out Enable
  6040                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6041                           ;	Internal/External Switchover Mode
  6042                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6043                           ;	Fail-Safe Clock Monitor Enable
  6044                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6045  8007                     	org	32775
  6046  8007  3FE4               	dw	16356
  6047                           
  6048                           ;Config register CONFIG2 @ 0x8008
  6049                           ;	Flash Memory Self-Write Protection
  6050                           ;	WRT = OFF, Write protection off
  6051                           ;	Peripheral Pin Select one-way control
  6052                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6053                           ;	Zero-cross detect disable
  6054                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  6055                           ;	Phase Lock Loop enable
  6056                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6057                           ;	Stack Overflow/Underflow Reset Enable
  6058                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6059                           ;	Brown-out Reset Voltage Selection
  6060                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6061                           ;	Low-Power Brown Out Reset
  6062                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6063                           ;	Low-Voltage Programming Enable
  6064                           ;	LVP = ON, Low-voltage programming enabled
  6065  8008                     	org	32776
  6066  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      56
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _displayLotteryResult->___awmod
    _displaySegments->_DELAY_milliseconds
    _displayRoll->_DELAY_milliseconds
    ___awmod->___awdiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_displayLotteryResult
    _displayLotteryResult->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5272
                  _SYSTEM_Initialize
               _displayLotteryResult
 ---------------------------------------------------------------------------------
 (1) _displayLotteryResult                                47    45      2    4978
                                              2 BANK0     47    45      2
                            ___awdiv
                            ___awmod
                        _displayRoll
                    _displaySegments
                          _selectDIG
 ---------------------------------------------------------------------------------
 (2) _selectDIG                                            2     0      2     402
                                              0 COMMON     2     0      2
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displaySegments                                      2     0      2     956
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
                       _displayEight
                        _displayFive
                        _displayFour
                        _displayNine
                         _displayOne
                       _displaySeven
                         _displaySix
                       _displayThree
                         _displayTwo
                        _displayZero
 ---------------------------------------------------------------------------------
 (3) _displayZero                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayTwo                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayThree                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySix                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySeven                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayOne                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayNine                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFour                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFive                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayEight                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displayRoll                                          2     0      2     500
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayClear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _displayLotteryResult
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _displayRoll
       _DELAY_milliseconds
       _displayClear
     _displaySegments
       _DELAY_milliseconds
       _displayClear
       _displayEight
         _displayClear
       _displayFive
         _displayClear
       _displayFour
         _displayClear
       _displayNine
         _displayClear
       _displayOne
         _displayClear
       _displaySeven
         _displayClear
       _displaySix
         _displayClear
       _displayThree
         _displayClear
       _displayTwo
         _displayClear
       _displayZero
         _displayClear
     _selectDIG
       _displayClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      46      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      46      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jul 18 05:00:43 2024

                                 ?_displayFive 0070                                   ?_displayFour 0070  
                                 ?_displayNine 0070                                   ?_displayRoll 0072  
                                 ?_displayZero 0070                                             l43 02E1  
                                           l82 0218                                             l85 021E  
                                           l88 0212                                   ___awdiv@sign 0076  
                      __end_of_displaySegments 0422                                  ?_displayClear 0070  
                                ?_displayEight 0070                                  ?_displaySeven 0070  
                                ?_displayThree 0070                                            l211 0286  
                                          l311 0292                                            l231 0270  
                                          l402 0374                                            l218 0225  
                                          l139 0337                                            l163 029F  
                                          l324 025C                                            l244 0266  
                                          l340 0421                                            l166 022D  
                                          l190 0233                                            l182 022E  
                                          l255 023F                                            l192 0234  
                                          l184 0230                                            l360 02EF  
                                          l169 020C                                            l353 02EB  
                                          l194 0235                                            l186 0231  
                                          l371 033C                                            l283 027B  
                                          l363 02F1                                            l196 0236  
                                          l188 0232                                            l268 0252  
                                          l373 033E                                            l357 02ED  
                                          l382 0344                                            l294 0248  
                                          l366 0306                                            l392 034C  
                                          l384 0346                                            l705 0480  
                                          l377 0340                                            l394 034E  
                                          l475 02BF                                            l387 0348  
                                          l379 0342                                            l459 07FA  
                                          l397 0350                                            l389 034A  
                                          l718 03C8                                            l399 0352  
                                          u700 0427                                            u701 0426  
                                          u710 0432                                            u711 0431  
                                          u720 0443                                            u800 037B  
                                          u721 0442                                            u801 037A  
                                          u810 0386                                            u811 0385  
                                          u740 0453                                            u820 0391  
                                          u900 051B                                            u741 0452  
                                          u821 0390                                            u901 051A  
                                          u910 052D                                            u735 0447  
                                          u911 052C                                            u760 0462  
                                          u840 03A1                                            u920 053F  
                                          u761 0461                                            u841 03A0  
                                          u921 053E                                            u905 0517  
                                          u850 03AB                                            u690 02BF  
                                          u930 054F                                            u755 0454  
                                          u851 03AA                                            u835 0395  
                                          u691 02BE                                            u931 054E  
                                          u915 0529                                            u780 0472  
                                          u940 0562                                            u781 0471  
                                          u765 045E                                            u941 0561  
                                          u925 053B                                            u790 0477  
                                          u870 03BA                                            u950 0573  
                                          u791 0476                                            u775 0468  
                                          u871 03B9                                            u855 03A7  
                                          u951 0572                                            u935 054B  
                                          u880 03BF                                            u960 0586  
                                          u881 03BE                                            u865 03B0  
                                          u961 0585                                            u945 055E  
                                          u970 0596                                            u890 0509  
                                          u971 0595                                            u955 056F  
                                          u891 0508                                            u980 05B7  
                                          u981 05B6                                            u965 0582  
                                          u990 05C9                                            u991 05C8  
                                          u895 0505                                            u985 05B3  
                                          u995 05C5                     __end_of_DELAY_milliseconds 02C0  
               ?_EUSART_SetFramingErrorHandler 0070                         ??_displayLotteryResult 0024  
                                 ___awmod@sign 0021                                            wreg 0009  
                                         l2000 05F0                                           l2010 0614  
                                         l2100 07A9                                           l2020 063D  
                                         l2004 05FE                                           l2110 07CF  
                                         l2102 07B1                                           l2030 0662  
                                         l2022 0644                                           l2014 0622  
                                         l1160 0312                                           l1152 0307  
                                         l2104 07B8                                           l2112 07D6  
                                         l2032 0667                                           l2024 064C  
                                         l2008 0611                                           l2040 06AA  
                                         l1170 0326                                           l1162 0315  
                                         l1154 030B                                           l2114 07DB  
                                         l2106 07C0                                           l2050 06CE  
                                         l2042 06AD                                           l2026 0653  
                                         l2034 0674                                           l2018 0635  
                                         l2130 02A0                                           l1180 0331  
                                         l1172 0328                                           l1164 0317  
                                         l1156 030E                                           l2108 07C7  
                                         l2116 07E8                                           l2060 06F2  
                                         l2052 06D1                                           l2028 065B  
                                         l2036 0686                                           l2132 02A3  
                                         l1190 022B                                           l1182 0334  
                                         l1174 032A                                           l1166 031D  
                                         l1158 0310                                           l2070 0718  
                                         l2062 06FA                                           l2046 06BB  
                                         l2038 0698                                           l1184 0226  
                                         l1176 032D                                           l1168 0323  
                                         l1192 0209                                           l2072 071F  
                                         l2064 0701                                           l2080 0740  
                                         l2056 06DF                                           l1186 0229  
                                         l1178 032F                                           l2074 0727  
                                         l2066 0709                                           l2082 0752  
                                         l1188 022A                                           l1700 024C  
                                         l2092 0787                                           l2068 0710  
                                         l2076 072E                                           l2084 0764  
                                         l1702 024E                                           l1710 0271  
                                         l2078 0733                                           l2086 0776  
                                         l1640 0219                                           l1704 024F  
                                         l1720 0279                                           l1712 0274  
                                         l1800 03F1                                           l2096 079A  
                                         l2088 0779                                           l1642 020D  
                                         l1706 0250                                           l1730 0246  
                                         l1722 027A                                           l1714 0276  
                                         l1650 0282                                           l2194 02F8  
                                         l2098 07A2                                           l1900 0391  
                                         l1740 028D                                           l1708 0251  
                                         l1660 0222                                           l1732 0247  
                                         l1724 0240                                           l1716 0277  
                                         l1652 0283                                           l1644 027C  
                                         l2196 03FA                                           l1804 03F5  
                                         l1820 02E9                                           l1812 02E2  
                                         l1638 0213                                           l1910 03AB  
                                         l1902 0394                                           l2198 0359  
                                         l1830 0338                                           l1742 028E  
                                         l1734 0287                                           l1750 0253  
                                         l1662 0224                                           l1726 0243  
                                         l1718 0278                                           l1670 026D  
                                         l1654 0284                                           l1646 027F  
                                         l1806 041A                                           l1814 02E5  
                                         l1920 03C4                                           l1912 03AF  
                                         l1904 0399                                           l1744 028F  
                                         l1736 028A                                           l1760 025B  
                                         l1752 0256                                           l1728 0245  
                                         l1680 0262                                           l1672 026E  
                                         l1664 0267                                           l1656 0285  
                                         l1648 0281                                           l1824 02F3  
                                         l1816 02E7                                           l1770 02C9  
                                         l1850 042E                                           l1842 0422  
                                         l1914 03B4                                           l1906 039D  
                                         l1762 02AE                                           l1834 0354  
                                         l1746 0290                                           l1738 028C  
                                         l1690 023A                                           l1754 0258  
                                         l1658 021F                                           l1682 0263  
                                         l1674 026F                                           l1666 026A  
                                         l1818 02E8                                           l1772 02CA  
                                         l1924 0293                                           l1860 0443  
                                         l1852 0432                                           l1844 0423  
                                         l1908 03A1                                           l1916 03BA  
                                         l1764 02AF                                           l1836 036D  
                                         l1748 0291                                           l1692 023C  
                                         l1756 0259                                           l1684 0264  
                                         l1676 025D                                           l1668 026C  
                                         l1780 03C9                                           l1774 02D1  
                                         l1870 0462                                           l1862 0446  
                                         l1854 0437                                           l1846 0427  
                                         l1918 03BF                                           l1766 02B3  
                                         l1694 023D                                           l1758 025A  
                                         l1686 0265                                           l1678 0260  
                                         l1790 03DD                                           l1782 03CD  
                                         l1950 04F7                                           l1934 04DA  
                                         l1926 0481                                           l1776 02D8  
                                         l1768 02C0                                           l1880 0477  
                                         l1872 0466                                           l1864 044B  
                                         l1856 043B                                           l1848 042C  
                                         l1696 023E                                           l1688 0237  
                                         l1792 03E1                                           l1784 03D1  
                                         l1960 053F                                           l1952 04FC  
                                         l1944 04E2                                           l1928 04D8  
                                         l1778 02DF                                           l1882 047C  
                                         l1874 0467                                           l1866 044F  
                                         l1858 043D                                           l1890 037B  
                                         l1698 0249                                           l1794 03E5  
                                         l1786 03D5                                           l1970 0563  
                                         l1962 0542                                           l1954 0509  
                                         l1938 04DF                                           l1876 046C  
                                         l1868 0453                                           l1892 0380  
                                         l1796 03E9                                           l1788 03D9  
                                         l1980 0587                                           l1972 0566  
                                         l1956 051B                                           l1948 04E7  
                                         l1878 0472                                           l1894 0382  
                                         l1886 0375                                           l1798 03ED  
                                         l1990 05AA                                           l1982 058F  
                                         l1966 0550                                           l1958 052D  
                                         l1896 0386                                           l1888 0377  
                                         l1984 0596                                           l1992 05B7  
                                         l1976 0574                                           l1898 038B  
                                         l1986 059E                                           l1994 05C9  
                                         l1988 05A5                                           l1996 05DB  
                                         l1998 05ED                                           u1000 05DB  
                                         u1001 05DA                                           u1010 05ED  
                                         u1011 05EC                                           u1100 0698  
                                         u1020 05FD                                           u1101 0697  
                                         u1021 05FC                                           u1005 05D7  
                                         u1110 06AA                                           u1030 0610  
                                         u1111 06A9                                           u1031 060F  
                                         u1015 05E9                                           u1200 0752  
                                         u1120 06BA                                           u1040 0621  
                                         u1201 0751                                           u1121 06B9  
                                         u1105 0694                                           u1041 0620  
                                         u1025 05F9                                           u1210 0764  
                                         u1130 06CD                                           u1050 0634  
                                         u1211 0763                                           u1131 06CC  
                                         u1115 06A6                                           u1051 0633  
                                         u1035 060C                                           u1220 0776  
                                         u1140 06DE                                           u1060 0644  
                                         u1221 0775                                           u1205 074E  
                                         u1141 06DD                                           u1125 06B6  
                                         u1061 0643                                           u1045 061D  
                                         u1230 0786                                           u1150 06F1  
                                         u1070 0653                                           u1231 0785  
                                         u1215 0760                                           u1151 06F0  
                                         u1135 06C9                                           u1071 0652  
                                         u1055 0630                                           u1240 0799  
                                         u1160 0701                                           u1080 0674  
                                         u1241 0798                                           u1225 0772  
                                         u1161 0700                                           u1145 06DA  
                                         u1081 0673                                           u1250 07A9  
                                         u1170 0710                                           u1090 0686  
                                         u1251 07A8                                           u1235 0782  
                                         u1171 070F                                           u1155 06ED  
                                         u1091 0685                                           u1260 07B8  
                                         u1180 071F                                           u1261 07B7  
                                         u1245 0795                                           u1181 071E  
                                         u1085 0670                                           _LATA 010C  
                                         u1270 07C7                                           u1190 0740  
                                         _LATB 010D                                           u1327 02B0  
                                         u1271 07C6                                           u1191 073F  
                                         u1095 0682                                           _LATC 010E  
                                         u1280 07E8                                           u1281 07E7  
                                         u1290 07FA                                           u1291 07F9  
                                         u1195 073C                                           u1285 07E4  
                                         u1295 07F6                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _main 02A0                                           btemp 007E  
                                         start 0002                                 ??_displayClear 0070  
                               ??_displayEight 0070                 __size_of_OSCILLATOR_Initialize 0008  
                               ??_displaySeven 0070                                 ??_displayThree 0070  
                __end_of_OSCILLATOR_Initialize 022E                                          ?_main 0070  
                              __end_of___awdiv 0481                                __end_of___awmod 03C9  
                              ___awdiv@divisor 0070                                ___awdiv@counter 0075  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                               _WDT_Initialize 0209                                          status 0003  
                                        wtemp0 007E                                __initialization 07FB  
                                 __end_of_main 02AE                               ?_displaySegments 0072  
                                       ??_main 007E                         __end_of_WDT_Initialize 020D  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 0053  
                             ___awdiv@dividend 0072                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 021D                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB4PPS 0E9C  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                    ??___awdiv 0074                                      ??___awmod 007D  
                             ___awdiv@quotient 0077                                ___awmod@divisor 0079  
                         __size_of_displayFive 000A                                ___awmod@counter 0020  
                         __size_of_displayFour 0009                           __size_of_displayNine 000A  
                         __size_of_displayRoll 003D                           __size_of_displayZero 000B  
                              ?_WDT_Initialize 0070                           __end_of_displayClear 0237  
                         __end_of_displayEight 0293                              _SYSTEM_Initialize 0293  
                      __end_of__initialization 07FD                           __end_of_displaySeven 0249  
                         __end_of_displayThree 0267                             ?_SYSTEM_Initialize 0070  
                               __pcstackCOMMON 0070                            ??_SYSTEM_Initialize 0072  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0072  
                    __end_of_SYSTEM_Initialize 02A0                                     __pbssBANK0 0057  
                           _DELAY_milliseconds 02AE                            ?_DELAY_milliseconds 0070  
                                   __pmaintext 02A0                      displayLotteryResult@i_400 0041  
                           __size_of_selectDIG 0025                      displayLotteryResult@i_405 0043  
                    displayLotteryResult@i_409 0045                      displayLotteryResult@j_402 0049  
                    displayLotteryResult@j_411 004D                      displayLotteryResult@j_413 004F  
                    displayLotteryResult@j_407 004B                      displayLotteryResult@x_404 0031  
                    displayLotteryResult@x_408 0035                      displayLotteryResult@x_399 002D  
                    displayLotteryResult@dig_1 0047                      displayLotteryResult@dig_2 003B  
                    displayLotteryResult@dig_3 0027                      displayLotteryResult@dig_4 0025  
             displayLotteryResult@wait_cnt_401 002F               displayLotteryResult@wait_cnt_410 0037  
             displayLotteryResult@wait_cnt_412 0039               displayLotteryResult@wait_cnt_406 0033  
                         ??_DELAY_milliseconds 0072                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                  __size_of_displayLotteryResult 037A  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                     _displayOne 021F  
                                   _displaySix 0271                                     _displayTwo 0267  
                     ??_EUSART_SetErrorHandler 0072                                        ___awdiv 0422  
                                      ___awmod 0375                                        __ptext1 0481  
                                      __ptext2 02E2                                        __ptext3 03C9  
                                      __ptext4 027C                                        __ptext5 0267  
                                      __ptext6 025D                                        __ptext7 0271  
                                      __ptext8 0240                                        __ptext9 021F  
                        _OSCILLATOR_Initialize 0226                               ___awmod@dividend 007B  
                     ??_PIN_MANAGER_Initialize 0070                          __size_of_displayClear 0009  
                        __size_of_displayEight 000C                          __size_of_displaySeven 0009  
                        __size_of_displayThree 000A                     __size_of_SYSTEM_Initialize 000D  
                               displayRoll@cnt 0072                           end_of_initialization 07FD  
                            __end_of_selectDIG 0307          __end_of_EUSART_SetOverrunErrorHandler 021F  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0219  
                            _EUSART_Initialize 02C0                             ?_EUSART_Initialize 0070  
                          ??_EUSART_Initialize 0072                                   _displayClear 022E  
                             ??_WDT_Initialize 0070                                   _displayEight 0287  
                        displayLotteryResult@i 003D                          displayLotteryResult@j 003F  
                        displayLotteryResult@x 0029                                   _displaySeven 0240  
                                 _displayThree 025D                       __size_of_displaySegments 0059  
                                  ?_displayOne 0070                                    ?_displaySix 0070  
                                  ?_displayTwo 0070                __size_of_EUSART_SetErrorHandler 0006  
                    __end_of_EUSART_Initialize 02E2                                  ??_displayFive 0070  
                                ??_displayFour 0070                                  ??_displayNine 0070  
                                ??_displayRoll 0074                                  ??_displayZero 0070  
                   _EUSART_DefaultErrorHandler 0000                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 07FB                __size_of_PIN_MANAGER_Initialize 0031  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 0055  
                       _EUSART_SetErrorHandler 020D                            __size_of_displayOne 0007  
                          __size_of_displaySix 000B                            __size_of_displayTwo 000A  
                          __end_of_displayFive 0253                            __end_of_displayFour 0240  
                          __end_of_displayNine 025D                            __end_of_displayRoll 0375  
                          __end_of_displayZero 0287                                      ___latbits 0002  
                                __pcstackBANK0 0020                     __size_of_EUSART_Initialize 0022  
                            ??_displaySegments 0074                                      __pnvBANK0 0051  
                       _PIN_MANAGER_Initialize 0307                   __end_of_displayLotteryResult 07FB  
                                     ?___awdiv 0070                                       ?___awmod 0079  
                                     _BAUD1CON 019F                    __size_of_DELAY_milliseconds 0012  
                                 selectDIG@dig 0070                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                     _LATCbits 010E                                      _selectDIG 02E2  
                            _eusartRxLastError 0057                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                 DELAY_milliseconds@milliseconds 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                                    _displayFive 0249  
                                  _displayFour 0237                                    _displayNine 0253  
                                  _displayRoll 0338                                    _displayZero 027C  
                                 ??_displayOne 0070                                   ??_displaySix 0070  
                                 ??_displayTwo 0070                   displayLotteryResult@wait_cnt 002B  
                                   ?_selectDIG 0070                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0051                               __size_of___awdiv 005F  
                             __size_of___awmod 0054                             __end_of_displayOne 0226  
                           __end_of_displaySix 027C                             __end_of_displayTwo 0271  
                         _displayLotteryResult 0481                                       __ptext10 0253  
                                     __ptext11 0237                                       __ptext20 0209  
                                     __ptext12 0249                                       __ptext21 0307  
                                     __ptext13 0287                                       __ptext22 0226  
                                     __ptext14 0338                                       __ptext23 02C0  
                                     __ptext15 022E                                       __ptext24 0219  
                                     __ptext16 02AE                                       __ptext25 0213  
                                     __ptext17 0375                                       __ptext26 020D  
                                     __ptext18 0422                                       __ptext19 0293  
                                __size_of_main 000E                        ?_EUSART_SetErrorHandler 0070  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
        __end_of_EUSART_SetFramingErrorHandler 0219         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0213                                _displaySegments 03C9  
                        ?_displayLotteryResult 0022                        __size_of_WDT_Initialize 0004  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0213  
                                  ??_selectDIG 0072                        displayLotteryResult@val 0022  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                     _TX1STAbits 019E  
               __end_of_PIN_MANAGER_Initialize 0338                             displaySegments@num 0072  
