

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 20 13:48:11 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1769
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1769 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0110                     	;# 
   132  0111                     	;# 
   133  0112                     	;# 
   134  0113                     	;# 
   135  0114                     	;# 
   136  0115                     	;# 
   137  0116                     	;# 
   138  0117                     	;# 
   139  0118                     	;# 
   140  0119                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011C                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  011F                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  0191                     	;# 
   151  0191                     	;# 
   152  0192                     	;# 
   153  0193                     	;# 
   154  0193                     	;# 
   155  0194                     	;# 
   156  0195                     	;# 
   157  0196                     	;# 
   158  0197                     	;# 
   159  0199                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  019A                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019D                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019E                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019F                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  0211                     	;# 
   188  0211                     	;# 
   189  0212                     	;# 
   190  0212                     	;# 
   191  0213                     	;# 
   192  0213                     	;# 
   193  0214                     	;# 
   194  0214                     	;# 
   195  0215                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0298                     	;# 
   215  0298                     	;# 
   216  0299                     	;# 
   217  029A                     	;# 
   218  029B                     	;# 
   219  029E                     	;# 
   220  030C                     	;# 
   221  030D                     	;# 
   222  030E                     	;# 
   223  031B                     	;# 
   224  031C                     	;# 
   225  031D                     	;# 
   226  031E                     	;# 
   227  031F                     	;# 
   228  038C                     	;# 
   229  038D                     	;# 
   230  038E                     	;# 
   231  0391                     	;# 
   232  0392                     	;# 
   233  0393                     	;# 
   234  0394                     	;# 
   235  0395                     	;# 
   236  0396                     	;# 
   237  0397                     	;# 
   238  0398                     	;# 
   239  0399                     	;# 
   240  039B                     	;# 
   241  039C                     	;# 
   242  039D                     	;# 
   243  039E                     	;# 
   244  039F                     	;# 
   245  040E                     	;# 
   246  0413                     	;# 
   247  0413                     	;# 
   248  0414                     	;# 
   249  0414                     	;# 
   250  0415                     	;# 
   251  0416                     	;# 
   252  0417                     	;# 
   253  0418                     	;# 
   254  041A                     	;# 
   255  041A                     	;# 
   256  041B                     	;# 
   257  041B                     	;# 
   258  041C                     	;# 
   259  041D                     	;# 
   260  041E                     	;# 
   261  041F                     	;# 
   262  0493                     	;# 
   263  0493                     	;# 
   264  0494                     	;# 
   265  0495                     	;# 
   266  0496                     	;# 
   267  049A                     	;# 
   268  049A                     	;# 
   269  049B                     	;# 
   270  049C                     	;# 
   271  049D                     	;# 
   272  050F                     	;# 
   273  0510                     	;# 
   274  0511                     	;# 
   275  0512                     	;# 
   276  0513                     	;# 
   277  0514                     	;# 
   278  0515                     	;# 
   279  0516                     	;# 
   280  0590                     	;# 
   281  0591                     	;# 
   282  0592                     	;# 
   283  0592                     	;# 
   284  0592                     	;# 
   285  0593                     	;# 
   286  0593                     	;# 
   287  0594                     	;# 
   288  0595                     	;# 
   289  0595                     	;# 
   290  0595                     	;# 
   291  0596                     	;# 
   292  0596                     	;# 
   293  0597                     	;# 
   294  0598                     	;# 
   295  0598                     	;# 
   296  0599                     	;# 
   297  059A                     	;# 
   298  059A                     	;# 
   299  0617                     	;# 
   300  0617                     	;# 
   301  0618                     	;# 
   302  0619                     	;# 
   303  061A                     	;# 
   304  061A                     	;# 
   305  061B                     	;# 
   306  061C                     	;# 
   307  068D                     	;# 
   308  068E                     	;# 
   309  068F                     	;# 
   310  0690                     	;# 
   311  0691                     	;# 
   312  0692                     	;# 
   313  0693                     	;# 
   314  0694                     	;# 
   315  0695                     	;# 
   316  0696                     	;# 
   317  0697                     	;# 
   318  0698                     	;# 
   319  0699                     	;# 
   320  069A                     	;# 
   321  069B                     	;# 
   322  069C                     	;# 
   323  069D                     	;# 
   324  069E                     	;# 
   325  069F                     	;# 
   326  070D                     	;# 
   327  070E                     	;# 
   328  070F                     	;# 
   329  0710                     	;# 
   330  0711                     	;# 
   331  0712                     	;# 
   332  0713                     	;# 
   333  0714                     	;# 
   334  0715                     	;# 
   335  0716                     	;# 
   336  0717                     	;# 
   337  0718                     	;# 
   338  0719                     	;# 
   339  071A                     	;# 
   340  071B                     	;# 
   341  071C                     	;# 
   342  071D                     	;# 
   343  071E                     	;# 
   344  071F                     	;# 
   345  0794                     	;# 
   346  0795                     	;# 
   347  0796                     	;# 
   348  0797                     	;# 
   349  0798                     	;# 
   350  0799                     	;# 
   351  079A                     	;# 
   352  079B                     	;# 
   353  079C                     	;# 
   354  079D                     	;# 
   355  079E                     	;# 
   356  079F                     	;# 
   357  0D8E                     	;# 
   358  0D8F                     	;# 
   359  0D90                     	;# 
   360  0D91                     	;# 
   361  0D91                     	;# 
   362  0D92                     	;# 
   363  0D93                     	;# 
   364  0D93                     	;# 
   365  0D94                     	;# 
   366  0D95                     	;# 
   367  0D95                     	;# 
   368  0D96                     	;# 
   369  0D97                     	;# 
   370  0D97                     	;# 
   371  0D98                     	;# 
   372  0D99                     	;# 
   373  0D99                     	;# 
   374  0D9A                     	;# 
   375  0D9B                     	;# 
   376  0D9C                     	;# 
   377  0D9C                     	;# 
   378  0D9D                     	;# 
   379  0D9D                     	;# 
   380  0D9E                     	;# 
   381  0D9F                     	;# 
   382  0DA0                     	;# 
   383  0DA1                     	;# 
   384  0DA1                     	;# 
   385  0DA2                     	;# 
   386  0DA3                     	;# 
   387  0DA3                     	;# 
   388  0DA4                     	;# 
   389  0DA5                     	;# 
   390  0DA5                     	;# 
   391  0DA6                     	;# 
   392  0DA7                     	;# 
   393  0DA7                     	;# 
   394  0DA8                     	;# 
   395  0DA9                     	;# 
   396  0DA9                     	;# 
   397  0DAA                     	;# 
   398  0DAB                     	;# 
   399  0DAC                     	;# 
   400  0DAC                     	;# 
   401  0DAD                     	;# 
   402  0DAD                     	;# 
   403  0DAE                     	;# 
   404  0DAF                     	;# 
   405  0DB0                     	;# 
   406  0E0F                     	;# 
   407  0E10                     	;# 
   408  0E11                     	;# 
   409  0E12                     	;# 
   410  0E13                     	;# 
   411  0E14                     	;# 
   412  0E15                     	;# 
   413  0E16                     	;# 
   414  0E17                     	;# 
   415  0E19                     	;# 
   416  0E19                     	;# 
   417  0E19                     	;# 
   418  0E1A                     	;# 
   419  0E1B                     	;# 
   420  0E1C                     	;# 
   421  0E1C                     	;# 
   422  0E1C                     	;# 
   423  0E1D                     	;# 
   424  0E1E                     	;# 
   425  0E1F                     	;# 
   426  0E1F                     	;# 
   427  0E1F                     	;# 
   428  0E20                     	;# 
   429  0E21                     	;# 
   430  0E22                     	;# 
   431  0E24                     	;# 
   432  0E25                     	;# 
   433  0E28                     	;# 
   434  0E29                     	;# 
   435  0E2A                     	;# 
   436  0E2B                     	;# 
   437  0E2C                     	;# 
   438  0E2D                     	;# 
   439  0E2E                     	;# 
   440  0E2F                     	;# 
   441  0E30                     	;# 
   442  0E31                     	;# 
   443  0E32                     	;# 
   444  0E33                     	;# 
   445  0E34                     	;# 
   446  0E35                     	;# 
   447  0E90                     	;# 
   448  0E91                     	;# 
   449  0E92                     	;# 
   450  0E94                     	;# 
   451  0E95                     	;# 
   452  0E9C                     	;# 
   453  0E9D                     	;# 
   454  0E9E                     	;# 
   455  0E9F                     	;# 
   456  0EA0                     	;# 
   457  0EA1                     	;# 
   458  0EA2                     	;# 
   459  0EA3                     	;# 
   460  0EA4                     	;# 
   461  0EA5                     	;# 
   462  0EA6                     	;# 
   463  0EA7                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0F20                     	;# 
   482  0F21                     	;# 
   483  0F22                     	;# 
   484  0F23                     	;# 
   485  0F24                     	;# 
   486  0F25                     	;# 
   487  0F26                     	;# 
   488  0F27                     	;# 
   489  0F28                     	;# 
   490  0F29                     	;# 
   491  0F2A                     	;# 
   492  0F2B                     	;# 
   493  0F2C                     	;# 
   494  0F2D                     	;# 
   495  0FE4                     	;# 
   496  0FE5                     	;# 
   497  0FE6                     	;# 
   498  0FE7                     	;# 
   499  0FE8                     	;# 
   500  0FE9                     	;# 
   501  0FEA                     	;# 
   502  0FEB                     	;# 
   503  0FED                     	;# 
   504  0FEE                     	;# 
   505  0FEF                     	;# 
   506  0000                     	;# 
   507  0001                     	;# 
   508  0002                     	;# 
   509  0003                     	;# 
   510  0004                     	;# 
   511  0005                     	;# 
   512  0006                     	;# 
   513  0007                     	;# 
   514  0008                     	;# 
   515  0009                     	;# 
   516  000A                     	;# 
   517  000B                     	;# 
   518  000C                     	;# 
   519  000D                     	;# 
   520  000E                     	;# 
   521  0011                     	;# 
   522  0012                     	;# 
   523  0013                     	;# 
   524  0014                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0016                     	;# 
   528  0017                     	;# 
   529  0018                     	;# 
   530  0019                     	;# 
   531  001A                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001D                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  0091                     	;# 
   543  0092                     	;# 
   544  0093                     	;# 
   545  0094                     	;# 
   546  0095                     	;# 
   547  0096                     	;# 
   548  0097                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009A                     	;# 
   552  009B                     	;# 
   553  009B                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  010C                     	;# 
   559  010D                     	;# 
   560  010E                     	;# 
   561  010F                     	;# 
   562  0110                     	;# 
   563  0111                     	;# 
   564  0112                     	;# 
   565  0113                     	;# 
   566  0114                     	;# 
   567  0115                     	;# 
   568  0116                     	;# 
   569  0117                     	;# 
   570  0118                     	;# 
   571  0119                     	;# 
   572  011A                     	;# 
   573  011B                     	;# 
   574  011C                     	;# 
   575  011D                     	;# 
   576  011E                     	;# 
   577  011F                     	;# 
   578  018C                     	;# 
   579  018D                     	;# 
   580  018E                     	;# 
   581  0191                     	;# 
   582  0191                     	;# 
   583  0192                     	;# 
   584  0193                     	;# 
   585  0193                     	;# 
   586  0194                     	;# 
   587  0195                     	;# 
   588  0196                     	;# 
   589  0197                     	;# 
   590  0199                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019A                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019C                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019D                     	;# 
   606  019D                     	;# 
   607  019E                     	;# 
   608  019E                     	;# 
   609  019E                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  020C                     	;# 
   616  020D                     	;# 
   617  020E                     	;# 
   618  0211                     	;# 
   619  0211                     	;# 
   620  0212                     	;# 
   621  0212                     	;# 
   622  0213                     	;# 
   623  0213                     	;# 
   624  0214                     	;# 
   625  0214                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0216                     	;# 
   631  0216                     	;# 
   632  0217                     	;# 
   633  0217                     	;# 
   634  021D                     	;# 
   635  021E                     	;# 
   636  021F                     	;# 
   637  028C                     	;# 
   638  028D                     	;# 
   639  028E                     	;# 
   640  0291                     	;# 
   641  0291                     	;# 
   642  0292                     	;# 
   643  0293                     	;# 
   644  0294                     	;# 
   645  0298                     	;# 
   646  0298                     	;# 
   647  0299                     	;# 
   648  029A                     	;# 
   649  029B                     	;# 
   650  029E                     	;# 
   651  030C                     	;# 
   652  030D                     	;# 
   653  030E                     	;# 
   654  031B                     	;# 
   655  031C                     	;# 
   656  031D                     	;# 
   657  031E                     	;# 
   658  031F                     	;# 
   659  038C                     	;# 
   660  038D                     	;# 
   661  038E                     	;# 
   662  0391                     	;# 
   663  0392                     	;# 
   664  0393                     	;# 
   665  0394                     	;# 
   666  0395                     	;# 
   667  0396                     	;# 
   668  0397                     	;# 
   669  0398                     	;# 
   670  0399                     	;# 
   671  039B                     	;# 
   672  039C                     	;# 
   673  039D                     	;# 
   674  039E                     	;# 
   675  039F                     	;# 
   676  040E                     	;# 
   677  0413                     	;# 
   678  0413                     	;# 
   679  0414                     	;# 
   680  0414                     	;# 
   681  0415                     	;# 
   682  0416                     	;# 
   683  0417                     	;# 
   684  0418                     	;# 
   685  041A                     	;# 
   686  041A                     	;# 
   687  041B                     	;# 
   688  041B                     	;# 
   689  041C                     	;# 
   690  041D                     	;# 
   691  041E                     	;# 
   692  041F                     	;# 
   693  0493                     	;# 
   694  0493                     	;# 
   695  0494                     	;# 
   696  0495                     	;# 
   697  0496                     	;# 
   698  049A                     	;# 
   699  049A                     	;# 
   700  049B                     	;# 
   701  049C                     	;# 
   702  049D                     	;# 
   703  050F                     	;# 
   704  0510                     	;# 
   705  0511                     	;# 
   706  0512                     	;# 
   707  0513                     	;# 
   708  0514                     	;# 
   709  0515                     	;# 
   710  0516                     	;# 
   711  0590                     	;# 
   712  0591                     	;# 
   713  0592                     	;# 
   714  0592                     	;# 
   715  0592                     	;# 
   716  0593                     	;# 
   717  0593                     	;# 
   718  0594                     	;# 
   719  0595                     	;# 
   720  0595                     	;# 
   721  0595                     	;# 
   722  0596                     	;# 
   723  0596                     	;# 
   724  0597                     	;# 
   725  0598                     	;# 
   726  0598                     	;# 
   727  0599                     	;# 
   728  059A                     	;# 
   729  059A                     	;# 
   730  0617                     	;# 
   731  0617                     	;# 
   732  0618                     	;# 
   733  0619                     	;# 
   734  061A                     	;# 
   735  061A                     	;# 
   736  061B                     	;# 
   737  061C                     	;# 
   738  068D                     	;# 
   739  068E                     	;# 
   740  068F                     	;# 
   741  0690                     	;# 
   742  0691                     	;# 
   743  0692                     	;# 
   744  0693                     	;# 
   745  0694                     	;# 
   746  0695                     	;# 
   747  0696                     	;# 
   748  0697                     	;# 
   749  0698                     	;# 
   750  0699                     	;# 
   751  069A                     	;# 
   752  069B                     	;# 
   753  069C                     	;# 
   754  069D                     	;# 
   755  069E                     	;# 
   756  069F                     	;# 
   757  070D                     	;# 
   758  070E                     	;# 
   759  070F                     	;# 
   760  0710                     	;# 
   761  0711                     	;# 
   762  0712                     	;# 
   763  0713                     	;# 
   764  0714                     	;# 
   765  0715                     	;# 
   766  0716                     	;# 
   767  0717                     	;# 
   768  0718                     	;# 
   769  0719                     	;# 
   770  071A                     	;# 
   771  071B                     	;# 
   772  071C                     	;# 
   773  071D                     	;# 
   774  071E                     	;# 
   775  071F                     	;# 
   776  0794                     	;# 
   777  0795                     	;# 
   778  0796                     	;# 
   779  0797                     	;# 
   780  0798                     	;# 
   781  0799                     	;# 
   782  079A                     	;# 
   783  079B                     	;# 
   784  079C                     	;# 
   785  079D                     	;# 
   786  079E                     	;# 
   787  079F                     	;# 
   788  0D8E                     	;# 
   789  0D8F                     	;# 
   790  0D90                     	;# 
   791  0D91                     	;# 
   792  0D91                     	;# 
   793  0D92                     	;# 
   794  0D93                     	;# 
   795  0D93                     	;# 
   796  0D94                     	;# 
   797  0D95                     	;# 
   798  0D95                     	;# 
   799  0D96                     	;# 
   800  0D97                     	;# 
   801  0D97                     	;# 
   802  0D98                     	;# 
   803  0D99                     	;# 
   804  0D99                     	;# 
   805  0D9A                     	;# 
   806  0D9B                     	;# 
   807  0D9C                     	;# 
   808  0D9C                     	;# 
   809  0D9D                     	;# 
   810  0D9D                     	;# 
   811  0D9E                     	;# 
   812  0D9F                     	;# 
   813  0DA0                     	;# 
   814  0DA1                     	;# 
   815  0DA1                     	;# 
   816  0DA2                     	;# 
   817  0DA3                     	;# 
   818  0DA3                     	;# 
   819  0DA4                     	;# 
   820  0DA5                     	;# 
   821  0DA5                     	;# 
   822  0DA6                     	;# 
   823  0DA7                     	;# 
   824  0DA7                     	;# 
   825  0DA8                     	;# 
   826  0DA9                     	;# 
   827  0DA9                     	;# 
   828  0DAA                     	;# 
   829  0DAB                     	;# 
   830  0DAC                     	;# 
   831  0DAC                     	;# 
   832  0DAD                     	;# 
   833  0DAD                     	;# 
   834  0DAE                     	;# 
   835  0DAF                     	;# 
   836  0DB0                     	;# 
   837  0E0F                     	;# 
   838  0E10                     	;# 
   839  0E11                     	;# 
   840  0E12                     	;# 
   841  0E13                     	;# 
   842  0E14                     	;# 
   843  0E15                     	;# 
   844  0E16                     	;# 
   845  0E17                     	;# 
   846  0E19                     	;# 
   847  0E19                     	;# 
   848  0E19                     	;# 
   849  0E1A                     	;# 
   850  0E1B                     	;# 
   851  0E1C                     	;# 
   852  0E1C                     	;# 
   853  0E1C                     	;# 
   854  0E1D                     	;# 
   855  0E1E                     	;# 
   856  0E1F                     	;# 
   857  0E1F                     	;# 
   858  0E1F                     	;# 
   859  0E20                     	;# 
   860  0E21                     	;# 
   861  0E22                     	;# 
   862  0E24                     	;# 
   863  0E25                     	;# 
   864  0E28                     	;# 
   865  0E29                     	;# 
   866  0E2A                     	;# 
   867  0E2B                     	;# 
   868  0E2C                     	;# 
   869  0E2D                     	;# 
   870  0E2E                     	;# 
   871  0E2F                     	;# 
   872  0E30                     	;# 
   873  0E31                     	;# 
   874  0E32                     	;# 
   875  0E33                     	;# 
   876  0E34                     	;# 
   877  0E35                     	;# 
   878  0E90                     	;# 
   879  0E91                     	;# 
   880  0E92                     	;# 
   881  0E94                     	;# 
   882  0E95                     	;# 
   883  0E9C                     	;# 
   884  0E9D                     	;# 
   885  0E9E                     	;# 
   886  0E9F                     	;# 
   887  0EA0                     	;# 
   888  0EA1                     	;# 
   889  0EA2                     	;# 
   890  0EA3                     	;# 
   891  0EA4                     	;# 
   892  0EA5                     	;# 
   893  0EA6                     	;# 
   894  0EA7                     	;# 
   895  0F0F                     	;# 
   896  0F10                     	;# 
   897  0F11                     	;# 
   898  0F12                     	;# 
   899  0F13                     	;# 
   900  0F14                     	;# 
   901  0F15                     	;# 
   902  0F16                     	;# 
   903  0F17                     	;# 
   904  0F18                     	;# 
   905  0F19                     	;# 
   906  0F1A                     	;# 
   907  0F1B                     	;# 
   908  0F1C                     	;# 
   909  0F1D                     	;# 
   910  0F1E                     	;# 
   911  0F1F                     	;# 
   912  0F20                     	;# 
   913  0F21                     	;# 
   914  0F22                     	;# 
   915  0F23                     	;# 
   916  0F24                     	;# 
   917  0F25                     	;# 
   918  0F26                     	;# 
   919  0F27                     	;# 
   920  0F28                     	;# 
   921  0F29                     	;# 
   922  0F2A                     	;# 
   923  0F2B                     	;# 
   924  0F2C                     	;# 
   925  0F2D                     	;# 
   926  0FE4                     	;# 
   927  0FE5                     	;# 
   928  0FE6                     	;# 
   929  0FE7                     	;# 
   930  0FE8                     	;# 
   931  0FE9                     	;# 
   932  0FEA                     	;# 
   933  0FEB                     	;# 
   934  0FED                     	;# 
   935  0FEE                     	;# 
   936  0FEF                     	;# 
   937  0000                     	;# 
   938  0001                     	;# 
   939  0002                     	;# 
   940  0003                     	;# 
   941  0004                     	;# 
   942  0005                     	;# 
   943  0006                     	;# 
   944  0007                     	;# 
   945  0008                     	;# 
   946  0009                     	;# 
   947  000A                     	;# 
   948  000B                     	;# 
   949  000C                     	;# 
   950  000D                     	;# 
   951  000E                     	;# 
   952  0011                     	;# 
   953  0012                     	;# 
   954  0013                     	;# 
   955  0014                     	;# 
   956  0015                     	;# 
   957  0016                     	;# 
   958  0016                     	;# 
   959  0017                     	;# 
   960  0018                     	;# 
   961  0019                     	;# 
   962  001A                     	;# 
   963  001A                     	;# 
   964  001B                     	;# 
   965  001B                     	;# 
   966  001C                     	;# 
   967  001D                     	;# 
   968  001E                     	;# 
   969  001F                     	;# 
   970  008C                     	;# 
   971  008D                     	;# 
   972  008E                     	;# 
   973  0091                     	;# 
   974  0092                     	;# 
   975  0093                     	;# 
   976  0094                     	;# 
   977  0095                     	;# 
   978  0096                     	;# 
   979  0097                     	;# 
   980  0098                     	;# 
   981  0099                     	;# 
   982  009A                     	;# 
   983  009B                     	;# 
   984  009B                     	;# 
   985  009C                     	;# 
   986  009D                     	;# 
   987  009E                     	;# 
   988  009F                     	;# 
   989  010C                     	;# 
   990  010D                     	;# 
   991  010E                     	;# 
   992  010F                     	;# 
   993  0110                     	;# 
   994  0111                     	;# 
   995  0112                     	;# 
   996  0113                     	;# 
   997  0114                     	;# 
   998  0115                     	;# 
   999  0116                     	;# 
  1000  0117                     	;# 
  1001  0118                     	;# 
  1002  0119                     	;# 
  1003  011A                     	;# 
  1004  011B                     	;# 
  1005  011C                     	;# 
  1006  011D                     	;# 
  1007  011E                     	;# 
  1008  011F                     	;# 
  1009  018C                     	;# 
  1010  018D                     	;# 
  1011  018E                     	;# 
  1012  0191                     	;# 
  1013  0191                     	;# 
  1014  0192                     	;# 
  1015  0193                     	;# 
  1016  0193                     	;# 
  1017  0194                     	;# 
  1018  0195                     	;# 
  1019  0196                     	;# 
  1020  0197                     	;# 
  1021  0199                     	;# 
  1022  0199                     	;# 
  1023  0199                     	;# 
  1024  019A                     	;# 
  1025  019A                     	;# 
  1026  019A                     	;# 
  1027  019B                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019C                     	;# 
  1033  019C                     	;# 
  1034  019C                     	;# 
  1035  019D                     	;# 
  1036  019D                     	;# 
  1037  019D                     	;# 
  1038  019E                     	;# 
  1039  019E                     	;# 
  1040  019E                     	;# 
  1041  019F                     	;# 
  1042  019F                     	;# 
  1043  019F                     	;# 
  1044  019F                     	;# 
  1045  019F                     	;# 
  1046  020C                     	;# 
  1047  020D                     	;# 
  1048  020E                     	;# 
  1049  0211                     	;# 
  1050  0211                     	;# 
  1051  0212                     	;# 
  1052  0212                     	;# 
  1053  0213                     	;# 
  1054  0213                     	;# 
  1055  0214                     	;# 
  1056  0214                     	;# 
  1057  0215                     	;# 
  1058  0215                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0216                     	;# 
  1062  0216                     	;# 
  1063  0217                     	;# 
  1064  0217                     	;# 
  1065  021D                     	;# 
  1066  021E                     	;# 
  1067  021F                     	;# 
  1068  028C                     	;# 
  1069  028D                     	;# 
  1070  028E                     	;# 
  1071  0291                     	;# 
  1072  0291                     	;# 
  1073  0292                     	;# 
  1074  0293                     	;# 
  1075  0294                     	;# 
  1076  0298                     	;# 
  1077  0298                     	;# 
  1078  0299                     	;# 
  1079  029A                     	;# 
  1080  029B                     	;# 
  1081  029E                     	;# 
  1082  030C                     	;# 
  1083  030D                     	;# 
  1084  030E                     	;# 
  1085  031B                     	;# 
  1086  031C                     	;# 
  1087  031D                     	;# 
  1088  031E                     	;# 
  1089  031F                     	;# 
  1090  038C                     	;# 
  1091  038D                     	;# 
  1092  038E                     	;# 
  1093  0391                     	;# 
  1094  0392                     	;# 
  1095  0393                     	;# 
  1096  0394                     	;# 
  1097  0395                     	;# 
  1098  0396                     	;# 
  1099  0397                     	;# 
  1100  0398                     	;# 
  1101  0399                     	;# 
  1102  039B                     	;# 
  1103  039C                     	;# 
  1104  039D                     	;# 
  1105  039E                     	;# 
  1106  039F                     	;# 
  1107  040E                     	;# 
  1108  0413                     	;# 
  1109  0413                     	;# 
  1110  0414                     	;# 
  1111  0414                     	;# 
  1112  0415                     	;# 
  1113  0416                     	;# 
  1114  0417                     	;# 
  1115  0418                     	;# 
  1116  041A                     	;# 
  1117  041A                     	;# 
  1118  041B                     	;# 
  1119  041B                     	;# 
  1120  041C                     	;# 
  1121  041D                     	;# 
  1122  041E                     	;# 
  1123  041F                     	;# 
  1124  0493                     	;# 
  1125  0493                     	;# 
  1126  0494                     	;# 
  1127  0495                     	;# 
  1128  0496                     	;# 
  1129  049A                     	;# 
  1130  049A                     	;# 
  1131  049B                     	;# 
  1132  049C                     	;# 
  1133  049D                     	;# 
  1134  050F                     	;# 
  1135  0510                     	;# 
  1136  0511                     	;# 
  1137  0512                     	;# 
  1138  0513                     	;# 
  1139  0514                     	;# 
  1140  0515                     	;# 
  1141  0516                     	;# 
  1142  0590                     	;# 
  1143  0591                     	;# 
  1144  0592                     	;# 
  1145  0592                     	;# 
  1146  0592                     	;# 
  1147  0593                     	;# 
  1148  0593                     	;# 
  1149  0594                     	;# 
  1150  0595                     	;# 
  1151  0595                     	;# 
  1152  0595                     	;# 
  1153  0596                     	;# 
  1154  0596                     	;# 
  1155  0597                     	;# 
  1156  0598                     	;# 
  1157  0598                     	;# 
  1158  0599                     	;# 
  1159  059A                     	;# 
  1160  059A                     	;# 
  1161  0617                     	;# 
  1162  0617                     	;# 
  1163  0618                     	;# 
  1164  0619                     	;# 
  1165  061A                     	;# 
  1166  061A                     	;# 
  1167  061B                     	;# 
  1168  061C                     	;# 
  1169  068D                     	;# 
  1170  068E                     	;# 
  1171  068F                     	;# 
  1172  0690                     	;# 
  1173  0691                     	;# 
  1174  0692                     	;# 
  1175  0693                     	;# 
  1176  0694                     	;# 
  1177  0695                     	;# 
  1178  0696                     	;# 
  1179  0697                     	;# 
  1180  0698                     	;# 
  1181  0699                     	;# 
  1182  069A                     	;# 
  1183  069B                     	;# 
  1184  069C                     	;# 
  1185  069D                     	;# 
  1186  069E                     	;# 
  1187  069F                     	;# 
  1188  070D                     	;# 
  1189  070E                     	;# 
  1190  070F                     	;# 
  1191  0710                     	;# 
  1192  0711                     	;# 
  1193  0712                     	;# 
  1194  0713                     	;# 
  1195  0714                     	;# 
  1196  0715                     	;# 
  1197  0716                     	;# 
  1198  0717                     	;# 
  1199  0718                     	;# 
  1200  0719                     	;# 
  1201  071A                     	;# 
  1202  071B                     	;# 
  1203  071C                     	;# 
  1204  071D                     	;# 
  1205  071E                     	;# 
  1206  071F                     	;# 
  1207  0794                     	;# 
  1208  0795                     	;# 
  1209  0796                     	;# 
  1210  0797                     	;# 
  1211  0798                     	;# 
  1212  0799                     	;# 
  1213  079A                     	;# 
  1214  079B                     	;# 
  1215  079C                     	;# 
  1216  079D                     	;# 
  1217  079E                     	;# 
  1218  079F                     	;# 
  1219  0D8E                     	;# 
  1220  0D8F                     	;# 
  1221  0D90                     	;# 
  1222  0D91                     	;# 
  1223  0D91                     	;# 
  1224  0D92                     	;# 
  1225  0D93                     	;# 
  1226  0D93                     	;# 
  1227  0D94                     	;# 
  1228  0D95                     	;# 
  1229  0D95                     	;# 
  1230  0D96                     	;# 
  1231  0D97                     	;# 
  1232  0D97                     	;# 
  1233  0D98                     	;# 
  1234  0D99                     	;# 
  1235  0D99                     	;# 
  1236  0D9A                     	;# 
  1237  0D9B                     	;# 
  1238  0D9C                     	;# 
  1239  0D9C                     	;# 
  1240  0D9D                     	;# 
  1241  0D9D                     	;# 
  1242  0D9E                     	;# 
  1243  0D9F                     	;# 
  1244  0DA0                     	;# 
  1245  0DA1                     	;# 
  1246  0DA1                     	;# 
  1247  0DA2                     	;# 
  1248  0DA3                     	;# 
  1249  0DA3                     	;# 
  1250  0DA4                     	;# 
  1251  0DA5                     	;# 
  1252  0DA5                     	;# 
  1253  0DA6                     	;# 
  1254  0DA7                     	;# 
  1255  0DA7                     	;# 
  1256  0DA8                     	;# 
  1257  0DA9                     	;# 
  1258  0DA9                     	;# 
  1259  0DAA                     	;# 
  1260  0DAB                     	;# 
  1261  0DAC                     	;# 
  1262  0DAC                     	;# 
  1263  0DAD                     	;# 
  1264  0DAD                     	;# 
  1265  0DAE                     	;# 
  1266  0DAF                     	;# 
  1267  0DB0                     	;# 
  1268  0E0F                     	;# 
  1269  0E10                     	;# 
  1270  0E11                     	;# 
  1271  0E12                     	;# 
  1272  0E13                     	;# 
  1273  0E14                     	;# 
  1274  0E15                     	;# 
  1275  0E16                     	;# 
  1276  0E17                     	;# 
  1277  0E19                     	;# 
  1278  0E19                     	;# 
  1279  0E19                     	;# 
  1280  0E1A                     	;# 
  1281  0E1B                     	;# 
  1282  0E1C                     	;# 
  1283  0E1C                     	;# 
  1284  0E1C                     	;# 
  1285  0E1D                     	;# 
  1286  0E1E                     	;# 
  1287  0E1F                     	;# 
  1288  0E1F                     	;# 
  1289  0E1F                     	;# 
  1290  0E20                     	;# 
  1291  0E21                     	;# 
  1292  0E22                     	;# 
  1293  0E24                     	;# 
  1294  0E25                     	;# 
  1295  0E28                     	;# 
  1296  0E29                     	;# 
  1297  0E2A                     	;# 
  1298  0E2B                     	;# 
  1299  0E2C                     	;# 
  1300  0E2D                     	;# 
  1301  0E2E                     	;# 
  1302  0E2F                     	;# 
  1303  0E30                     	;# 
  1304  0E31                     	;# 
  1305  0E32                     	;# 
  1306  0E33                     	;# 
  1307  0E34                     	;# 
  1308  0E35                     	;# 
  1309  0E90                     	;# 
  1310  0E91                     	;# 
  1311  0E92                     	;# 
  1312  0E94                     	;# 
  1313  0E95                     	;# 
  1314  0E9C                     	;# 
  1315  0E9D                     	;# 
  1316  0E9E                     	;# 
  1317  0E9F                     	;# 
  1318  0EA0                     	;# 
  1319  0EA1                     	;# 
  1320  0EA2                     	;# 
  1321  0EA3                     	;# 
  1322  0EA4                     	;# 
  1323  0EA5                     	;# 
  1324  0EA6                     	;# 
  1325  0EA7                     	;# 
  1326  0F0F                     	;# 
  1327  0F10                     	;# 
  1328  0F11                     	;# 
  1329  0F12                     	;# 
  1330  0F13                     	;# 
  1331  0F14                     	;# 
  1332  0F15                     	;# 
  1333  0F16                     	;# 
  1334  0F17                     	;# 
  1335  0F18                     	;# 
  1336  0F19                     	;# 
  1337  0F1A                     	;# 
  1338  0F1B                     	;# 
  1339  0F1C                     	;# 
  1340  0F1D                     	;# 
  1341  0F1E                     	;# 
  1342  0F1F                     	;# 
  1343  0F20                     	;# 
  1344  0F21                     	;# 
  1345  0F22                     	;# 
  1346  0F23                     	;# 
  1347  0F24                     	;# 
  1348  0F25                     	;# 
  1349  0F26                     	;# 
  1350  0F27                     	;# 
  1351  0F28                     	;# 
  1352  0F29                     	;# 
  1353  0F2A                     	;# 
  1354  0F2B                     	;# 
  1355  0F2C                     	;# 
  1356  0F2D                     	;# 
  1357  0FE4                     	;# 
  1358  0FE5                     	;# 
  1359  0FE6                     	;# 
  1360  0FE7                     	;# 
  1361  0FE8                     	;# 
  1362  0FE9                     	;# 
  1363  0FEA                     	;# 
  1364  0FEB                     	;# 
  1365  0FED                     	;# 
  1366  0FEE                     	;# 
  1367  0FEF                     	;# 
  1368  0000                     	;# 
  1369  0001                     	;# 
  1370  0002                     	;# 
  1371  0003                     	;# 
  1372  0004                     	;# 
  1373  0005                     	;# 
  1374  0006                     	;# 
  1375  0007                     	;# 
  1376  0008                     	;# 
  1377  0009                     	;# 
  1378  000A                     	;# 
  1379  000B                     	;# 
  1380  000C                     	;# 
  1381  000D                     	;# 
  1382  000E                     	;# 
  1383  0011                     	;# 
  1384  0012                     	;# 
  1385  0013                     	;# 
  1386  0014                     	;# 
  1387  0015                     	;# 
  1388  0016                     	;# 
  1389  0016                     	;# 
  1390  0017                     	;# 
  1391  0018                     	;# 
  1392  0019                     	;# 
  1393  001A                     	;# 
  1394  001A                     	;# 
  1395  001B                     	;# 
  1396  001B                     	;# 
  1397  001C                     	;# 
  1398  001D                     	;# 
  1399  001E                     	;# 
  1400  001F                     	;# 
  1401  008C                     	;# 
  1402  008D                     	;# 
  1403  008E                     	;# 
  1404  0091                     	;# 
  1405  0092                     	;# 
  1406  0093                     	;# 
  1407  0094                     	;# 
  1408  0095                     	;# 
  1409  0096                     	;# 
  1410  0097                     	;# 
  1411  0098                     	;# 
  1412  0099                     	;# 
  1413  009A                     	;# 
  1414  009B                     	;# 
  1415  009B                     	;# 
  1416  009C                     	;# 
  1417  009D                     	;# 
  1418  009E                     	;# 
  1419  009F                     	;# 
  1420  010C                     	;# 
  1421  010D                     	;# 
  1422  010E                     	;# 
  1423  010F                     	;# 
  1424  0110                     	;# 
  1425  0111                     	;# 
  1426  0112                     	;# 
  1427  0113                     	;# 
  1428  0114                     	;# 
  1429  0115                     	;# 
  1430  0116                     	;# 
  1431  0117                     	;# 
  1432  0118                     	;# 
  1433  0119                     	;# 
  1434  011A                     	;# 
  1435  011B                     	;# 
  1436  011C                     	;# 
  1437  011D                     	;# 
  1438  011E                     	;# 
  1439  011F                     	;# 
  1440  018C                     	;# 
  1441  018D                     	;# 
  1442  018E                     	;# 
  1443  0191                     	;# 
  1444  0191                     	;# 
  1445  0192                     	;# 
  1446  0193                     	;# 
  1447  0193                     	;# 
  1448  0194                     	;# 
  1449  0195                     	;# 
  1450  0196                     	;# 
  1451  0197                     	;# 
  1452  0199                     	;# 
  1453  0199                     	;# 
  1454  0199                     	;# 
  1455  019A                     	;# 
  1456  019A                     	;# 
  1457  019A                     	;# 
  1458  019B                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019B                     	;# 
  1462  019B                     	;# 
  1463  019C                     	;# 
  1464  019C                     	;# 
  1465  019C                     	;# 
  1466  019D                     	;# 
  1467  019D                     	;# 
  1468  019D                     	;# 
  1469  019E                     	;# 
  1470  019E                     	;# 
  1471  019E                     	;# 
  1472  019F                     	;# 
  1473  019F                     	;# 
  1474  019F                     	;# 
  1475  019F                     	;# 
  1476  019F                     	;# 
  1477  020C                     	;# 
  1478  020D                     	;# 
  1479  020E                     	;# 
  1480  0211                     	;# 
  1481  0211                     	;# 
  1482  0212                     	;# 
  1483  0212                     	;# 
  1484  0213                     	;# 
  1485  0213                     	;# 
  1486  0214                     	;# 
  1487  0214                     	;# 
  1488  0215                     	;# 
  1489  0215                     	;# 
  1490  0215                     	;# 
  1491  0215                     	;# 
  1492  0216                     	;# 
  1493  0216                     	;# 
  1494  0217                     	;# 
  1495  0217                     	;# 
  1496  021D                     	;# 
  1497  021E                     	;# 
  1498  021F                     	;# 
  1499  028C                     	;# 
  1500  028D                     	;# 
  1501  028E                     	;# 
  1502  0291                     	;# 
  1503  0291                     	;# 
  1504  0292                     	;# 
  1505  0293                     	;# 
  1506  0294                     	;# 
  1507  0298                     	;# 
  1508  0298                     	;# 
  1509  0299                     	;# 
  1510  029A                     	;# 
  1511  029B                     	;# 
  1512  029E                     	;# 
  1513  030C                     	;# 
  1514  030D                     	;# 
  1515  030E                     	;# 
  1516  031B                     	;# 
  1517  031C                     	;# 
  1518  031D                     	;# 
  1519  031E                     	;# 
  1520  031F                     	;# 
  1521  038C                     	;# 
  1522  038D                     	;# 
  1523  038E                     	;# 
  1524  0391                     	;# 
  1525  0392                     	;# 
  1526  0393                     	;# 
  1527  0394                     	;# 
  1528  0395                     	;# 
  1529  0396                     	;# 
  1530  0397                     	;# 
  1531  0398                     	;# 
  1532  0399                     	;# 
  1533  039B                     	;# 
  1534  039C                     	;# 
  1535  039D                     	;# 
  1536  039E                     	;# 
  1537  039F                     	;# 
  1538  040E                     	;# 
  1539  0413                     	;# 
  1540  0413                     	;# 
  1541  0414                     	;# 
  1542  0414                     	;# 
  1543  0415                     	;# 
  1544  0416                     	;# 
  1545  0417                     	;# 
  1546  0418                     	;# 
  1547  041A                     	;# 
  1548  041A                     	;# 
  1549  041B                     	;# 
  1550  041B                     	;# 
  1551  041C                     	;# 
  1552  041D                     	;# 
  1553  041E                     	;# 
  1554  041F                     	;# 
  1555  0493                     	;# 
  1556  0493                     	;# 
  1557  0494                     	;# 
  1558  0495                     	;# 
  1559  0496                     	;# 
  1560  049A                     	;# 
  1561  049A                     	;# 
  1562  049B                     	;# 
  1563  049C                     	;# 
  1564  049D                     	;# 
  1565  050F                     	;# 
  1566  0510                     	;# 
  1567  0511                     	;# 
  1568  0512                     	;# 
  1569  0513                     	;# 
  1570  0514                     	;# 
  1571  0515                     	;# 
  1572  0516                     	;# 
  1573  0590                     	;# 
  1574  0591                     	;# 
  1575  0592                     	;# 
  1576  0592                     	;# 
  1577  0592                     	;# 
  1578  0593                     	;# 
  1579  0593                     	;# 
  1580  0594                     	;# 
  1581  0595                     	;# 
  1582  0595                     	;# 
  1583  0595                     	;# 
  1584  0596                     	;# 
  1585  0596                     	;# 
  1586  0597                     	;# 
  1587  0598                     	;# 
  1588  0598                     	;# 
  1589  0599                     	;# 
  1590  059A                     	;# 
  1591  059A                     	;# 
  1592  0617                     	;# 
  1593  0617                     	;# 
  1594  0618                     	;# 
  1595  0619                     	;# 
  1596  061A                     	;# 
  1597  061A                     	;# 
  1598  061B                     	;# 
  1599  061C                     	;# 
  1600  068D                     	;# 
  1601  068E                     	;# 
  1602  068F                     	;# 
  1603  0690                     	;# 
  1604  0691                     	;# 
  1605  0692                     	;# 
  1606  0693                     	;# 
  1607  0694                     	;# 
  1608  0695                     	;# 
  1609  0696                     	;# 
  1610  0697                     	;# 
  1611  0698                     	;# 
  1612  0699                     	;# 
  1613  069A                     	;# 
  1614  069B                     	;# 
  1615  069C                     	;# 
  1616  069D                     	;# 
  1617  069E                     	;# 
  1618  069F                     	;# 
  1619  070D                     	;# 
  1620  070E                     	;# 
  1621  070F                     	;# 
  1622  0710                     	;# 
  1623  0711                     	;# 
  1624  0712                     	;# 
  1625  0713                     	;# 
  1626  0714                     	;# 
  1627  0715                     	;# 
  1628  0716                     	;# 
  1629  0717                     	;# 
  1630  0718                     	;# 
  1631  0719                     	;# 
  1632  071A                     	;# 
  1633  071B                     	;# 
  1634  071C                     	;# 
  1635  071D                     	;# 
  1636  071E                     	;# 
  1637  071F                     	;# 
  1638  0794                     	;# 
  1639  0795                     	;# 
  1640  0796                     	;# 
  1641  0797                     	;# 
  1642  0798                     	;# 
  1643  0799                     	;# 
  1644  079A                     	;# 
  1645  079B                     	;# 
  1646  079C                     	;# 
  1647  079D                     	;# 
  1648  079E                     	;# 
  1649  079F                     	;# 
  1650  0D8E                     	;# 
  1651  0D8F                     	;# 
  1652  0D90                     	;# 
  1653  0D91                     	;# 
  1654  0D91                     	;# 
  1655  0D92                     	;# 
  1656  0D93                     	;# 
  1657  0D93                     	;# 
  1658  0D94                     	;# 
  1659  0D95                     	;# 
  1660  0D95                     	;# 
  1661  0D96                     	;# 
  1662  0D97                     	;# 
  1663  0D97                     	;# 
  1664  0D98                     	;# 
  1665  0D99                     	;# 
  1666  0D99                     	;# 
  1667  0D9A                     	;# 
  1668  0D9B                     	;# 
  1669  0D9C                     	;# 
  1670  0D9C                     	;# 
  1671  0D9D                     	;# 
  1672  0D9D                     	;# 
  1673  0D9E                     	;# 
  1674  0D9F                     	;# 
  1675  0DA0                     	;# 
  1676  0DA1                     	;# 
  1677  0DA1                     	;# 
  1678  0DA2                     	;# 
  1679  0DA3                     	;# 
  1680  0DA3                     	;# 
  1681  0DA4                     	;# 
  1682  0DA5                     	;# 
  1683  0DA5                     	;# 
  1684  0DA6                     	;# 
  1685  0DA7                     	;# 
  1686  0DA7                     	;# 
  1687  0DA8                     	;# 
  1688  0DA9                     	;# 
  1689  0DA9                     	;# 
  1690  0DAA                     	;# 
  1691  0DAB                     	;# 
  1692  0DAC                     	;# 
  1693  0DAC                     	;# 
  1694  0DAD                     	;# 
  1695  0DAD                     	;# 
  1696  0DAE                     	;# 
  1697  0DAF                     	;# 
  1698  0DB0                     	;# 
  1699  0E0F                     	;# 
  1700  0E10                     	;# 
  1701  0E11                     	;# 
  1702  0E12                     	;# 
  1703  0E13                     	;# 
  1704  0E14                     	;# 
  1705  0E15                     	;# 
  1706  0E16                     	;# 
  1707  0E17                     	;# 
  1708  0E19                     	;# 
  1709  0E19                     	;# 
  1710  0E19                     	;# 
  1711  0E1A                     	;# 
  1712  0E1B                     	;# 
  1713  0E1C                     	;# 
  1714  0E1C                     	;# 
  1715  0E1C                     	;# 
  1716  0E1D                     	;# 
  1717  0E1E                     	;# 
  1718  0E1F                     	;# 
  1719  0E1F                     	;# 
  1720  0E1F                     	;# 
  1721  0E20                     	;# 
  1722  0E21                     	;# 
  1723  0E22                     	;# 
  1724  0E24                     	;# 
  1725  0E25                     	;# 
  1726  0E28                     	;# 
  1727  0E29                     	;# 
  1728  0E2A                     	;# 
  1729  0E2B                     	;# 
  1730  0E2C                     	;# 
  1731  0E2D                     	;# 
  1732  0E2E                     	;# 
  1733  0E2F                     	;# 
  1734  0E30                     	;# 
  1735  0E31                     	;# 
  1736  0E32                     	;# 
  1737  0E33                     	;# 
  1738  0E34                     	;# 
  1739  0E35                     	;# 
  1740  0E90                     	;# 
  1741  0E91                     	;# 
  1742  0E92                     	;# 
  1743  0E94                     	;# 
  1744  0E95                     	;# 
  1745  0E9C                     	;# 
  1746  0E9D                     	;# 
  1747  0E9E                     	;# 
  1748  0E9F                     	;# 
  1749  0EA0                     	;# 
  1750  0EA1                     	;# 
  1751  0EA2                     	;# 
  1752  0EA3                     	;# 
  1753  0EA4                     	;# 
  1754  0EA5                     	;# 
  1755  0EA6                     	;# 
  1756  0EA7                     	;# 
  1757  0F0F                     	;# 
  1758  0F10                     	;# 
  1759  0F11                     	;# 
  1760  0F12                     	;# 
  1761  0F13                     	;# 
  1762  0F14                     	;# 
  1763  0F15                     	;# 
  1764  0F16                     	;# 
  1765  0F17                     	;# 
  1766  0F18                     	;# 
  1767  0F19                     	;# 
  1768  0F1A                     	;# 
  1769  0F1B                     	;# 
  1770  0F1C                     	;# 
  1771  0F1D                     	;# 
  1772  0F1E                     	;# 
  1773  0F1F                     	;# 
  1774  0F20                     	;# 
  1775  0F21                     	;# 
  1776  0F22                     	;# 
  1777  0F23                     	;# 
  1778  0F24                     	;# 
  1779  0F25                     	;# 
  1780  0F26                     	;# 
  1781  0F27                     	;# 
  1782  0F28                     	;# 
  1783  0F29                     	;# 
  1784  0F2A                     	;# 
  1785  0F2B                     	;# 
  1786  0F2C                     	;# 
  1787  0F2D                     	;# 
  1788  0FE4                     	;# 
  1789  0FE5                     	;# 
  1790  0FE6                     	;# 
  1791  0FE7                     	;# 
  1792  0FE8                     	;# 
  1793  0FE9                     	;# 
  1794  0FEA                     	;# 
  1795  0FEB                     	;# 
  1796  0FED                     	;# 
  1797  0FEE                     	;# 
  1798  0FEF                     	;# 
  1799  0000                     	;# 
  1800  0001                     	;# 
  1801  0002                     	;# 
  1802  0003                     	;# 
  1803  0004                     	;# 
  1804  0005                     	;# 
  1805  0006                     	;# 
  1806  0007                     	;# 
  1807  0008                     	;# 
  1808  0009                     	;# 
  1809  000A                     	;# 
  1810  000B                     	;# 
  1811  000C                     	;# 
  1812  000D                     	;# 
  1813  000E                     	;# 
  1814  0011                     	;# 
  1815  0012                     	;# 
  1816  0013                     	;# 
  1817  0014                     	;# 
  1818  0015                     	;# 
  1819  0016                     	;# 
  1820  0016                     	;# 
  1821  0017                     	;# 
  1822  0018                     	;# 
  1823  0019                     	;# 
  1824  001A                     	;# 
  1825  001A                     	;# 
  1826  001B                     	;# 
  1827  001B                     	;# 
  1828  001C                     	;# 
  1829  001D                     	;# 
  1830  001E                     	;# 
  1831  001F                     	;# 
  1832  008C                     	;# 
  1833  008D                     	;# 
  1834  008E                     	;# 
  1835  0091                     	;# 
  1836  0092                     	;# 
  1837  0093                     	;# 
  1838  0094                     	;# 
  1839  0095                     	;# 
  1840  0096                     	;# 
  1841  0097                     	;# 
  1842  0098                     	;# 
  1843  0099                     	;# 
  1844  009A                     	;# 
  1845  009B                     	;# 
  1846  009B                     	;# 
  1847  009C                     	;# 
  1848  009D                     	;# 
  1849  009E                     	;# 
  1850  009F                     	;# 
  1851  010C                     	;# 
  1852  010D                     	;# 
  1853  010E                     	;# 
  1854  010F                     	;# 
  1855  0110                     	;# 
  1856  0111                     	;# 
  1857  0112                     	;# 
  1858  0113                     	;# 
  1859  0114                     	;# 
  1860  0115                     	;# 
  1861  0116                     	;# 
  1862  0117                     	;# 
  1863  0118                     	;# 
  1864  0119                     	;# 
  1865  011A                     	;# 
  1866  011B                     	;# 
  1867  011C                     	;# 
  1868  011D                     	;# 
  1869  011E                     	;# 
  1870  011F                     	;# 
  1871  018C                     	;# 
  1872  018D                     	;# 
  1873  018E                     	;# 
  1874  0191                     	;# 
  1875  0191                     	;# 
  1876  0192                     	;# 
  1877  0193                     	;# 
  1878  0193                     	;# 
  1879  0194                     	;# 
  1880  0195                     	;# 
  1881  0196                     	;# 
  1882  0197                     	;# 
  1883  0199                     	;# 
  1884  0199                     	;# 
  1885  0199                     	;# 
  1886  019A                     	;# 
  1887  019A                     	;# 
  1888  019A                     	;# 
  1889  019B                     	;# 
  1890  019B                     	;# 
  1891  019B                     	;# 
  1892  019B                     	;# 
  1893  019B                     	;# 
  1894  019C                     	;# 
  1895  019C                     	;# 
  1896  019C                     	;# 
  1897  019D                     	;# 
  1898  019D                     	;# 
  1899  019D                     	;# 
  1900  019E                     	;# 
  1901  019E                     	;# 
  1902  019E                     	;# 
  1903  019F                     	;# 
  1904  019F                     	;# 
  1905  019F                     	;# 
  1906  019F                     	;# 
  1907  019F                     	;# 
  1908  020C                     	;# 
  1909  020D                     	;# 
  1910  020E                     	;# 
  1911  0211                     	;# 
  1912  0211                     	;# 
  1913  0212                     	;# 
  1914  0212                     	;# 
  1915  0213                     	;# 
  1916  0213                     	;# 
  1917  0214                     	;# 
  1918  0214                     	;# 
  1919  0215                     	;# 
  1920  0215                     	;# 
  1921  0215                     	;# 
  1922  0215                     	;# 
  1923  0216                     	;# 
  1924  0216                     	;# 
  1925  0217                     	;# 
  1926  0217                     	;# 
  1927  021D                     	;# 
  1928  021E                     	;# 
  1929  021F                     	;# 
  1930  028C                     	;# 
  1931  028D                     	;# 
  1932  028E                     	;# 
  1933  0291                     	;# 
  1934  0291                     	;# 
  1935  0292                     	;# 
  1936  0293                     	;# 
  1937  0294                     	;# 
  1938  0298                     	;# 
  1939  0298                     	;# 
  1940  0299                     	;# 
  1941  029A                     	;# 
  1942  029B                     	;# 
  1943  029E                     	;# 
  1944  030C                     	;# 
  1945  030D                     	;# 
  1946  030E                     	;# 
  1947  031B                     	;# 
  1948  031C                     	;# 
  1949  031D                     	;# 
  1950  031E                     	;# 
  1951  031F                     	;# 
  1952  038C                     	;# 
  1953  038D                     	;# 
  1954  038E                     	;# 
  1955  0391                     	;# 
  1956  0392                     	;# 
  1957  0393                     	;# 
  1958  0394                     	;# 
  1959  0395                     	;# 
  1960  0396                     	;# 
  1961  0397                     	;# 
  1962  0398                     	;# 
  1963  0399                     	;# 
  1964  039B                     	;# 
  1965  039C                     	;# 
  1966  039D                     	;# 
  1967  039E                     	;# 
  1968  039F                     	;# 
  1969  040E                     	;# 
  1970  0413                     	;# 
  1971  0413                     	;# 
  1972  0414                     	;# 
  1973  0414                     	;# 
  1974  0415                     	;# 
  1975  0416                     	;# 
  1976  0417                     	;# 
  1977  0418                     	;# 
  1978  041A                     	;# 
  1979  041A                     	;# 
  1980  041B                     	;# 
  1981  041B                     	;# 
  1982  041C                     	;# 
  1983  041D                     	;# 
  1984  041E                     	;# 
  1985  041F                     	;# 
  1986  0493                     	;# 
  1987  0493                     	;# 
  1988  0494                     	;# 
  1989  0495                     	;# 
  1990  0496                     	;# 
  1991  049A                     	;# 
  1992  049A                     	;# 
  1993  049B                     	;# 
  1994  049C                     	;# 
  1995  049D                     	;# 
  1996  050F                     	;# 
  1997  0510                     	;# 
  1998  0511                     	;# 
  1999  0512                     	;# 
  2000  0513                     	;# 
  2001  0514                     	;# 
  2002  0515                     	;# 
  2003  0516                     	;# 
  2004  0590                     	;# 
  2005  0591                     	;# 
  2006  0592                     	;# 
  2007  0592                     	;# 
  2008  0592                     	;# 
  2009  0593                     	;# 
  2010  0593                     	;# 
  2011  0594                     	;# 
  2012  0595                     	;# 
  2013  0595                     	;# 
  2014  0595                     	;# 
  2015  0596                     	;# 
  2016  0596                     	;# 
  2017  0597                     	;# 
  2018  0598                     	;# 
  2019  0598                     	;# 
  2020  0599                     	;# 
  2021  059A                     	;# 
  2022  059A                     	;# 
  2023  0617                     	;# 
  2024  0617                     	;# 
  2025  0618                     	;# 
  2026  0619                     	;# 
  2027  061A                     	;# 
  2028  061A                     	;# 
  2029  061B                     	;# 
  2030  061C                     	;# 
  2031  068D                     	;# 
  2032  068E                     	;# 
  2033  068F                     	;# 
  2034  0690                     	;# 
  2035  0691                     	;# 
  2036  0692                     	;# 
  2037  0693                     	;# 
  2038  0694                     	;# 
  2039  0695                     	;# 
  2040  0696                     	;# 
  2041  0697                     	;# 
  2042  0698                     	;# 
  2043  0699                     	;# 
  2044  069A                     	;# 
  2045  069B                     	;# 
  2046  069C                     	;# 
  2047  069D                     	;# 
  2048  069E                     	;# 
  2049  069F                     	;# 
  2050  070D                     	;# 
  2051  070E                     	;# 
  2052  070F                     	;# 
  2053  0710                     	;# 
  2054  0711                     	;# 
  2055  0712                     	;# 
  2056  0713                     	;# 
  2057  0714                     	;# 
  2058  0715                     	;# 
  2059  0716                     	;# 
  2060  0717                     	;# 
  2061  0718                     	;# 
  2062  0719                     	;# 
  2063  071A                     	;# 
  2064  071B                     	;# 
  2065  071C                     	;# 
  2066  071D                     	;# 
  2067  071E                     	;# 
  2068  071F                     	;# 
  2069  0794                     	;# 
  2070  0795                     	;# 
  2071  0796                     	;# 
  2072  0797                     	;# 
  2073  0798                     	;# 
  2074  0799                     	;# 
  2075  079A                     	;# 
  2076  079B                     	;# 
  2077  079C                     	;# 
  2078  079D                     	;# 
  2079  079E                     	;# 
  2080  079F                     	;# 
  2081  0D8E                     	;# 
  2082  0D8F                     	;# 
  2083  0D90                     	;# 
  2084  0D91                     	;# 
  2085  0D91                     	;# 
  2086  0D92                     	;# 
  2087  0D93                     	;# 
  2088  0D93                     	;# 
  2089  0D94                     	;# 
  2090  0D95                     	;# 
  2091  0D95                     	;# 
  2092  0D96                     	;# 
  2093  0D97                     	;# 
  2094  0D97                     	;# 
  2095  0D98                     	;# 
  2096  0D99                     	;# 
  2097  0D99                     	;# 
  2098  0D9A                     	;# 
  2099  0D9B                     	;# 
  2100  0D9C                     	;# 
  2101  0D9C                     	;# 
  2102  0D9D                     	;# 
  2103  0D9D                     	;# 
  2104  0D9E                     	;# 
  2105  0D9F                     	;# 
  2106  0DA0                     	;# 
  2107  0DA1                     	;# 
  2108  0DA1                     	;# 
  2109  0DA2                     	;# 
  2110  0DA3                     	;# 
  2111  0DA3                     	;# 
  2112  0DA4                     	;# 
  2113  0DA5                     	;# 
  2114  0DA5                     	;# 
  2115  0DA6                     	;# 
  2116  0DA7                     	;# 
  2117  0DA7                     	;# 
  2118  0DA8                     	;# 
  2119  0DA9                     	;# 
  2120  0DA9                     	;# 
  2121  0DAA                     	;# 
  2122  0DAB                     	;# 
  2123  0DAC                     	;# 
  2124  0DAC                     	;# 
  2125  0DAD                     	;# 
  2126  0DAD                     	;# 
  2127  0DAE                     	;# 
  2128  0DAF                     	;# 
  2129  0DB0                     	;# 
  2130  0E0F                     	;# 
  2131  0E10                     	;# 
  2132  0E11                     	;# 
  2133  0E12                     	;# 
  2134  0E13                     	;# 
  2135  0E14                     	;# 
  2136  0E15                     	;# 
  2137  0E16                     	;# 
  2138  0E17                     	;# 
  2139  0E19                     	;# 
  2140  0E19                     	;# 
  2141  0E19                     	;# 
  2142  0E1A                     	;# 
  2143  0E1B                     	;# 
  2144  0E1C                     	;# 
  2145  0E1C                     	;# 
  2146  0E1C                     	;# 
  2147  0E1D                     	;# 
  2148  0E1E                     	;# 
  2149  0E1F                     	;# 
  2150  0E1F                     	;# 
  2151  0E1F                     	;# 
  2152  0E20                     	;# 
  2153  0E21                     	;# 
  2154  0E22                     	;# 
  2155  0E24                     	;# 
  2156  0E25                     	;# 
  2157  0E28                     	;# 
  2158  0E29                     	;# 
  2159  0E2A                     	;# 
  2160  0E2B                     	;# 
  2161  0E2C                     	;# 
  2162  0E2D                     	;# 
  2163  0E2E                     	;# 
  2164  0E2F                     	;# 
  2165  0E30                     	;# 
  2166  0E31                     	;# 
  2167  0E32                     	;# 
  2168  0E33                     	;# 
  2169  0E34                     	;# 
  2170  0E35                     	;# 
  2171  0E90                     	;# 
  2172  0E91                     	;# 
  2173  0E92                     	;# 
  2174  0E94                     	;# 
  2175  0E95                     	;# 
  2176  0E9C                     	;# 
  2177  0E9D                     	;# 
  2178  0E9E                     	;# 
  2179  0E9F                     	;# 
  2180  0EA0                     	;# 
  2181  0EA1                     	;# 
  2182  0EA2                     	;# 
  2183  0EA3                     	;# 
  2184  0EA4                     	;# 
  2185  0EA5                     	;# 
  2186  0EA6                     	;# 
  2187  0EA7                     	;# 
  2188  0F0F                     	;# 
  2189  0F10                     	;# 
  2190  0F11                     	;# 
  2191  0F12                     	;# 
  2192  0F13                     	;# 
  2193  0F14                     	;# 
  2194  0F15                     	;# 
  2195  0F16                     	;# 
  2196  0F17                     	;# 
  2197  0F18                     	;# 
  2198  0F19                     	;# 
  2199  0F1A                     	;# 
  2200  0F1B                     	;# 
  2201  0F1C                     	;# 
  2202  0F1D                     	;# 
  2203  0F1E                     	;# 
  2204  0F1F                     	;# 
  2205  0F20                     	;# 
  2206  0F21                     	;# 
  2207  0F22                     	;# 
  2208  0F23                     	;# 
  2209  0F24                     	;# 
  2210  0F25                     	;# 
  2211  0F26                     	;# 
  2212  0F27                     	;# 
  2213  0F28                     	;# 
  2214  0F29                     	;# 
  2215  0F2A                     	;# 
  2216  0F2B                     	;# 
  2217  0F2C                     	;# 
  2218  0F2D                     	;# 
  2219  0FE4                     	;# 
  2220  0FE5                     	;# 
  2221  0FE6                     	;# 
  2222  0FE7                     	;# 
  2223  0FE8                     	;# 
  2224  0FE9                     	;# 
  2225  0FEA                     	;# 
  2226  0FEB                     	;# 
  2227  0FED                     	;# 
  2228  0FEE                     	;# 
  2229  0FEF                     	;# 
  2230                           
  2231 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2232  0000                     
  2233 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2234  0000                     
  2235 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2236  0000                     
  2237                           	psect	nvBANK0
  2238  0051                     __pnvBANK0:
  2239  0051                     _EUSART_ErrorHandler:
  2240  0051                     	ds	2
  2241  0053                     _EUSART_OverrunErrorHandler:
  2242  0053                     	ds	2
  2243  0055                     _EUSART_FramingErrorHandler:
  2244  0055                     	ds	2
  2245  0011                     _PIR1bits	set	17
  2246  0097                     _WDTCON	set	151
  2247  0098                     _OSCTUNE	set	152
  2248  009A                     _OSCSTAT	set	154
  2249  0099                     _OSCCON	set	153
  2250  0095                     _OPTION_REGbits	set	149
  2251  008E                     _TRISC	set	142
  2252  008D                     _TRISB	set	141
  2253  008C                     _TRISA	set	140
  2254  010D                     _LATBbits	set	269
  2255  010E                     _LATCbits	set	270
  2256  010C                     _LATAbits	set	268
  2257  010E                     _LATC	set	270
  2258  010D                     _LATB	set	269
  2259  010C                     _LATA	set	268
  2260  018C                     _ANSELA	set	396
  2261  018D                     _ANSELB	set	397
  2262  018E                     _ANSELC	set	398
  2263  019A                     _TX1REG	set	410
  2264  0199                     _RC1REG	set	409
  2265  019D                     _RC1STAbits	set	413
  2266  019E                     _TX1STAbits	set	414
  2267  019C                     _SPBRGH	set	412
  2268  019B                     _SPBRGL	set	411
  2269  019E                     _TX1STA	set	414
  2270  019D                     _RC1STA	set	413
  2271  019F                     _BAUD1CON	set	415
  2272  021D                     _BORCON	set	541
  2273  020E                     _WPUC	set	526
  2274  020C                     _WPUA	set	524
  2275  020D                     _WPUB	set	525
  2276  028E                     _ODCONC	set	654
  2277  028D                     _ODCONB	set	653
  2278  028C                     _ODCONA	set	652
  2279  030E                     _SLRCONC	set	782
  2280  030D                     _SLRCONB	set	781
  2281  030C                     _SLRCONA	set	780
  2282  038E                     _INLVLC	set	910
  2283  038D                     _INLVLB	set	909
  2284  038C                     _INLVLA	set	908
  2285  0E24                     _RXPPS	set	3620
  2286  0E9C                     _RB4PPS	set	3740
  2287                           
  2288                           	psect	cinit
  2289  07FB                     start_initialization:	
  2290                           ; #config settings
  2291                           
  2292  07FB                     __initialization:
  2293                           
  2294                           ; Clear objects allocated to BANK0
  2295  07FB  0020               	movlb	0	; select bank0
  2296  07FC  01D7               	clrf	__pbssBANK0& (0+127)
  2297  07FD                     end_of_initialization:	
  2298                           ;End of C runtime variable initialization code
  2299                           
  2300  07FD                     __end_of__initialization:
  2301  07FD  0020               	movlb	0
  2302  07FE  3182  2AA4         	ljmp	_main	;jump to C main() function
  2303                           
  2304                           	psect	bssBANK0
  2305  0057                     __pbssBANK0:
  2306  0057                     _eusartRxLastError:
  2307  0057                     	ds	1
  2308                           
  2309                           	psect	cstackCOMMON
  2310  0070                     __pcstackCOMMON:
  2311  0070                     ?_EUSART_SetFramingErrorHandler:
  2312  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2313                           ; 1 bytes @ 0x0
  2314                           
  2315  0070                     ?_EUSART_SetErrorHandler:	
  2316                           ; 1 bytes @ 0x0
  2317                           
  2318  0070                     ?_OSCILLATOR_Initialize:	
  2319                           ; 1 bytes @ 0x0
  2320                           
  2321  0070                     ??_OSCILLATOR_Initialize:	
  2322                           ; 1 bytes @ 0x0
  2323                           
  2324  0070                     ?_WDT_Initialize:	
  2325                           ; 1 bytes @ 0x0
  2326                           
  2327  0070                     ??_WDT_Initialize:	
  2328                           ; 1 bytes @ 0x0
  2329                           
  2330  0070                     ?_DELAY_milliseconds:	
  2331                           ; 1 bytes @ 0x0
  2332                           
  2333  0070                     ?_EUSART_Initialize:	
  2334                           ; 1 bytes @ 0x0
  2335                           
  2336  0070                     ?_EUSART_is_rx_ready:	
  2337                           ; 1 bytes @ 0x0
  2338                           
  2339  0070                     ??_EUSART_is_rx_ready:	
  2340                           ; 1 bytes @ 0x0
  2341                           
  2342  0070                     ?_EUSART_Read:	
  2343                           ; 1 bytes @ 0x0
  2344                           
  2345  0070                     ??_EUSART_Read:	
  2346                           ; 1 bytes @ 0x0
  2347                           
  2348  0070                     ?_PIN_MANAGER_Initialize:	
  2349                           ; 1 bytes @ 0x0
  2350                           
  2351  0070                     ??_PIN_MANAGER_Initialize:	
  2352                           ; 1 bytes @ 0x0
  2353                           
  2354  0070                     ?_SYSTEM_Initialize:	
  2355                           ; 1 bytes @ 0x0
  2356                           
  2357  0070                     ?_displayClear:	
  2358                           ; 1 bytes @ 0x0
  2359                           
  2360  0070                     ??_displayClear:	
  2361                           ; 1 bytes @ 0x0
  2362                           
  2363  0070                     ?_displayZero:	
  2364                           ; 1 bytes @ 0x0
  2365                           
  2366  0070                     ??_displayZero:	
  2367                           ; 1 bytes @ 0x0
  2368                           
  2369  0070                     ?_displayOne:	
  2370                           ; 1 bytes @ 0x0
  2371                           
  2372  0070                     ??_displayOne:	
  2373                           ; 1 bytes @ 0x0
  2374                           
  2375  0070                     ?_displayTwo:	
  2376                           ; 1 bytes @ 0x0
  2377                           
  2378  0070                     ??_displayTwo:	
  2379                           ; 1 bytes @ 0x0
  2380                           
  2381  0070                     ?_displayThree:	
  2382                           ; 1 bytes @ 0x0
  2383                           
  2384  0070                     ??_displayThree:	
  2385                           ; 1 bytes @ 0x0
  2386                           
  2387  0070                     ?_displayFour:	
  2388                           ; 1 bytes @ 0x0
  2389                           
  2390  0070                     ??_displayFour:	
  2391                           ; 1 bytes @ 0x0
  2392                           
  2393  0070                     ?_displayFive:	
  2394                           ; 1 bytes @ 0x0
  2395                           
  2396  0070                     ??_displayFive:	
  2397                           ; 1 bytes @ 0x0
  2398                           
  2399  0070                     ?_displaySix:	
  2400                           ; 1 bytes @ 0x0
  2401                           
  2402  0070                     ??_displaySix:	
  2403                           ; 1 bytes @ 0x0
  2404                           
  2405  0070                     ?_displaySeven:	
  2406                           ; 1 bytes @ 0x0
  2407                           
  2408  0070                     ??_displaySeven:	
  2409                           ; 1 bytes @ 0x0
  2410                           
  2411  0070                     ?_displayEight:	
  2412                           ; 1 bytes @ 0x0
  2413                           
  2414  0070                     ??_displayEight:	
  2415                           ; 1 bytes @ 0x0
  2416                           
  2417  0070                     ?_displayNine:	
  2418                           ; 1 bytes @ 0x0
  2419                           
  2420  0070                     ??_displayNine:	
  2421                           ; 1 bytes @ 0x0
  2422                           
  2423  0070                     ?_selectDIG:	
  2424                           ; 1 bytes @ 0x0
  2425                           
  2426  0070                     ?_main:	
  2427                           ; 1 bytes @ 0x0
  2428                           
  2429  0070                     ?___awdiv:	
  2430                           ; 1 bytes @ 0x0
  2431                           
  2432  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2433                           ; 2 bytes @ 0x0
  2434                           
  2435  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2436                           ; 2 bytes @ 0x0
  2437                           
  2438  0070                     EUSART_SetErrorHandler@interruptHandler:	
  2439                           ; 2 bytes @ 0x0
  2440                           
  2441  0070                     selectDIG@dig:	
  2442                           ; 2 bytes @ 0x0
  2443                           
  2444  0070                     DELAY_milliseconds@milliseconds:	
  2445                           ; 2 bytes @ 0x0
  2446                           
  2447  0070                     ___awdiv@divisor:	
  2448                           ; 2 bytes @ 0x0
  2449                           
  2450                           
  2451                           ; 2 bytes @ 0x0
  2452  0070                     	ds	2
  2453  0072                     ??_EUSART_SetFramingErrorHandler:
  2454  0072                     ??_EUSART_SetOverrunErrorHandler:	
  2455                           ; 1 bytes @ 0x2
  2456                           
  2457  0072                     ??_EUSART_SetErrorHandler:	
  2458                           ; 1 bytes @ 0x2
  2459                           
  2460  0072                     ??_DELAY_milliseconds:	
  2461                           ; 1 bytes @ 0x2
  2462                           
  2463  0072                     ??_EUSART_Initialize:	
  2464                           ; 1 bytes @ 0x2
  2465                           
  2466  0072                     ??_SYSTEM_Initialize:	
  2467                           ; 1 bytes @ 0x2
  2468                           
  2469  0072                     ?_displaySegments:	
  2470                           ; 1 bytes @ 0x2
  2471                           
  2472  0072                     ??_selectDIG:	
  2473                           ; 1 bytes @ 0x2
  2474                           
  2475  0072                     ?_displayRoll:	
  2476                           ; 1 bytes @ 0x2
  2477                           
  2478  0072                     displaySegments@num:	
  2479                           ; 1 bytes @ 0x2
  2480                           
  2481  0072                     displayRoll@cnt:	
  2482                           ; 2 bytes @ 0x2
  2483                           
  2484  0072                     ___awdiv@dividend:	
  2485                           ; 2 bytes @ 0x2
  2486                           
  2487                           
  2488                           ; 2 bytes @ 0x2
  2489  0072                     	ds	2
  2490  0074                     ??_displaySegments:
  2491  0074                     ??_displayRoll:	
  2492                           ; 1 bytes @ 0x4
  2493                           
  2494  0074                     ??___awdiv:	
  2495                           ; 1 bytes @ 0x4
  2496                           
  2497                           
  2498                           ; 1 bytes @ 0x4
  2499  0074                     	ds	1
  2500  0075                     ___awdiv@counter:
  2501                           
  2502                           ; 1 bytes @ 0x5
  2503  0075                     	ds	1
  2504  0076                     ___awdiv@sign:
  2505                           
  2506                           ; 1 bytes @ 0x6
  2507  0076                     	ds	1
  2508  0077                     ___awdiv@quotient:
  2509                           
  2510                           ; 2 bytes @ 0x7
  2511  0077                     	ds	2
  2512  0079                     ?___awmod:
  2513  0079                     ___awmod@divisor:	
  2514                           ; 2 bytes @ 0x9
  2515                           
  2516                           
  2517                           ; 2 bytes @ 0x9
  2518  0079                     	ds	2
  2519  007B                     ___awmod@dividend:
  2520                           
  2521                           ; 2 bytes @ 0xB
  2522  007B                     	ds	2
  2523  007D                     ??___awmod:
  2524                           
  2525                           ; 1 bytes @ 0xD
  2526  007D                     	ds	1
  2527  007E                     ??_main:
  2528                           
  2529                           	psect	cstackBANK0
  2530  0020                     __pcstackBANK0:	
  2531                           ; 1 bytes @ 0xE
  2532                           
  2533  0020                     ___awmod@counter:
  2534                           
  2535                           ; 1 bytes @ 0x0
  2536  0020                     	ds	1
  2537  0021                     ___awmod@sign:
  2538                           
  2539                           ; 1 bytes @ 0x1
  2540  0021                     	ds	1
  2541  0022                     ?_displayLotteryResult:
  2542  0022                     displayLotteryResult@val:	
  2543                           ; 1 bytes @ 0x2
  2544                           
  2545                           
  2546                           ; 2 bytes @ 0x2
  2547  0022                     	ds	2
  2548  0024                     ??_displayLotteryResult:
  2549                           
  2550                           ; 1 bytes @ 0x4
  2551  0024                     	ds	1
  2552  0025                     displayLotteryResult@dig_4:
  2553                           
  2554                           ; 2 bytes @ 0x5
  2555  0025                     	ds	2
  2556  0027                     displayLotteryResult@dig_3:
  2557                           
  2558                           ; 2 bytes @ 0x7
  2559  0027                     	ds	2
  2560  0029                     displayLotteryResult@x:
  2561                           
  2562                           ; 2 bytes @ 0x9
  2563  0029                     	ds	2
  2564  002B                     displayLotteryResult@wait_cnt:
  2565                           
  2566                           ; 2 bytes @ 0xB
  2567  002B                     	ds	2
  2568  002D                     displayLotteryResult@x_401:
  2569                           
  2570                           ; 2 bytes @ 0xD
  2571  002D                     	ds	2
  2572  002F                     displayLotteryResult@wait_cnt_403:
  2573                           
  2574                           ; 2 bytes @ 0xF
  2575  002F                     	ds	2
  2576  0031                     displayLotteryResult@x_406:
  2577                           
  2578                           ; 2 bytes @ 0x11
  2579  0031                     	ds	2
  2580  0033                     displayLotteryResult@wait_cnt_408:
  2581                           
  2582                           ; 2 bytes @ 0x13
  2583  0033                     	ds	2
  2584  0035                     displayLotteryResult@x_410:
  2585                           
  2586                           ; 2 bytes @ 0x15
  2587  0035                     	ds	2
  2588  0037                     displayLotteryResult@wait_cnt_412:
  2589                           
  2590                           ; 2 bytes @ 0x17
  2591  0037                     	ds	2
  2592  0039                     displayLotteryResult@wait_cnt_414:
  2593                           
  2594                           ; 2 bytes @ 0x19
  2595  0039                     	ds	2
  2596  003B                     displayLotteryResult@dig_2:
  2597                           
  2598                           ; 2 bytes @ 0x1B
  2599  003B                     	ds	2
  2600  003D                     displayLotteryResult@i:
  2601                           
  2602                           ; 2 bytes @ 0x1D
  2603  003D                     	ds	2
  2604  003F                     displayLotteryResult@j:
  2605                           
  2606                           ; 2 bytes @ 0x1F
  2607  003F                     	ds	2
  2608  0041                     displayLotteryResult@i_402:
  2609                           
  2610                           ; 2 bytes @ 0x21
  2611  0041                     	ds	2
  2612  0043                     displayLotteryResult@i_407:
  2613                           
  2614                           ; 2 bytes @ 0x23
  2615  0043                     	ds	2
  2616  0045                     displayLotteryResult@i_411:
  2617                           
  2618                           ; 2 bytes @ 0x25
  2619  0045                     	ds	2
  2620  0047                     displayLotteryResult@dig_1:
  2621                           
  2622                           ; 2 bytes @ 0x27
  2623  0047                     	ds	2
  2624  0049                     displayLotteryResult@j_404:
  2625                           
  2626                           ; 2 bytes @ 0x29
  2627  0049                     	ds	2
  2628  004B                     displayLotteryResult@j_409:
  2629                           
  2630                           ; 2 bytes @ 0x2B
  2631  004B                     	ds	2
  2632  004D                     displayLotteryResult@j_413:
  2633                           
  2634                           ; 2 bytes @ 0x2D
  2635  004D                     	ds	2
  2636  004F                     displayLotteryResult@j_415:
  2637                           
  2638                           ; 2 bytes @ 0x2F
  2639  004F                     	ds	2
  2640                           
  2641                           	psect	maintext
  2642  02A4                     __pmaintext:	
  2643 ;;
  2644 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2645 ;;
  2646 ;; *************** function _main *****************
  2647 ;; Defined at:
  2648 ;;		line 329 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  data            1    0        unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : B1F/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;Total ram usage:        0 bytes
  2667 ;; Hardware stack levels required when called: 4
  2668 ;; This function calls:
  2669 ;;		_EUSART_Read
  2670 ;;		_EUSART_is_rx_ready
  2671 ;;		_SYSTEM_Initialize
  2672 ;;		_displayClear
  2673 ;;		_displayLotteryResult
  2674 ;; This function is called by:
  2675 ;;		Startup code after reset
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _main
  2681  02A4                     _main:
  2682  02A4                     l2141:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;main.c: 332:     SYSTEM_Initialize();
  2688  02A4  3182  2276  3182   	fcall	_SYSTEM_Initialize
  2689  02A7                     l2143:
  2690                           
  2691                           ;main.c: 349:     displayClear();
  2692  02A7  3182  2211  3182   	fcall	_displayClear
  2693  02AA                     l2145:
  2694                           
  2695                           ;main.c: 351:     {;main.c: 352:       if(EUSART_is_rx_ready()){
  2696  02AA  3181  21EB  3182   	fcall	_EUSART_is_rx_ready
  2697  02AD  3A00               	xorlw	0
  2698  02AE  1903               	skipnz
  2699  02AF  2AB1               	goto	u1331
  2700  02B0  2AB2               	goto	u1330
  2701  02B1                     u1331:
  2702  02B1  2AAA               	goto	l2145
  2703  02B2                     u1330:
  2704  02B2                     l2147:
  2705                           
  2706                           ;main.c: 353:         displayLotteryResult(7777);
  2707  02B2  3061               	movlw	97
  2708  02B3  0020               	movlb	0	; select bank0
  2709  02B4  00A2               	movwf	displayLotteryResult@val
  2710  02B5  301E               	movlw	30
  2711  02B6  00A3               	movwf	displayLotteryResult@val+1
  2712  02B7  3184  2481  3182   	fcall	_displayLotteryResult
  2713  02BA                     l2149:
  2714  02BA  3182  2283  3182   	fcall	_EUSART_Read
  2715  02BD  2AAA               	goto	l2145
  2716  02BE  3180  2802         	ljmp	start
  2717  02C0                     __end_of_main:
  2718                           
  2719                           	psect	text1
  2720  0481                     __ptext1:	
  2721 ;; *************** function _displayLotteryResult *****************
  2722 ;; Defined at:
  2723 ;;		line 241 in file "main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  val             2    2[BANK0 ] int 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  j               2   45[BANK0 ] int 
  2728 ;;  j               2   43[BANK0 ] int 
  2729 ;;  j               2   41[BANK0 ] int 
  2730 ;;  j               2   31[BANK0 ] int 
  2731 ;;  wait_cnt        2   23[BANK0 ] int 
  2732 ;;  wait_cnt        2   19[BANK0 ] int 
  2733 ;;  wait_cnt        2   15[BANK0 ] int 
  2734 ;;  wait_cnt        2   11[BANK0 ] int 
  2735 ;;  j               2   47[BANK0 ] int 
  2736 ;;  i               2   37[BANK0 ] int 
  2737 ;;  i               2   35[BANK0 ] int 
  2738 ;;  i               2   33[BANK0 ] int 
  2739 ;;  i               2   29[BANK0 ] int 
  2740 ;;  wait_cnt        2   25[BANK0 ] int 
  2741 ;;  x               2   21[BANK0 ] int 
  2742 ;;  x               2   17[BANK0 ] int 
  2743 ;;  x               2   13[BANK0 ] int 
  2744 ;;  x               2    9[BANK0 ] int 
  2745 ;;  dig_1           2   39[BANK0 ] int 
  2746 ;;  dig_2           2   27[BANK0 ] int 
  2747 ;;  dig_3           2    7[BANK0 ] int 
  2748 ;;  dig_4           2    5[BANK0 ] int 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2758 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;Total ram usage:       47 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 3
  2765 ;; This function calls:
  2766 ;;		___awdiv
  2767 ;;		___awmod
  2768 ;;		_displayRoll
  2769 ;;		_displaySegments
  2770 ;;		_selectDIG
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _displayLotteryResult
  2778  0481                     _displayLotteryResult:
  2779  0481                     l1949:	
  2780                           ;incstack = 0
  2781                           ; Regs used in _displayLotteryResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2782                           
  2783                           
  2784                           ;main.c: 242:   int dig_1 = val / 1000;
  2785  0481  30E8               	movlw	232
  2786  0482  00F0               	movwf	___awdiv@divisor
  2787  0483  3003               	movlw	3
  2788  0484  00F1               	movwf	___awdiv@divisor+1
  2789  0485  0020               	movlb	0	; select bank0
  2790  0486  0823               	movf	displayLotteryResult@val+1,w
  2791  0487  00F3               	movwf	___awdiv@dividend+1
  2792  0488  0822               	movf	displayLotteryResult@val,w
  2793  0489  00F2               	movwf	___awdiv@dividend
  2794  048A  3184  2422  3184   	fcall	___awdiv
  2795  048D  0871               	movf	?___awdiv+1,w
  2796  048E  0020               	movlb	0	; select bank0
  2797  048F  00C8               	movwf	displayLotteryResult@dig_1+1
  2798  0490  0870               	movf	?___awdiv,w
  2799  0491  00C7               	movwf	displayLotteryResult@dig_1
  2800                           
  2801                           ;main.c: 243:   int dig_2 = (val / 100) % 10;
  2802  0492  300A               	movlw	10
  2803  0493  00F9               	movwf	___awmod@divisor
  2804  0494  3000               	movlw	0
  2805  0495  00FA               	movwf	___awmod@divisor+1
  2806  0496  3064               	movlw	100
  2807  0497  00F0               	movwf	___awdiv@divisor
  2808  0498  3000               	movlw	0
  2809  0499  00F1               	movwf	___awdiv@divisor+1
  2810  049A  0823               	movf	displayLotteryResult@val+1,w
  2811  049B  00F3               	movwf	___awdiv@dividend+1
  2812  049C  0822               	movf	displayLotteryResult@val,w
  2813  049D  00F2               	movwf	___awdiv@dividend
  2814  049E  3184  2422  3184   	fcall	___awdiv
  2815  04A1  0871               	movf	?___awdiv+1,w
  2816  04A2  00FC               	movwf	___awmod@dividend+1
  2817  04A3  0870               	movf	?___awdiv,w
  2818  04A4  00FB               	movwf	___awmod@dividend
  2819  04A5  3183  2375  3184   	fcall	___awmod
  2820  04A8  087A               	movf	?___awmod+1,w
  2821  04A9  0020               	movlb	0	; select bank0
  2822  04AA  00BC               	movwf	displayLotteryResult@dig_2+1
  2823  04AB  0879               	movf	?___awmod,w
  2824  04AC  00BB               	movwf	displayLotteryResult@dig_2
  2825                           
  2826                           ;main.c: 244:   int dig_3 = (val / 10) % 10;
  2827  04AD  300A               	movlw	10
  2828  04AE  00F9               	movwf	___awmod@divisor
  2829  04AF  3000               	movlw	0
  2830  04B0  00FA               	movwf	___awmod@divisor+1
  2831  04B1  300A               	movlw	10
  2832  04B2  00F0               	movwf	___awdiv@divisor
  2833  04B3  3000               	movlw	0
  2834  04B4  00F1               	movwf	___awdiv@divisor+1
  2835  04B5  0823               	movf	displayLotteryResult@val+1,w
  2836  04B6  00F3               	movwf	___awdiv@dividend+1
  2837  04B7  0822               	movf	displayLotteryResult@val,w
  2838  04B8  00F2               	movwf	___awdiv@dividend
  2839  04B9  3184  2422  3184   	fcall	___awdiv
  2840  04BC  0871               	movf	?___awdiv+1,w
  2841  04BD  00FC               	movwf	___awmod@dividend+1
  2842  04BE  0870               	movf	?___awdiv,w
  2843  04BF  00FB               	movwf	___awmod@dividend
  2844  04C0  3183  2375  3184   	fcall	___awmod
  2845  04C3  087A               	movf	?___awmod+1,w
  2846  04C4  0020               	movlb	0	; select bank0
  2847  04C5  00A8               	movwf	displayLotteryResult@dig_3+1
  2848  04C6  0879               	movf	?___awmod,w
  2849  04C7  00A7               	movwf	displayLotteryResult@dig_3
  2850                           
  2851                           ;main.c: 245:   int dig_4 = val % 10;
  2852  04C8  300A               	movlw	10
  2853  04C9  00F9               	movwf	___awmod@divisor
  2854  04CA  3000               	movlw	0
  2855  04CB  00FA               	movwf	___awmod@divisor+1
  2856  04CC  0823               	movf	displayLotteryResult@val+1,w
  2857  04CD  00FC               	movwf	___awmod@dividend+1
  2858  04CE  0822               	movf	displayLotteryResult@val,w
  2859  04CF  00FB               	movwf	___awmod@dividend
  2860  04D0  3183  2375  3184   	fcall	___awmod
  2861  04D3  087A               	movf	?___awmod+1,w
  2862  04D4  0020               	movlb	0	; select bank0
  2863  04D5  00A6               	movwf	displayLotteryResult@dig_4+1
  2864  04D6  0879               	movf	?___awmod,w
  2865  04D7  00A5               	movwf	displayLotteryResult@dig_4
  2866  04D8                     l1951:
  2867                           
  2868                           ;main.c: 247:   for(int x=0; x<3; x++){
  2869  04D8  01A9               	clrf	displayLotteryResult@x
  2870  04D9  01AA               	clrf	displayLotteryResult@x+1
  2871  04DA                     l1957:
  2872                           
  2873                           ;main.c: 248:     for(int i=1; i<7; i++){
  2874  04DA  3001               	movlw	1
  2875  04DB  0020               	movlb	0	; select bank0
  2876  04DC  00BD               	movwf	displayLotteryResult@i
  2877  04DD  3000               	movlw	0
  2878  04DE  00BE               	movwf	displayLotteryResult@i+1
  2879  04DF                     l1961:
  2880                           
  2881                           ;main.c: 249:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  2882  04DF  0020               	movlb	0	; select bank0
  2883  04E0  01AB               	clrf	displayLotteryResult@wait_cnt
  2884  04E1  01AC               	clrf	displayLotteryResult@wait_cnt+1
  2885  04E2                     l1967:
  2886                           
  2887                           ;main.c: 250:         for(int j=1; j<5; j++){
  2888  04E2  3001               	movlw	1
  2889  04E3  0020               	movlb	0	; select bank0
  2890  04E4  00BF               	movwf	displayLotteryResult@j
  2891  04E5  3000               	movlw	0
  2892  04E6  00C0               	movwf	displayLotteryResult@j+1
  2893  04E7                     l1971:
  2894                           
  2895                           ;main.c: 251:           selectDIG(j);
  2896  04E7  0020               	movlb	0	; select bank0
  2897  04E8  0840               	movf	displayLotteryResult@j+1,w
  2898  04E9  00F1               	movwf	selectDIG@dig+1
  2899  04EA  083F               	movf	displayLotteryResult@j,w
  2900  04EB  00F0               	movwf	selectDIG@dig
  2901  04EC  3182  22E2  3184   	fcall	_selectDIG
  2902                           
  2903                           ;main.c: 252:           displayRoll(i);
  2904  04EF  0020               	movlb	0	; select bank0
  2905  04F0  083E               	movf	displayLotteryResult@i+1,w
  2906  04F1  00F3               	movwf	displayRoll@cnt+1
  2907  04F2  083D               	movf	displayLotteryResult@i,w
  2908  04F3  00F2               	movwf	displayRoll@cnt
  2909  04F4  3183  2338  3184   	fcall	_displayRoll
  2910  04F7                     l1973:
  2911                           
  2912                           ;main.c: 253:         }
  2913  04F7  3001               	movlw	1
  2914  04F8  0020               	movlb	0	; select bank0
  2915  04F9  07BF               	addwf	displayLotteryResult@j,f
  2916  04FA  3000               	movlw	0
  2917  04FB  3DC0               	addwfc	displayLotteryResult@j+1,f
  2918  04FC                     l1975:
  2919  04FC  0840               	movf	displayLotteryResult@j+1,w
  2920  04FD  3A80               	xorlw	128
  2921  04FE  00A4               	movwf	??_displayLotteryResult
  2922  04FF  3080               	movlw	128
  2923  0500  0224               	subwf	??_displayLotteryResult,w
  2924  0501  1D03               	skipz
  2925  0502  2D05               	goto	u925
  2926  0503  3005               	movlw	5
  2927  0504  023F               	subwf	displayLotteryResult@j,w
  2928  0505                     u925:
  2929  0505  1C03               	skipc
  2930  0506  2D08               	goto	u921
  2931  0507  2D09               	goto	u920
  2932  0508                     u921:
  2933  0508  2CE7               	goto	l1971
  2934  0509                     u920:
  2935  0509                     l1977:
  2936                           
  2937                           ;main.c: 254:       }
  2938  0509  3001               	movlw	1
  2939  050A  0020               	movlb	0	; select bank0
  2940  050B  07AB               	addwf	displayLotteryResult@wait_cnt,f
  2941  050C  3000               	movlw	0
  2942  050D  3DAC               	addwfc	displayLotteryResult@wait_cnt+1,f
  2943  050E  082C               	movf	displayLotteryResult@wait_cnt+1,w
  2944  050F  3A80               	xorlw	128
  2945  0510  00A4               	movwf	??_displayLotteryResult
  2946  0511  3080               	movlw	128
  2947  0512  0224               	subwf	??_displayLotteryResult,w
  2948  0513  1D03               	skipz
  2949  0514  2D17               	goto	u935
  2950  0515  300A               	movlw	10
  2951  0516  022B               	subwf	displayLotteryResult@wait_cnt,w
  2952  0517                     u935:
  2953  0517  1C03               	skipc
  2954  0518  2D1A               	goto	u931
  2955  0519  2D1B               	goto	u930
  2956  051A                     u931:
  2957  051A  2CE2               	goto	l1967
  2958  051B                     u930:
  2959  051B                     l1979:
  2960                           
  2961                           ;main.c: 255:     }
  2962  051B  3001               	movlw	1
  2963  051C  0020               	movlb	0	; select bank0
  2964  051D  07BD               	addwf	displayLotteryResult@i,f
  2965  051E  3000               	movlw	0
  2966  051F  3DBE               	addwfc	displayLotteryResult@i+1,f
  2967  0520  083E               	movf	displayLotteryResult@i+1,w
  2968  0521  3A80               	xorlw	128
  2969  0522  00A4               	movwf	??_displayLotteryResult
  2970  0523  3080               	movlw	128
  2971  0524  0224               	subwf	??_displayLotteryResult,w
  2972  0525  1D03               	skipz
  2973  0526  2D29               	goto	u945
  2974  0527  3007               	movlw	7
  2975  0528  023D               	subwf	displayLotteryResult@i,w
  2976  0529                     u945:
  2977  0529  1C03               	skipc
  2978  052A  2D2C               	goto	u941
  2979  052B  2D2D               	goto	u940
  2980  052C                     u941:
  2981  052C  2CDF               	goto	l1961
  2982  052D                     u940:
  2983  052D                     l1981:
  2984                           
  2985                           ;main.c: 256:   }
  2986  052D  3001               	movlw	1
  2987  052E  0020               	movlb	0	; select bank0
  2988  052F  07A9               	addwf	displayLotteryResult@x,f
  2989  0530  3000               	movlw	0
  2990  0531  3DAA               	addwfc	displayLotteryResult@x+1,f
  2991  0532  082A               	movf	displayLotteryResult@x+1,w
  2992  0533  3A80               	xorlw	128
  2993  0534  00A4               	movwf	??_displayLotteryResult
  2994  0535  3080               	movlw	128
  2995  0536  0224               	subwf	??_displayLotteryResult,w
  2996  0537  1D03               	skipz
  2997  0538  2D3B               	goto	u955
  2998  0539  3003               	movlw	3
  2999  053A  0229               	subwf	displayLotteryResult@x,w
  3000  053B                     u955:
  3001  053B  1C03               	skipc
  3002  053C  2D3E               	goto	u951
  3003  053D  2D3F               	goto	u950
  3004  053E                     u951:
  3005  053E  2CDA               	goto	l1957
  3006  053F                     u950:
  3007  053F                     l1983:
  3008                           
  3009                           ;main.c: 259:   for(int x=0; x<1; x++){
  3010  053F  0020               	movlb	0	; select bank0
  3011  0540  01AD               	clrf	displayLotteryResult@x_401
  3012  0541  01AE               	clrf	displayLotteryResult@x_401+1
  3013  0542                     l1985:
  3014  0542  082E               	movf	displayLotteryResult@x_401+1,w
  3015  0543  3A80               	xorlw	128
  3016  0544  00A4               	movwf	??_displayLotteryResult
  3017  0545  3080               	movlw	128
  3018  0546  0224               	subwf	??_displayLotteryResult,w
  3019  0547  1D03               	skipz
  3020  0548  2D4B               	goto	u965
  3021  0549  3001               	movlw	1
  3022  054A  022D               	subwf	displayLotteryResult@x_401,w
  3023  054B                     u965:
  3024  054B  1C03               	skipc
  3025  054C  2D4E               	goto	u961
  3026  054D  2D4F               	goto	u960
  3027  054E                     u961:
  3028  054E  2D50               	goto	l1989
  3029  054F                     u960:
  3030  054F  2DED               	goto	l2021
  3031  0550                     l1989:
  3032                           
  3033                           ;main.c: 260:     for(int i=1; i<7; i++){
  3034  0550  3001               	movlw	1
  3035  0551  0020               	movlb	0	; select bank0
  3036  0552  00C1               	movwf	displayLotteryResult@i_402
  3037  0553  3000               	movlw	0
  3038  0554  00C2               	movwf	displayLotteryResult@i_402+1
  3039  0555  0842               	movf	displayLotteryResult@i_402+1,w
  3040  0556  3A80               	xorlw	128
  3041  0557  00A4               	movwf	??_displayLotteryResult
  3042  0558  3080               	movlw	128
  3043  0559  0224               	subwf	??_displayLotteryResult,w
  3044  055A  1D03               	skipz
  3045  055B  2D5E               	goto	u975
  3046  055C  3007               	movlw	7
  3047  055D  0241               	subwf	displayLotteryResult@i_402,w
  3048  055E                     u975:
  3049  055E  1C03               	skipc
  3050  055F  2D61               	goto	u971
  3051  0560  2D62               	goto	u970
  3052  0561                     u971:
  3053  0561  2D63               	goto	l1993
  3054  0562                     u970:
  3055  0562  2DDB               	goto	l2019
  3056  0563                     l1993:
  3057                           
  3058                           ;main.c: 261:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3059  0563  0020               	movlb	0	; select bank0
  3060  0564  01AF               	clrf	displayLotteryResult@wait_cnt_403
  3061  0565  01B0               	clrf	displayLotteryResult@wait_cnt_403+1
  3062  0566                     l1995:
  3063  0566  0830               	movf	displayLotteryResult@wait_cnt_403+1,w
  3064  0567  3A80               	xorlw	128
  3065  0568  00A4               	movwf	??_displayLotteryResult
  3066  0569  3080               	movlw	128
  3067  056A  0224               	subwf	??_displayLotteryResult,w
  3068  056B  1D03               	skipz
  3069  056C  2D6F               	goto	u985
  3070  056D  300A               	movlw	10
  3071  056E  022F               	subwf	displayLotteryResult@wait_cnt_403,w
  3072  056F                     u985:
  3073  056F  1C03               	skipc
  3074  0570  2D72               	goto	u981
  3075  0571  2D73               	goto	u980
  3076  0572                     u981:
  3077  0572  2D74               	goto	l1999
  3078  0573                     u980:
  3079  0573  2DC9               	goto	l2017
  3080  0574                     l1999:
  3081                           
  3082                           ;main.c: 262:         for(int j=1; j<5; j++){
  3083  0574  3001               	movlw	1
  3084  0575  0020               	movlb	0	; select bank0
  3085  0576  00C9               	movwf	displayLotteryResult@j_404
  3086  0577  3000               	movlw	0
  3087  0578  00CA               	movwf	displayLotteryResult@j_404+1
  3088  0579  084A               	movf	displayLotteryResult@j_404+1,w
  3089  057A  3A80               	xorlw	128
  3090  057B  00A4               	movwf	??_displayLotteryResult
  3091  057C  3080               	movlw	128
  3092  057D  0224               	subwf	??_displayLotteryResult,w
  3093  057E  1D03               	skipz
  3094  057F  2D82               	goto	u995
  3095  0580  3005               	movlw	5
  3096  0581  0249               	subwf	displayLotteryResult@j_404,w
  3097  0582                     u995:
  3098  0582  1C03               	skipc
  3099  0583  2D85               	goto	u991
  3100  0584  2D86               	goto	u990
  3101  0585                     u991:
  3102  0585  2D87               	goto	l2003
  3103  0586                     u990:
  3104  0586  2DB7               	goto	l2015
  3105  0587                     l2003:
  3106                           
  3107                           ;main.c: 263:           selectDIG(j);
  3108  0587  0020               	movlb	0	; select bank0
  3109  0588  084A               	movf	displayLotteryResult@j_404+1,w
  3110  0589  00F1               	movwf	selectDIG@dig+1
  3111  058A  0849               	movf	displayLotteryResult@j_404,w
  3112  058B  00F0               	movwf	selectDIG@dig
  3113  058C  3182  22E2  3184   	fcall	_selectDIG
  3114  058F                     l2005:
  3115                           
  3116                           ;main.c: 264:           if(j == 1){
  3117  058F  0020               	movlb	0	; select bank0
  3118  0590  0349               	decf	displayLotteryResult@j_404,w
  3119  0591  044A               	iorwf	displayLotteryResult@j_404+1,w
  3120  0592  1D03               	btfss	3,2
  3121  0593  2D95               	goto	u1001
  3122  0594  2D96               	goto	u1000
  3123  0595                     u1001:
  3124  0595  2D9E               	goto	l2009
  3125  0596                     u1000:
  3126  0596                     l2007:
  3127                           
  3128                           ;main.c: 265:             displaySegments(dig_1);
  3129  0596  0848               	movf	displayLotteryResult@dig_1+1,w
  3130  0597  00F3               	movwf	displaySegments@num+1
  3131  0598  0847               	movf	displayLotteryResult@dig_1,w
  3132  0599  00F2               	movwf	displaySegments@num
  3133  059A  3183  23C9  3184   	fcall	_displaySegments
  3134                           
  3135                           ;main.c: 266:           }else{
  3136  059D  2DA5               	goto	l2011
  3137  059E                     l2009:
  3138                           
  3139                           ;main.c: 267:             displayRoll(i);
  3140  059E  0842               	movf	displayLotteryResult@i_402+1,w
  3141  059F  00F3               	movwf	displayRoll@cnt+1
  3142  05A0  0841               	movf	displayLotteryResult@i_402,w
  3143  05A1  00F2               	movwf	displayRoll@cnt
  3144  05A2  3183  2338  3184   	fcall	_displayRoll
  3145  05A5                     l2011:
  3146                           
  3147                           ;main.c: 269:         }
  3148  05A5  3001               	movlw	1
  3149  05A6  0020               	movlb	0	; select bank0
  3150  05A7  07C9               	addwf	displayLotteryResult@j_404,f
  3151  05A8  3000               	movlw	0
  3152  05A9  3DCA               	addwfc	displayLotteryResult@j_404+1,f
  3153  05AA                     l2013:
  3154  05AA  084A               	movf	displayLotteryResult@j_404+1,w
  3155  05AB  3A80               	xorlw	128
  3156  05AC  00A4               	movwf	??_displayLotteryResult
  3157  05AD  3080               	movlw	128
  3158  05AE  0224               	subwf	??_displayLotteryResult,w
  3159  05AF  1D03               	skipz
  3160  05B0  2DB3               	goto	u1015
  3161  05B1  3005               	movlw	5
  3162  05B2  0249               	subwf	displayLotteryResult@j_404,w
  3163  05B3                     u1015:
  3164  05B3  1C03               	skipc
  3165  05B4  2DB6               	goto	u1011
  3166  05B5  2DB7               	goto	u1010
  3167  05B6                     u1011:
  3168  05B6  2D87               	goto	l2003
  3169  05B7                     u1010:
  3170  05B7                     l2015:
  3171                           
  3172                           ;main.c: 270:       }
  3173  05B7  3001               	movlw	1
  3174  05B8  0020               	movlb	0	; select bank0
  3175  05B9  07AF               	addwf	displayLotteryResult@wait_cnt_403,f
  3176  05BA  3000               	movlw	0
  3177  05BB  3DB0               	addwfc	displayLotteryResult@wait_cnt_403+1,f
  3178  05BC  0830               	movf	displayLotteryResult@wait_cnt_403+1,w
  3179  05BD  3A80               	xorlw	128
  3180  05BE  00A4               	movwf	??_displayLotteryResult
  3181  05BF  3080               	movlw	128
  3182  05C0  0224               	subwf	??_displayLotteryResult,w
  3183  05C1  1D03               	skipz
  3184  05C2  2DC5               	goto	u1025
  3185  05C3  300A               	movlw	10
  3186  05C4  022F               	subwf	displayLotteryResult@wait_cnt_403,w
  3187  05C5                     u1025:
  3188  05C5  1C03               	skipc
  3189  05C6  2DC8               	goto	u1021
  3190  05C7  2DC9               	goto	u1020
  3191  05C8                     u1021:
  3192  05C8  2D74               	goto	l1999
  3193  05C9                     u1020:
  3194  05C9                     l2017:
  3195                           
  3196                           ;main.c: 271:     }
  3197  05C9  3001               	movlw	1
  3198  05CA  0020               	movlb	0	; select bank0
  3199  05CB  07C1               	addwf	displayLotteryResult@i_402,f
  3200  05CC  3000               	movlw	0
  3201  05CD  3DC2               	addwfc	displayLotteryResult@i_402+1,f
  3202  05CE  0842               	movf	displayLotteryResult@i_402+1,w
  3203  05CF  3A80               	xorlw	128
  3204  05D0  00A4               	movwf	??_displayLotteryResult
  3205  05D1  3080               	movlw	128
  3206  05D2  0224               	subwf	??_displayLotteryResult,w
  3207  05D3  1D03               	skipz
  3208  05D4  2DD7               	goto	u1035
  3209  05D5  3007               	movlw	7
  3210  05D6  0241               	subwf	displayLotteryResult@i_402,w
  3211  05D7                     u1035:
  3212  05D7  1C03               	skipc
  3213  05D8  2DDA               	goto	u1031
  3214  05D9  2DDB               	goto	u1030
  3215  05DA                     u1031:
  3216  05DA  2D63               	goto	l1993
  3217  05DB                     u1030:
  3218  05DB                     l2019:
  3219                           
  3220                           ;main.c: 272:   }
  3221  05DB  3001               	movlw	1
  3222  05DC  0020               	movlb	0	; select bank0
  3223  05DD  07AD               	addwf	displayLotteryResult@x_401,f
  3224  05DE  3000               	movlw	0
  3225  05DF  3DAE               	addwfc	displayLotteryResult@x_401+1,f
  3226  05E0  082E               	movf	displayLotteryResult@x_401+1,w
  3227  05E1  3A80               	xorlw	128
  3228  05E2  00A4               	movwf	??_displayLotteryResult
  3229  05E3  3080               	movlw	128
  3230  05E4  0224               	subwf	??_displayLotteryResult,w
  3231  05E5  1D03               	skipz
  3232  05E6  2DE9               	goto	u1045
  3233  05E7  3001               	movlw	1
  3234  05E8  022D               	subwf	displayLotteryResult@x_401,w
  3235  05E9                     u1045:
  3236  05E9  1C03               	skipc
  3237  05EA  2DEC               	goto	u1041
  3238  05EB  2DED               	goto	u1040
  3239  05EC                     u1041:
  3240  05EC  2D50               	goto	l1989
  3241  05ED                     u1040:
  3242  05ED                     l2021:
  3243                           
  3244                           ;main.c: 275:   for(int x=0; x<1; x++){
  3245  05ED  0020               	movlb	0	; select bank0
  3246  05EE  01B1               	clrf	displayLotteryResult@x_406
  3247  05EF  01B2               	clrf	displayLotteryResult@x_406+1
  3248  05F0                     l2023:
  3249  05F0  0832               	movf	displayLotteryResult@x_406+1,w
  3250  05F1  3A80               	xorlw	128
  3251  05F2  00A4               	movwf	??_displayLotteryResult
  3252  05F3  3080               	movlw	128
  3253  05F4  0224               	subwf	??_displayLotteryResult,w
  3254  05F5  1D03               	skipz
  3255  05F6  2DF9               	goto	u1055
  3256  05F7  3001               	movlw	1
  3257  05F8  0231               	subwf	displayLotteryResult@x_406,w
  3258  05F9                     u1055:
  3259  05F9  1C03               	skipc
  3260  05FA  2DFC               	goto	u1051
  3261  05FB  2DFD               	goto	u1050
  3262  05FC                     u1051:
  3263  05FC  2DFE               	goto	l2027
  3264  05FD                     u1050:
  3265  05FD  2EAA               	goto	l2063
  3266  05FE                     l2027:
  3267                           
  3268                           ;main.c: 276:     for(int i=1; i<7; i++){
  3269  05FE  3001               	movlw	1
  3270  05FF  0020               	movlb	0	; select bank0
  3271  0600  00C3               	movwf	displayLotteryResult@i_407
  3272  0601  3000               	movlw	0
  3273  0602  00C4               	movwf	displayLotteryResult@i_407+1
  3274  0603  0844               	movf	displayLotteryResult@i_407+1,w
  3275  0604  3A80               	xorlw	128
  3276  0605  00A4               	movwf	??_displayLotteryResult
  3277  0606  3080               	movlw	128
  3278  0607  0224               	subwf	??_displayLotteryResult,w
  3279  0608  1D03               	skipz
  3280  0609  2E0C               	goto	u1065
  3281  060A  3007               	movlw	7
  3282  060B  0243               	subwf	displayLotteryResult@i_407,w
  3283  060C                     u1065:
  3284  060C  1C03               	skipc
  3285  060D  2E0F               	goto	u1061
  3286  060E  2E10               	goto	u1060
  3287  060F                     u1061:
  3288  060F  2E11               	goto	l2031
  3289  0610                     u1060:
  3290  0610  2E98               	goto	l2061
  3291  0611                     l2031:
  3292                           
  3293                           ;main.c: 277:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3294  0611  0020               	movlb	0	; select bank0
  3295  0612  01B3               	clrf	displayLotteryResult@wait_cnt_408
  3296  0613  01B4               	clrf	displayLotteryResult@wait_cnt_408+1
  3297  0614                     l2033:
  3298  0614  0834               	movf	displayLotteryResult@wait_cnt_408+1,w
  3299  0615  3A80               	xorlw	128
  3300  0616  00A4               	movwf	??_displayLotteryResult
  3301  0617  3080               	movlw	128
  3302  0618  0224               	subwf	??_displayLotteryResult,w
  3303  0619  1D03               	skipz
  3304  061A  2E1D               	goto	u1075
  3305  061B  300A               	movlw	10
  3306  061C  0233               	subwf	displayLotteryResult@wait_cnt_408,w
  3307  061D                     u1075:
  3308  061D  1C03               	skipc
  3309  061E  2E20               	goto	u1071
  3310  061F  2E21               	goto	u1070
  3311  0620                     u1071:
  3312  0620  2E22               	goto	l2037
  3313  0621                     u1070:
  3314  0621  2E86               	goto	l2059
  3315  0622                     l2037:
  3316                           
  3317                           ;main.c: 278:         for(int j=1; j<5; j++){
  3318  0622  3001               	movlw	1
  3319  0623  0020               	movlb	0	; select bank0
  3320  0624  00CB               	movwf	displayLotteryResult@j_409
  3321  0625  3000               	movlw	0
  3322  0626  00CC               	movwf	displayLotteryResult@j_409+1
  3323  0627  084C               	movf	displayLotteryResult@j_409+1,w
  3324  0628  3A80               	xorlw	128
  3325  0629  00A4               	movwf	??_displayLotteryResult
  3326  062A  3080               	movlw	128
  3327  062B  0224               	subwf	??_displayLotteryResult,w
  3328  062C  1D03               	skipz
  3329  062D  2E30               	goto	u1085
  3330  062E  3005               	movlw	5
  3331  062F  024B               	subwf	displayLotteryResult@j_409,w
  3332  0630                     u1085:
  3333  0630  1C03               	skipc
  3334  0631  2E33               	goto	u1081
  3335  0632  2E34               	goto	u1080
  3336  0633                     u1081:
  3337  0633  2E35               	goto	l2041
  3338  0634                     u1080:
  3339  0634  2E74               	goto	l2057
  3340  0635                     l2041:
  3341                           
  3342                           ;main.c: 279:           selectDIG(j);
  3343  0635  0020               	movlb	0	; select bank0
  3344  0636  084C               	movf	displayLotteryResult@j_409+1,w
  3345  0637  00F1               	movwf	selectDIG@dig+1
  3346  0638  084B               	movf	displayLotteryResult@j_409,w
  3347  0639  00F0               	movwf	selectDIG@dig
  3348  063A  3182  22E2  3184   	fcall	_selectDIG
  3349  063D                     l2043:
  3350                           
  3351                           ;main.c: 280:           if(j == 1){
  3352  063D  0020               	movlb	0	; select bank0
  3353  063E  034B               	decf	displayLotteryResult@j_409,w
  3354  063F  044C               	iorwf	displayLotteryResult@j_409+1,w
  3355  0640  1D03               	btfss	3,2
  3356  0641  2E43               	goto	u1091
  3357  0642  2E44               	goto	u1090
  3358  0643                     u1091:
  3359  0643  2E4C               	goto	l2047
  3360  0644                     u1090:
  3361  0644                     l2045:
  3362                           
  3363                           ;main.c: 281:             displaySegments(dig_1);
  3364  0644  0848               	movf	displayLotteryResult@dig_1+1,w
  3365  0645  00F3               	movwf	displaySegments@num+1
  3366  0646  0847               	movf	displayLotteryResult@dig_1,w
  3367  0647  00F2               	movwf	displaySegments@num
  3368  0648  3183  23C9  3184   	fcall	_displaySegments
  3369                           
  3370                           ;main.c: 282:           }else if(j == 2){
  3371  064B  2E62               	goto	l2053
  3372  064C                     l2047:
  3373  064C  3002               	movlw	2
  3374  064D  064B               	xorwf	displayLotteryResult@j_409,w
  3375  064E  044C               	iorwf	displayLotteryResult@j_409+1,w
  3376  064F  1D03               	btfss	3,2
  3377  0650  2E52               	goto	u1101
  3378  0651  2E53               	goto	u1100
  3379  0652                     u1101:
  3380  0652  2E5B               	goto	l2051
  3381  0653                     u1100:
  3382  0653                     l2049:
  3383                           
  3384                           ;main.c: 283:             displaySegments(dig_2);
  3385  0653  083C               	movf	displayLotteryResult@dig_2+1,w
  3386  0654  00F3               	movwf	displaySegments@num+1
  3387  0655  083B               	movf	displayLotteryResult@dig_2,w
  3388  0656  00F2               	movwf	displaySegments@num
  3389  0657  3183  23C9  3184   	fcall	_displaySegments
  3390                           
  3391                           ;main.c: 284:           }else{
  3392  065A  2E62               	goto	l2053
  3393  065B                     l2051:
  3394                           
  3395                           ;main.c: 285:             displayRoll(i);
  3396  065B  0844               	movf	displayLotteryResult@i_407+1,w
  3397  065C  00F3               	movwf	displayRoll@cnt+1
  3398  065D  0843               	movf	displayLotteryResult@i_407,w
  3399  065E  00F2               	movwf	displayRoll@cnt
  3400  065F  3183  2338  3184   	fcall	_displayRoll
  3401  0662                     l2053:
  3402                           
  3403                           ;main.c: 287:         }
  3404  0662  3001               	movlw	1
  3405  0663  0020               	movlb	0	; select bank0
  3406  0664  07CB               	addwf	displayLotteryResult@j_409,f
  3407  0665  3000               	movlw	0
  3408  0666  3DCC               	addwfc	displayLotteryResult@j_409+1,f
  3409  0667                     l2055:
  3410  0667  084C               	movf	displayLotteryResult@j_409+1,w
  3411  0668  3A80               	xorlw	128
  3412  0669  00A4               	movwf	??_displayLotteryResult
  3413  066A  3080               	movlw	128
  3414  066B  0224               	subwf	??_displayLotteryResult,w
  3415  066C  1D03               	skipz
  3416  066D  2E70               	goto	u1115
  3417  066E  3005               	movlw	5
  3418  066F  024B               	subwf	displayLotteryResult@j_409,w
  3419  0670                     u1115:
  3420  0670  1C03               	skipc
  3421  0671  2E73               	goto	u1111
  3422  0672  2E74               	goto	u1110
  3423  0673                     u1111:
  3424  0673  2E35               	goto	l2041
  3425  0674                     u1110:
  3426  0674                     l2057:
  3427                           
  3428                           ;main.c: 288:       }
  3429  0674  3001               	movlw	1
  3430  0675  0020               	movlb	0	; select bank0
  3431  0676  07B3               	addwf	displayLotteryResult@wait_cnt_408,f
  3432  0677  3000               	movlw	0
  3433  0678  3DB4               	addwfc	displayLotteryResult@wait_cnt_408+1,f
  3434  0679  0834               	movf	displayLotteryResult@wait_cnt_408+1,w
  3435  067A  3A80               	xorlw	128
  3436  067B  00A4               	movwf	??_displayLotteryResult
  3437  067C  3080               	movlw	128
  3438  067D  0224               	subwf	??_displayLotteryResult,w
  3439  067E  1D03               	skipz
  3440  067F  2E82               	goto	u1125
  3441  0680  300A               	movlw	10
  3442  0681  0233               	subwf	displayLotteryResult@wait_cnt_408,w
  3443  0682                     u1125:
  3444  0682  1C03               	skipc
  3445  0683  2E85               	goto	u1121
  3446  0684  2E86               	goto	u1120
  3447  0685                     u1121:
  3448  0685  2E22               	goto	l2037
  3449  0686                     u1120:
  3450  0686                     l2059:
  3451                           
  3452                           ;main.c: 289:     }
  3453  0686  3001               	movlw	1
  3454  0687  0020               	movlb	0	; select bank0
  3455  0688  07C3               	addwf	displayLotteryResult@i_407,f
  3456  0689  3000               	movlw	0
  3457  068A  3DC4               	addwfc	displayLotteryResult@i_407+1,f
  3458  068B  0844               	movf	displayLotteryResult@i_407+1,w
  3459  068C  3A80               	xorlw	128
  3460  068D  00A4               	movwf	??_displayLotteryResult
  3461  068E  3080               	movlw	128
  3462  068F  0224               	subwf	??_displayLotteryResult,w
  3463  0690  1D03               	skipz
  3464  0691  2E94               	goto	u1135
  3465  0692  3007               	movlw	7
  3466  0693  0243               	subwf	displayLotteryResult@i_407,w
  3467  0694                     u1135:
  3468  0694  1C03               	skipc
  3469  0695  2E97               	goto	u1131
  3470  0696  2E98               	goto	u1130
  3471  0697                     u1131:
  3472  0697  2E11               	goto	l2031
  3473  0698                     u1130:
  3474  0698                     l2061:
  3475                           
  3476                           ;main.c: 290:   }
  3477  0698  3001               	movlw	1
  3478  0699  0020               	movlb	0	; select bank0
  3479  069A  07B1               	addwf	displayLotteryResult@x_406,f
  3480  069B  3000               	movlw	0
  3481  069C  3DB2               	addwfc	displayLotteryResult@x_406+1,f
  3482  069D  0832               	movf	displayLotteryResult@x_406+1,w
  3483  069E  3A80               	xorlw	128
  3484  069F  00A4               	movwf	??_displayLotteryResult
  3485  06A0  3080               	movlw	128
  3486  06A1  0224               	subwf	??_displayLotteryResult,w
  3487  06A2  1D03               	skipz
  3488  06A3  2EA6               	goto	u1145
  3489  06A4  3001               	movlw	1
  3490  06A5  0231               	subwf	displayLotteryResult@x_406,w
  3491  06A6                     u1145:
  3492  06A6  1C03               	skipc
  3493  06A7  2EA9               	goto	u1141
  3494  06A8  2EAA               	goto	u1140
  3495  06A9                     u1141:
  3496  06A9  2DFE               	goto	l2027
  3497  06AA                     u1140:
  3498  06AA                     l2063:
  3499                           
  3500                           ;main.c: 293:   for(int x=0; x<1; x++){
  3501  06AA  0020               	movlb	0	; select bank0
  3502  06AB  01B5               	clrf	displayLotteryResult@x_410
  3503  06AC  01B6               	clrf	displayLotteryResult@x_410+1
  3504  06AD                     l2065:
  3505  06AD  0836               	movf	displayLotteryResult@x_410+1,w
  3506  06AE  3A80               	xorlw	128
  3507  06AF  00A4               	movwf	??_displayLotteryResult
  3508  06B0  3080               	movlw	128
  3509  06B1  0224               	subwf	??_displayLotteryResult,w
  3510  06B2  1D03               	skipz
  3511  06B3  2EB6               	goto	u1155
  3512  06B4  3001               	movlw	1
  3513  06B5  0235               	subwf	displayLotteryResult@x_410,w
  3514  06B6                     u1155:
  3515  06B6  1C03               	skipc
  3516  06B7  2EB9               	goto	u1151
  3517  06B8  2EBA               	goto	u1150
  3518  06B9                     u1151:
  3519  06B9  2EBB               	goto	l2069
  3520  06BA                     u1150:
  3521  06BA  2F76               	goto	l2109
  3522  06BB                     l2069:
  3523                           
  3524                           ;main.c: 294:     for(int i=1; i<7; i++){
  3525  06BB  3001               	movlw	1
  3526  06BC  0020               	movlb	0	; select bank0
  3527  06BD  00C5               	movwf	displayLotteryResult@i_411
  3528  06BE  3000               	movlw	0
  3529  06BF  00C6               	movwf	displayLotteryResult@i_411+1
  3530  06C0  0846               	movf	displayLotteryResult@i_411+1,w
  3531  06C1  3A80               	xorlw	128
  3532  06C2  00A4               	movwf	??_displayLotteryResult
  3533  06C3  3080               	movlw	128
  3534  06C4  0224               	subwf	??_displayLotteryResult,w
  3535  06C5  1D03               	skipz
  3536  06C6  2EC9               	goto	u1165
  3537  06C7  3007               	movlw	7
  3538  06C8  0245               	subwf	displayLotteryResult@i_411,w
  3539  06C9                     u1165:
  3540  06C9  1C03               	skipc
  3541  06CA  2ECC               	goto	u1161
  3542  06CB  2ECD               	goto	u1160
  3543  06CC                     u1161:
  3544  06CC  2ECE               	goto	l2073
  3545  06CD                     u1160:
  3546  06CD  2F64               	goto	l2107
  3547  06CE                     l2073:
  3548                           
  3549                           ;main.c: 295:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3550  06CE  0020               	movlb	0	; select bank0
  3551  06CF  01B7               	clrf	displayLotteryResult@wait_cnt_412
  3552  06D0  01B8               	clrf	displayLotteryResult@wait_cnt_412+1
  3553  06D1                     l2075:
  3554  06D1  0838               	movf	displayLotteryResult@wait_cnt_412+1,w
  3555  06D2  3A80               	xorlw	128
  3556  06D3  00A4               	movwf	??_displayLotteryResult
  3557  06D4  3080               	movlw	128
  3558  06D5  0224               	subwf	??_displayLotteryResult,w
  3559  06D6  1D03               	skipz
  3560  06D7  2EDA               	goto	u1175
  3561  06D8  300A               	movlw	10
  3562  06D9  0237               	subwf	displayLotteryResult@wait_cnt_412,w
  3563  06DA                     u1175:
  3564  06DA  1C03               	skipc
  3565  06DB  2EDD               	goto	u1171
  3566  06DC  2EDE               	goto	u1170
  3567  06DD                     u1171:
  3568  06DD  2EDF               	goto	l2079
  3569  06DE                     u1170:
  3570  06DE  2F52               	goto	l2105
  3571  06DF                     l2079:
  3572                           
  3573                           ;main.c: 296:         for(int j=1; j<5; j++){
  3574  06DF  3001               	movlw	1
  3575  06E0  0020               	movlb	0	; select bank0
  3576  06E1  00CD               	movwf	displayLotteryResult@j_413
  3577  06E2  3000               	movlw	0
  3578  06E3  00CE               	movwf	displayLotteryResult@j_413+1
  3579  06E4  084E               	movf	displayLotteryResult@j_413+1,w
  3580  06E5  3A80               	xorlw	128
  3581  06E6  00A4               	movwf	??_displayLotteryResult
  3582  06E7  3080               	movlw	128
  3583  06E8  0224               	subwf	??_displayLotteryResult,w
  3584  06E9  1D03               	skipz
  3585  06EA  2EED               	goto	u1185
  3586  06EB  3005               	movlw	5
  3587  06EC  024D               	subwf	displayLotteryResult@j_413,w
  3588  06ED                     u1185:
  3589  06ED  1C03               	skipc
  3590  06EE  2EF0               	goto	u1181
  3591  06EF  2EF1               	goto	u1180
  3592  06F0                     u1181:
  3593  06F0  2EF2               	goto	l2083
  3594  06F1                     u1180:
  3595  06F1  2F40               	goto	l2103
  3596  06F2                     l2083:
  3597                           
  3598                           ;main.c: 297:           selectDIG(j);
  3599  06F2  0020               	movlb	0	; select bank0
  3600  06F3  084E               	movf	displayLotteryResult@j_413+1,w
  3601  06F4  00F1               	movwf	selectDIG@dig+1
  3602  06F5  084D               	movf	displayLotteryResult@j_413,w
  3603  06F6  00F0               	movwf	selectDIG@dig
  3604  06F7  3182  22E2  3184   	fcall	_selectDIG
  3605  06FA                     l2085:
  3606                           
  3607                           ;main.c: 298:           if(j == 1){
  3608  06FA  0020               	movlb	0	; select bank0
  3609  06FB  034D               	decf	displayLotteryResult@j_413,w
  3610  06FC  044E               	iorwf	displayLotteryResult@j_413+1,w
  3611  06FD  1D03               	btfss	3,2
  3612  06FE  2F00               	goto	u1191
  3613  06FF  2F01               	goto	u1190
  3614  0700                     u1191:
  3615  0700  2F09               	goto	l2089
  3616  0701                     u1190:
  3617  0701                     l2087:
  3618                           
  3619                           ;main.c: 299:             displaySegments(dig_1);
  3620  0701  0848               	movf	displayLotteryResult@dig_1+1,w
  3621  0702  00F3               	movwf	displaySegments@num+1
  3622  0703  0847               	movf	displayLotteryResult@dig_1,w
  3623  0704  00F2               	movwf	displaySegments@num
  3624  0705  3183  23C9  3184   	fcall	_displaySegments
  3625                           
  3626                           ;main.c: 300:           }else if(j == 2){
  3627  0708  2F2E               	goto	l2099
  3628  0709                     l2089:
  3629  0709  3002               	movlw	2
  3630  070A  064D               	xorwf	displayLotteryResult@j_413,w
  3631  070B  044E               	iorwf	displayLotteryResult@j_413+1,w
  3632  070C  1D03               	btfss	3,2
  3633  070D  2F0F               	goto	u1201
  3634  070E  2F10               	goto	u1200
  3635  070F                     u1201:
  3636  070F  2F18               	goto	l2093
  3637  0710                     u1200:
  3638  0710                     l2091:
  3639                           
  3640                           ;main.c: 301:             displaySegments(dig_2);
  3641  0710  083C               	movf	displayLotteryResult@dig_2+1,w
  3642  0711  00F3               	movwf	displaySegments@num+1
  3643  0712  083B               	movf	displayLotteryResult@dig_2,w
  3644  0713  00F2               	movwf	displaySegments@num
  3645  0714  3183  23C9  3184   	fcall	_displaySegments
  3646                           
  3647                           ;main.c: 302:           }else if(j == 3){
  3648  0717  2F2E               	goto	l2099
  3649  0718                     l2093:
  3650  0718  3003               	movlw	3
  3651  0719  064D               	xorwf	displayLotteryResult@j_413,w
  3652  071A  044E               	iorwf	displayLotteryResult@j_413+1,w
  3653  071B  1D03               	btfss	3,2
  3654  071C  2F1E               	goto	u1211
  3655  071D  2F1F               	goto	u1210
  3656  071E                     u1211:
  3657  071E  2F27               	goto	l2097
  3658  071F                     u1210:
  3659  071F                     l2095:
  3660                           
  3661                           ;main.c: 303:             displaySegments(dig_3);
  3662  071F  0828               	movf	displayLotteryResult@dig_3+1,w
  3663  0720  00F3               	movwf	displaySegments@num+1
  3664  0721  0827               	movf	displayLotteryResult@dig_3,w
  3665  0722  00F2               	movwf	displaySegments@num
  3666  0723  3183  23C9  3184   	fcall	_displaySegments
  3667                           
  3668                           ;main.c: 304:           }else{
  3669  0726  2F2E               	goto	l2099
  3670  0727                     l2097:
  3671                           
  3672                           ;main.c: 305:             displayRoll(i);
  3673  0727  0846               	movf	displayLotteryResult@i_411+1,w
  3674  0728  00F3               	movwf	displayRoll@cnt+1
  3675  0729  0845               	movf	displayLotteryResult@i_411,w
  3676  072A  00F2               	movwf	displayRoll@cnt
  3677  072B  3183  2338  3184   	fcall	_displayRoll
  3678  072E                     l2099:
  3679                           
  3680                           ;main.c: 307:         }
  3681  072E  3001               	movlw	1
  3682  072F  0020               	movlb	0	; select bank0
  3683  0730  07CD               	addwf	displayLotteryResult@j_413,f
  3684  0731  3000               	movlw	0
  3685  0732  3DCE               	addwfc	displayLotteryResult@j_413+1,f
  3686  0733                     l2101:
  3687  0733  084E               	movf	displayLotteryResult@j_413+1,w
  3688  0734  3A80               	xorlw	128
  3689  0735  00A4               	movwf	??_displayLotteryResult
  3690  0736  3080               	movlw	128
  3691  0737  0224               	subwf	??_displayLotteryResult,w
  3692  0738  1D03               	skipz
  3693  0739  2F3C               	goto	u1225
  3694  073A  3005               	movlw	5
  3695  073B  024D               	subwf	displayLotteryResult@j_413,w
  3696  073C                     u1225:
  3697  073C  1C03               	skipc
  3698  073D  2F3F               	goto	u1221
  3699  073E  2F40               	goto	u1220
  3700  073F                     u1221:
  3701  073F  2EF2               	goto	l2083
  3702  0740                     u1220:
  3703  0740                     l2103:
  3704                           
  3705                           ;main.c: 308:       }
  3706  0740  3001               	movlw	1
  3707  0741  0020               	movlb	0	; select bank0
  3708  0742  07B7               	addwf	displayLotteryResult@wait_cnt_412,f
  3709  0743  3000               	movlw	0
  3710  0744  3DB8               	addwfc	displayLotteryResult@wait_cnt_412+1,f
  3711  0745  0838               	movf	displayLotteryResult@wait_cnt_412+1,w
  3712  0746  3A80               	xorlw	128
  3713  0747  00A4               	movwf	??_displayLotteryResult
  3714  0748  3080               	movlw	128
  3715  0749  0224               	subwf	??_displayLotteryResult,w
  3716  074A  1D03               	skipz
  3717  074B  2F4E               	goto	u1235
  3718  074C  300A               	movlw	10
  3719  074D  0237               	subwf	displayLotteryResult@wait_cnt_412,w
  3720  074E                     u1235:
  3721  074E  1C03               	skipc
  3722  074F  2F51               	goto	u1231
  3723  0750  2F52               	goto	u1230
  3724  0751                     u1231:
  3725  0751  2EDF               	goto	l2079
  3726  0752                     u1230:
  3727  0752                     l2105:
  3728                           
  3729                           ;main.c: 309:     }
  3730  0752  3001               	movlw	1
  3731  0753  0020               	movlb	0	; select bank0
  3732  0754  07C5               	addwf	displayLotteryResult@i_411,f
  3733  0755  3000               	movlw	0
  3734  0756  3DC6               	addwfc	displayLotteryResult@i_411+1,f
  3735  0757  0846               	movf	displayLotteryResult@i_411+1,w
  3736  0758  3A80               	xorlw	128
  3737  0759  00A4               	movwf	??_displayLotteryResult
  3738  075A  3080               	movlw	128
  3739  075B  0224               	subwf	??_displayLotteryResult,w
  3740  075C  1D03               	skipz
  3741  075D  2F60               	goto	u1245
  3742  075E  3007               	movlw	7
  3743  075F  0245               	subwf	displayLotteryResult@i_411,w
  3744  0760                     u1245:
  3745  0760  1C03               	skipc
  3746  0761  2F63               	goto	u1241
  3747  0762  2F64               	goto	u1240
  3748  0763                     u1241:
  3749  0763  2ECE               	goto	l2073
  3750  0764                     u1240:
  3751  0764                     l2107:
  3752                           
  3753                           ;main.c: 310:   }
  3754  0764  3001               	movlw	1
  3755  0765  0020               	movlb	0	; select bank0
  3756  0766  07B5               	addwf	displayLotteryResult@x_410,f
  3757  0767  3000               	movlw	0
  3758  0768  3DB6               	addwfc	displayLotteryResult@x_410+1,f
  3759  0769  0836               	movf	displayLotteryResult@x_410+1,w
  3760  076A  3A80               	xorlw	128
  3761  076B  00A4               	movwf	??_displayLotteryResult
  3762  076C  3080               	movlw	128
  3763  076D  0224               	subwf	??_displayLotteryResult,w
  3764  076E  1D03               	skipz
  3765  076F  2F72               	goto	u1255
  3766  0770  3001               	movlw	1
  3767  0771  0235               	subwf	displayLotteryResult@x_410,w
  3768  0772                     u1255:
  3769  0772  1C03               	skipc
  3770  0773  2F75               	goto	u1251
  3771  0774  2F76               	goto	u1250
  3772  0775                     u1251:
  3773  0775  2EBB               	goto	l2069
  3774  0776                     u1250:
  3775  0776                     l2109:
  3776                           
  3777                           ;main.c: 313:   for(int wait_cnt=0; wait_cnt<1000; wait_cnt++){
  3778  0776  0020               	movlb	0	; select bank0
  3779  0777  01B9               	clrf	displayLotteryResult@wait_cnt_414
  3780  0778  01BA               	clrf	displayLotteryResult@wait_cnt_414+1
  3781  0779                     l2111:
  3782  0779  083A               	movf	displayLotteryResult@wait_cnt_414+1,w
  3783  077A  3A80               	xorlw	128
  3784  077B  00A4               	movwf	??_displayLotteryResult
  3785  077C  3083               	movlw	131
  3786  077D  0224               	subwf	??_displayLotteryResult,w
  3787  077E  1D03               	skipz
  3788  077F  2F82               	goto	u1265
  3789  0780  30E8               	movlw	232
  3790  0781  0239               	subwf	displayLotteryResult@wait_cnt_414,w
  3791  0782                     u1265:
  3792  0782  1C03               	skipc
  3793  0783  2F85               	goto	u1261
  3794  0784  2F86               	goto	u1260
  3795  0785                     u1261:
  3796  0785  2F87               	goto	l2115
  3797  0786                     u1260:
  3798  0786  2FFA               	goto	l463
  3799  0787                     l2115:
  3800                           
  3801                           ;main.c: 314:     for(int j=1; j<5; j++){
  3802  0787  3001               	movlw	1
  3803  0788  0020               	movlb	0	; select bank0
  3804  0789  00CF               	movwf	displayLotteryResult@j_415
  3805  078A  3000               	movlw	0
  3806  078B  00D0               	movwf	displayLotteryResult@j_415+1
  3807  078C  0850               	movf	displayLotteryResult@j_415+1,w
  3808  078D  3A80               	xorlw	128
  3809  078E  00A4               	movwf	??_displayLotteryResult
  3810  078F  3080               	movlw	128
  3811  0790  0224               	subwf	??_displayLotteryResult,w
  3812  0791  1D03               	skipz
  3813  0792  2F95               	goto	u1275
  3814  0793  3005               	movlw	5
  3815  0794  024F               	subwf	displayLotteryResult@j_415,w
  3816  0795                     u1275:
  3817  0795  1C03               	skipc
  3818  0796  2F98               	goto	u1271
  3819  0797  2F99               	goto	u1270
  3820  0798                     u1271:
  3821  0798  2F9A               	goto	l2119
  3822  0799                     u1270:
  3823  0799  2FE8               	goto	l2139
  3824  079A                     l2119:
  3825                           
  3826                           ;main.c: 315:       selectDIG(j);
  3827  079A  0020               	movlb	0	; select bank0
  3828  079B  0850               	movf	displayLotteryResult@j_415+1,w
  3829  079C  00F1               	movwf	selectDIG@dig+1
  3830  079D  084F               	movf	displayLotteryResult@j_415,w
  3831  079E  00F0               	movwf	selectDIG@dig
  3832  079F  3182  22E2  3184   	fcall	_selectDIG
  3833  07A2                     l2121:
  3834                           
  3835                           ;main.c: 316:       if(j == 1){
  3836  07A2  0020               	movlb	0	; select bank0
  3837  07A3  034F               	decf	displayLotteryResult@j_415,w
  3838  07A4  0450               	iorwf	displayLotteryResult@j_415+1,w
  3839  07A5  1D03               	btfss	3,2
  3840  07A6  2FA8               	goto	u1281
  3841  07A7  2FA9               	goto	u1280
  3842  07A8                     u1281:
  3843  07A8  2FB1               	goto	l2125
  3844  07A9                     u1280:
  3845  07A9                     l2123:
  3846                           
  3847                           ;main.c: 317:         displaySegments(dig_1);
  3848  07A9  0848               	movf	displayLotteryResult@dig_1+1,w
  3849  07AA  00F3               	movwf	displaySegments@num+1
  3850  07AB  0847               	movf	displayLotteryResult@dig_1,w
  3851  07AC  00F2               	movwf	displaySegments@num
  3852  07AD  3183  23C9  3184   	fcall	_displaySegments
  3853                           
  3854                           ;main.c: 318:       }else if(j == 2){
  3855  07B0  2FD6               	goto	l2135
  3856  07B1                     l2125:
  3857  07B1  3002               	movlw	2
  3858  07B2  064F               	xorwf	displayLotteryResult@j_415,w
  3859  07B3  0450               	iorwf	displayLotteryResult@j_415+1,w
  3860  07B4  1D03               	btfss	3,2
  3861  07B5  2FB7               	goto	u1291
  3862  07B6  2FB8               	goto	u1290
  3863  07B7                     u1291:
  3864  07B7  2FC0               	goto	l2129
  3865  07B8                     u1290:
  3866  07B8                     l2127:
  3867                           
  3868                           ;main.c: 319:         displaySegments(dig_2);
  3869  07B8  083C               	movf	displayLotteryResult@dig_2+1,w
  3870  07B9  00F3               	movwf	displaySegments@num+1
  3871  07BA  083B               	movf	displayLotteryResult@dig_2,w
  3872  07BB  00F2               	movwf	displaySegments@num
  3873  07BC  3183  23C9  3184   	fcall	_displaySegments
  3874                           
  3875                           ;main.c: 320:       }else if(j == 3){
  3876  07BF  2FD6               	goto	l2135
  3877  07C0                     l2129:
  3878  07C0  3003               	movlw	3
  3879  07C1  064F               	xorwf	displayLotteryResult@j_415,w
  3880  07C2  0450               	iorwf	displayLotteryResult@j_415+1,w
  3881  07C3  1D03               	btfss	3,2
  3882  07C4  2FC6               	goto	u1301
  3883  07C5  2FC7               	goto	u1300
  3884  07C6                     u1301:
  3885  07C6  2FCF               	goto	l2133
  3886  07C7                     u1300:
  3887  07C7                     l2131:
  3888                           
  3889                           ;main.c: 321:         displaySegments(dig_3);
  3890  07C7  0828               	movf	displayLotteryResult@dig_3+1,w
  3891  07C8  00F3               	movwf	displaySegments@num+1
  3892  07C9  0827               	movf	displayLotteryResult@dig_3,w
  3893  07CA  00F2               	movwf	displaySegments@num
  3894  07CB  3183  23C9  3184   	fcall	_displaySegments
  3895                           
  3896                           ;main.c: 322:       }else{
  3897  07CE  2FD6               	goto	l2135
  3898  07CF                     l2133:
  3899                           
  3900                           ;main.c: 323:         displaySegments(dig_4);
  3901  07CF  0826               	movf	displayLotteryResult@dig_4+1,w
  3902  07D0  00F3               	movwf	displaySegments@num+1
  3903  07D1  0825               	movf	displayLotteryResult@dig_4,w
  3904  07D2  00F2               	movwf	displaySegments@num
  3905  07D3  3183  23C9  3184   	fcall	_displaySegments
  3906  07D6                     l2135:
  3907                           
  3908                           ;main.c: 325:     }
  3909  07D6  3001               	movlw	1
  3910  07D7  0020               	movlb	0	; select bank0
  3911  07D8  07CF               	addwf	displayLotteryResult@j_415,f
  3912  07D9  3000               	movlw	0
  3913  07DA  3DD0               	addwfc	displayLotteryResult@j_415+1,f
  3914  07DB                     l2137:
  3915  07DB  0850               	movf	displayLotteryResult@j_415+1,w
  3916  07DC  3A80               	xorlw	128
  3917  07DD  00A4               	movwf	??_displayLotteryResult
  3918  07DE  3080               	movlw	128
  3919  07DF  0224               	subwf	??_displayLotteryResult,w
  3920  07E0  1D03               	skipz
  3921  07E1  2FE4               	goto	u1315
  3922  07E2  3005               	movlw	5
  3923  07E3  024F               	subwf	displayLotteryResult@j_415,w
  3924  07E4                     u1315:
  3925  07E4  1C03               	skipc
  3926  07E5  2FE7               	goto	u1311
  3927  07E6  2FE8               	goto	u1310
  3928  07E7                     u1311:
  3929  07E7  2F9A               	goto	l2119
  3930  07E8                     u1310:
  3931  07E8                     l2139:
  3932                           
  3933                           ;main.c: 326:   }
  3934  07E8  3001               	movlw	1
  3935  07E9  0020               	movlb	0	; select bank0
  3936  07EA  07B9               	addwf	displayLotteryResult@wait_cnt_414,f
  3937  07EB  3000               	movlw	0
  3938  07EC  3DBA               	addwfc	displayLotteryResult@wait_cnt_414+1,f
  3939  07ED  083A               	movf	displayLotteryResult@wait_cnt_414+1,w
  3940  07EE  3A80               	xorlw	128
  3941  07EF  00A4               	movwf	??_displayLotteryResult
  3942  07F0  3083               	movlw	131
  3943  07F1  0224               	subwf	??_displayLotteryResult,w
  3944  07F2  1D03               	skipz
  3945  07F3  2FF6               	goto	u1325
  3946  07F4  30E8               	movlw	232
  3947  07F5  0239               	subwf	displayLotteryResult@wait_cnt_414,w
  3948  07F6                     u1325:
  3949  07F6  1C03               	skipc
  3950  07F7  2FF9               	goto	u1321
  3951  07F8  2FFA               	goto	u1320
  3952  07F9                     u1321:
  3953  07F9  2F87               	goto	l2115
  3954  07FA                     u1320:
  3955  07FA                     l463:
  3956  07FA  0008               	return
  3957  07FB                     __end_of_displayLotteryResult:
  3958                           
  3959                           	psect	text2
  3960  02E2                     __ptext2:	
  3961 ;; *************** function _selectDIG *****************
  3962 ;; Defined at:
  3963 ;;		line 180 in file "main.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  dig             2    0[COMMON] int 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3981 ;;Total ram usage:        2 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; Hardware stack levels required when called: 1
  3984 ;; This function calls:
  3985 ;;		_displayClear
  3986 ;; This function is called by:
  3987 ;;		_displayLotteryResult
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           
  3992                           ;psect for function _selectDIG
  3993  02E2                     _selectDIG:
  3994  02E2                     l1823:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _selectDIG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3997                           
  3998                           
  3999                           ;main.c: 181:   displayClear();
  4000  02E2  3182  2211  3182   	fcall	_displayClear
  4001  02E5                     l1825:
  4002  02E5  0022               	movlb	2	; select bank2
  4003  02E6  178D               	bsf	13,7	;volatile
  4004  02E7                     l1827:
  4005  02E7  170D               	bsf	13,6	;volatile
  4006  02E8                     l1829:
  4007  02E8  150E               	bsf	14,2	;volatile
  4008  02E9                     l1831:
  4009  02E9  148E               	bsf	14,1	;volatile
  4010  02EA  2AF3               	goto	l1835
  4011  02EB                     l357:	
  4012                           ;main.c: 190:       do { LATBbits.LATB7 = 0; } while(0);
  4013                           
  4014  02EB  138D               	bcf	13,7	;volatile
  4015  02EC  2B06               	goto	l370
  4016  02ED                     l361:	
  4017                           ;main.c: 193:       do { LATBbits.LATB6 = 0; } while(0);
  4018                           
  4019  02ED  130D               	bcf	13,6	;volatile
  4020  02EE  2B06               	goto	l370
  4021  02EF                     l364:	
  4022                           ;main.c: 196:       do { LATCbits.LATC2 = 0; } while(0);
  4023                           
  4024  02EF  110E               	bcf	14,2	;volatile
  4025  02F0  2B06               	goto	l370
  4026  02F1                     l367:	
  4027                           ;main.c: 199:       do { LATCbits.LATC1 = 0; } while(0);
  4028                           
  4029  02F1  108E               	bcf	14,1	;volatile
  4030  02F2  2B06               	goto	l370
  4031  02F3                     l1835:
  4032                           
  4033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4034                           ; Switch size 1, requested type "simple"
  4035                           ; Number of cases is 1, Range of values is 0 to 0
  4036                           ; switch strategies available:
  4037                           ; Name         Instructions Cycles
  4038                           ; simple_byte            4     3 (average)
  4039                           ; direct_byte            8     6 (fixed)
  4040                           ; jumptable            260     6 (fixed)
  4041                           ;	Chosen strategy is simple_byte
  4042  02F3  0871               	movf	selectDIG@dig+1,w
  4043  02F4  3A00               	xorlw	0	; case 0
  4044  02F5  1903               	skipnz
  4045  02F6  2AF8               	goto	l2211
  4046  02F7  2B06               	goto	l370
  4047  02F8                     l2211:
  4048                           
  4049                           ; Switch size 1, requested type "simple"
  4050                           ; Number of cases is 4, Range of values is 1 to 4
  4051                           ; switch strategies available:
  4052                           ; Name         Instructions Cycles
  4053                           ; simple_byte           13     7 (average)
  4054                           ; direct_byte           17     9 (fixed)
  4055                           ; jumptable            263     9 (fixed)
  4056                           ;	Chosen strategy is simple_byte
  4057  02F8  0870               	movf	selectDIG@dig,w
  4058  02F9  3A01               	xorlw	1	; case 1
  4059  02FA  1903               	skipnz
  4060  02FB  2AEB               	goto	l357
  4061  02FC  3A03               	xorlw	3	; case 2
  4062  02FD  1903               	skipnz
  4063  02FE  2AED               	goto	l361
  4064  02FF  3A01               	xorlw	1	; case 3
  4065  0300  1903               	skipnz
  4066  0301  2AEF               	goto	l364
  4067  0302  3A07               	xorlw	7	; case 4
  4068  0303  1903               	skipnz
  4069  0304  2AF1               	goto	l367
  4070  0305  2B06               	goto	l370
  4071  0306                     l370:
  4072  0306  0008               	return
  4073  0307                     __end_of_selectDIG:
  4074                           
  4075                           	psect	text3
  4076  03C9                     __ptext3:	
  4077 ;; *************** function _displaySegments *****************
  4078 ;; Defined at:
  4079 ;;		line 139 in file "main.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  num             2    2[COMMON] int 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        2 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 2
  4100 ;; This function calls:
  4101 ;;		_DELAY_milliseconds
  4102 ;;		_displayClear
  4103 ;;		_displayEight
  4104 ;;		_displayFive
  4105 ;;		_displayFour
  4106 ;;		_displayNine
  4107 ;;		_displayOne
  4108 ;;		_displaySeven
  4109 ;;		_displaySix
  4110 ;;		_displayThree
  4111 ;;		_displayTwo
  4112 ;;		_displayZero
  4113 ;; This function is called by:
  4114 ;;		_displayLotteryResult
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function _displaySegments
  4120  03C9                     _displaySegments:
  4121  03C9                     l1791:	
  4122                           ;incstack = 0
  4123                           ; Regs used in _displaySegments: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4124                           
  4125                           
  4126                           ;main.c: 140:   displayClear();
  4127  03C9  3182  2211  3183   	fcall	_displayClear
  4128                           
  4129                           ;main.c: 141:   switch (num)
  4130  03CC  2BF5               	goto	l1815
  4131  03CD                     l1793:
  4132                           
  4133                           ;main.c: 144:     displayZero();
  4134  03CD  3182  225F  3183   	fcall	_displayZero
  4135                           
  4136                           ;main.c: 145:     break;
  4137  03D0  2C1A               	goto	l1817
  4138  03D1                     l1795:
  4139                           
  4140                           ;main.c: 147:     displayOne();
  4141  03D1  3182  2202  3183   	fcall	_displayOne
  4142                           
  4143                           ;main.c: 148:     break;
  4144  03D4  2C1A               	goto	l1817
  4145  03D5                     l1797:
  4146                           
  4147                           ;main.c: 150:     displayTwo();
  4148  03D5  3182  224A  3183   	fcall	_displayTwo
  4149                           
  4150                           ;main.c: 151:     break;
  4151  03D8  2C1A               	goto	l1817
  4152  03D9                     l1799:
  4153                           
  4154                           ;main.c: 153:     displayThree();
  4155  03D9  3182  2240  3183   	fcall	_displayThree
  4156                           
  4157                           ;main.c: 154:     break;
  4158  03DC  2C1A               	goto	l1817
  4159  03DD                     l1801:
  4160                           
  4161                           ;main.c: 156:     displayFour();
  4162  03DD  3182  221A  3183   	fcall	_displayFour
  4163                           
  4164                           ;main.c: 157:     break;
  4165  03E0  2C1A               	goto	l1817
  4166  03E1                     l1803:
  4167                           
  4168                           ;main.c: 159:     displayFive();
  4169  03E1  3182  222C  3183   	fcall	_displayFive
  4170                           
  4171                           ;main.c: 160:     break;
  4172  03E4  2C1A               	goto	l1817
  4173  03E5                     l1805:
  4174                           
  4175                           ;main.c: 162:     displaySix();
  4176  03E5  3182  2254  3183   	fcall	_displaySix
  4177                           
  4178                           ;main.c: 163:     break;
  4179  03E8  2C1A               	goto	l1817
  4180  03E9                     l1807:
  4181                           
  4182                           ;main.c: 165:     displaySeven();
  4183  03E9  3182  2223  3183   	fcall	_displaySeven
  4184                           
  4185                           ;main.c: 166:     break;
  4186  03EC  2C1A               	goto	l1817
  4187  03ED                     l1809:
  4188                           
  4189                           ;main.c: 168:     displayEight();
  4190  03ED  3182  226A  3183   	fcall	_displayEight
  4191                           
  4192                           ;main.c: 169:     break;
  4193  03F0  2C1A               	goto	l1817
  4194  03F1                     l1811:
  4195                           
  4196                           ;main.c: 171:     displayNine();
  4197  03F1  3182  2236  3183   	fcall	_displayNine
  4198                           
  4199                           ;main.c: 172:     break;
  4200  03F4  2C1A               	goto	l1817
  4201  03F5                     l1815:
  4202                           
  4203                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4204                           ; Switch size 1, requested type "simple"
  4205                           ; Number of cases is 1, Range of values is 0 to 0
  4206                           ; switch strategies available:
  4207                           ; Name         Instructions Cycles
  4208                           ; simple_byte            4     3 (average)
  4209                           ; direct_byte            8     6 (fixed)
  4210                           ; jumptable            260     6 (fixed)
  4211                           ;	Chosen strategy is simple_byte
  4212  03F5  0873               	movf	displaySegments@num+1,w
  4213  03F6  3A00               	xorlw	0	; case 0
  4214  03F7  1903               	skipnz
  4215  03F8  2BFA               	goto	l2213
  4216  03F9  2C21               	goto	l344
  4217  03FA                     l2213:
  4218                           
  4219                           ; Switch size 1, requested type "simple"
  4220                           ; Number of cases is 10, Range of values is 0 to 9
  4221                           ; switch strategies available:
  4222                           ; Name         Instructions Cycles
  4223                           ; direct_byte           26     6 (fixed)
  4224                           ; simple_byte           31    16 (average)
  4225                           ; jumptable            260     6 (fixed)
  4226                           ;	Chosen strategy is simple_byte
  4227  03FA  0872               	movf	displaySegments@num,w
  4228  03FB  3A00               	xorlw	0	; case 0
  4229  03FC  1903               	skipnz
  4230  03FD  2BCD               	goto	l1793
  4231  03FE  3A01               	xorlw	1	; case 1
  4232  03FF  1903               	skipnz
  4233  0400  2BD1               	goto	l1795
  4234  0401  3A03               	xorlw	3	; case 2
  4235  0402  1903               	skipnz
  4236  0403  2BD5               	goto	l1797
  4237  0404  3A01               	xorlw	1	; case 3
  4238  0405  1903               	skipnz
  4239  0406  2BD9               	goto	l1799
  4240  0407  3A07               	xorlw	7	; case 4
  4241  0408  1903               	skipnz
  4242  0409  2BDD               	goto	l1801
  4243  040A  3A01               	xorlw	1	; case 5
  4244  040B  1903               	skipnz
  4245  040C  2BE1               	goto	l1803
  4246  040D  3A03               	xorlw	3	; case 6
  4247  040E  1903               	skipnz
  4248  040F  2BE5               	goto	l1805
  4249  0410  3A01               	xorlw	1	; case 7
  4250  0411  1903               	skipnz
  4251  0412  2BE9               	goto	l1807
  4252  0413  3A0F               	xorlw	15	; case 8
  4253  0414  1903               	skipnz
  4254  0415  2BED               	goto	l1809
  4255  0416  3A01               	xorlw	1	; case 9
  4256  0417  1903               	skipnz
  4257  0418  2BF1               	goto	l1811
  4258  0419  2C21               	goto	l344
  4259  041A                     l1817:
  4260                           
  4261                           ;main.c: 177:   DELAY_milliseconds(1);
  4262  041A  3001               	movlw	1
  4263  041B  00F0               	movwf	DELAY_milliseconds@milliseconds
  4264  041C  3000               	movlw	0
  4265  041D  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  4266  041E  3182  2292  3183   	fcall	_DELAY_milliseconds
  4267  0421                     l344:
  4268  0421  0008               	return
  4269  0422                     __end_of_displaySegments:
  4270                           
  4271                           	psect	text4
  4272  025F                     __ptext4:	
  4273 ;; *************** function _displayZero *****************
  4274 ;; Defined at:
  4275 ;;		line 59 in file "main.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		status,2, status,0, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 1
  4296 ;; This function calls:
  4297 ;;		_displayClear
  4298 ;; This function is called by:
  4299 ;;		_displaySegments
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           
  4304                           ;psect for function _displayZero
  4305  025F                     _displayZero:
  4306  025F                     l1655:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _displayZero: [status,2+status,0+pclath+cstack]
  4309                           
  4310                           
  4311                           ;main.c: 60:   displayClear();
  4312  025F  3182  2211  3182   	fcall	_displayClear
  4313  0262                     l1657:
  4314  0262  0022               	movlb	2	; select bank2
  4315  0263  128C               	bcf	12,5	;volatile
  4316  0264                     l1659:
  4317  0264  120C               	bcf	12,4	;volatile
  4318  0265                     l1661:
  4319  0265  128E               	bcf	14,5	;volatile
  4320  0266                     l1663:
  4321  0266  120E               	bcf	14,4	;volatile
  4322  0267                     l1665:
  4323  0267  118E               	bcf	14,3	;volatile
  4324  0268                     l1667:
  4325  0268  130E               	bcf	14,6	;volatile
  4326  0269                     l215:
  4327  0269  0008               	return
  4328  026A                     __end_of_displayZero:
  4329                           
  4330                           	psect	text5
  4331  024A                     __ptext5:	
  4332 ;; *************** function _displayTwo *****************
  4333 ;; Defined at:
  4334 ;;		line 73 in file "main.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		status,2, status,0, pclath, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 1
  4355 ;; This function calls:
  4356 ;;		_displayClear
  4357 ;; This function is called by:
  4358 ;;		_displaySegments
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function _displayTwo
  4364  024A                     _displayTwo:
  4365  024A                     l1675:	
  4366                           ;incstack = 0
  4367                           ; Regs used in _displayTwo: [status,2+status,0+pclath+cstack]
  4368                           
  4369                           
  4370                           ;main.c: 74:   displayClear();
  4371  024A  3182  2211  3182   	fcall	_displayClear
  4372  024D                     l1677:
  4373  024D  0022               	movlb	2	; select bank2
  4374  024E  128C               	bcf	12,5	;volatile
  4375  024F                     l1679:
  4376  024F  120C               	bcf	12,4	;volatile
  4377  0250                     l1681:
  4378  0250  138E               	bcf	14,7	;volatile
  4379  0251                     l1683:
  4380  0251  118E               	bcf	14,3	;volatile
  4381  0252                     l1685:
  4382  0252  120E               	bcf	14,4	;volatile
  4383  0253                     l235:
  4384  0253  0008               	return
  4385  0254                     __end_of_displayTwo:
  4386                           
  4387                           	psect	text6
  4388  0240                     __ptext6:	
  4389 ;; *************** function _displayThree *****************
  4390 ;; Defined at:
  4391 ;;		line 81 in file "main.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4409 ;;Total ram usage:        0 bytes
  4410 ;; Hardware stack levels used: 1
  4411 ;; Hardware stack levels required when called: 1
  4412 ;; This function calls:
  4413 ;;		_displayClear
  4414 ;; This function is called by:
  4415 ;;		_displaySegments
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _displayThree
  4421  0240                     _displayThree:
  4422  0240                     l1687:	
  4423                           ;incstack = 0
  4424                           ; Regs used in _displayThree: [status,2+status,0+pclath+cstack]
  4425                           
  4426                           
  4427                           ;main.c: 82:   displayClear();
  4428  0240  3182  2211  3182   	fcall	_displayClear
  4429  0243                     l1689:
  4430  0243  0022               	movlb	2	; select bank2
  4431  0244  128C               	bcf	12,5	;volatile
  4432  0245                     l1691:
  4433  0245  120C               	bcf	12,4	;volatile
  4434  0246                     l1693:
  4435  0246  138E               	bcf	14,7	;volatile
  4436  0247                     l1695:
  4437  0247  128E               	bcf	14,5	;volatile
  4438  0248                     l1697:
  4439  0248  120E               	bcf	14,4	;volatile
  4440  0249                     l248:
  4441  0249  0008               	return
  4442  024A                     __end_of_displayThree:
  4443                           
  4444                           	psect	text7
  4445  0254                     __ptext7:	
  4446 ;; *************** function _displaySix *****************
  4447 ;; Defined at:
  4448 ;;		line 104 in file "main.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;		None
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      void 
  4455 ;; Registers used:
  4456 ;;		status,2, status,0, pclath, cstack
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4466 ;;Total ram usage:        0 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; Hardware stack levels required when called: 1
  4469 ;; This function calls:
  4470 ;;		_displayClear
  4471 ;; This function is called by:
  4472 ;;		_displaySegments
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function _displaySix
  4478  0254                     _displaySix:
  4479  0254                     l1721:	
  4480                           ;incstack = 0
  4481                           ; Regs used in _displaySix: [status,2+status,0+pclath+cstack]
  4482                           
  4483                           
  4484                           ;main.c: 105:   displayClear();
  4485  0254  3182  2211  3182   	fcall	_displayClear
  4486  0257                     l1723:
  4487  0257  0022               	movlb	2	; select bank2
  4488  0258  128C               	bcf	12,5	;volatile
  4489  0259                     l1725:
  4490  0259  130E               	bcf	14,6	;volatile
  4491  025A                     l1727:
  4492  025A  138E               	bcf	14,7	;volatile
  4493  025B                     l1729:
  4494  025B  128E               	bcf	14,5	;volatile
  4495  025C                     l1731:
  4496  025C  120E               	bcf	14,4	;volatile
  4497  025D                     l1733:
  4498  025D  118E               	bcf	14,3	;volatile
  4499  025E                     l287:
  4500  025E  0008               	return
  4501  025F                     __end_of_displaySix:
  4502                           
  4503                           	psect	text8
  4504  0223                     __ptext8:	
  4505 ;; *************** function _displaySeven *****************
  4506 ;; Defined at:
  4507 ;;		line 113 in file "main.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		status,2, status,0, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;Total ram usage:        0 bytes
  4526 ;; Hardware stack levels used: 1
  4527 ;; Hardware stack levels required when called: 1
  4528 ;; This function calls:
  4529 ;;		_displayClear
  4530 ;; This function is called by:
  4531 ;;		_displaySegments
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _displaySeven
  4537  0223                     _displaySeven:
  4538  0223                     l1735:	
  4539                           ;incstack = 0
  4540                           ; Regs used in _displaySeven: [status,2+status,0+pclath+cstack]
  4541                           
  4542                           
  4543                           ;main.c: 114:   displayClear();
  4544  0223  3182  2211  3182   	fcall	_displayClear
  4545  0226                     l1737:
  4546  0226  0022               	movlb	2	; select bank2
  4547  0227  130E               	bcf	14,6	;volatile
  4548  0228                     l1739:
  4549  0228  128C               	bcf	12,5	;volatile
  4550  0229                     l1741:
  4551  0229  120C               	bcf	12,4	;volatile
  4552  022A                     l1743:
  4553  022A  128E               	bcf	14,5	;volatile
  4554  022B                     l298:
  4555  022B  0008               	return
  4556  022C                     __end_of_displaySeven:
  4557                           
  4558                           	psect	text9
  4559  0202                     __ptext9:	
  4560 ;; *************** function _displayOne *****************
  4561 ;; Defined at:
  4562 ;;		line 68 in file "main.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;		None
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  1    wreg      void 
  4569 ;; Registers used:
  4570 ;;		status,2, status,0, pclath, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;Total ram usage:        0 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 1
  4583 ;; This function calls:
  4584 ;;		_displayClear
  4585 ;; This function is called by:
  4586 ;;		_displaySegments
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _displayOne
  4592  0202                     _displayOne:
  4593  0202                     l1669:	
  4594                           ;incstack = 0
  4595                           ; Regs used in _displayOne: [status,2+status,0+pclath+cstack]
  4596                           
  4597                           
  4598                           ;main.c: 69:   displayClear();
  4599  0202  3182  2211  3182   	fcall	_displayClear
  4600  0205                     l1671:
  4601  0205  0022               	movlb	2	; select bank2
  4602  0206  120C               	bcf	12,4	;volatile
  4603  0207                     l1673:
  4604  0207  128E               	bcf	14,5	;volatile
  4605  0208                     l222:
  4606  0208  0008               	return
  4607  0209                     __end_of_displayOne:
  4608                           
  4609                           	psect	text10
  4610  0236                     __ptext10:	
  4611 ;; *************** function _displayNine *****************
  4612 ;; Defined at:
  4613 ;;		line 130 in file "main.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		status,2, status,0, pclath, cstack
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;Total ram usage:        0 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; Hardware stack levels required when called: 1
  4634 ;; This function calls:
  4635 ;;		_displayClear
  4636 ;; This function is called by:
  4637 ;;		_displaySegments
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function _displayNine
  4643  0236                     _displayNine:
  4644  0236                     l1761:	
  4645                           ;incstack = 0
  4646                           ; Regs used in _displayNine: [status,2+status,0+pclath+cstack]
  4647                           
  4648                           
  4649                           ;main.c: 131:   displayClear();
  4650  0236  3182  2211  3182   	fcall	_displayClear
  4651  0239                     l1763:
  4652  0239  0022               	movlb	2	; select bank2
  4653  023A  128C               	bcf	12,5	;volatile
  4654  023B                     l1765:
  4655  023B  120C               	bcf	12,4	;volatile
  4656  023C                     l1767:
  4657  023C  138E               	bcf	14,7	;volatile
  4658  023D                     l1769:
  4659  023D  130E               	bcf	14,6	;volatile
  4660  023E                     l1771:
  4661  023E  128E               	bcf	14,5	;volatile
  4662  023F                     l328:
  4663  023F  0008               	return
  4664  0240                     __end_of_displayNine:
  4665                           
  4666                           	psect	text11
  4667  021A                     __ptext11:	
  4668 ;; *************** function _displayFour *****************
  4669 ;; Defined at:
  4670 ;;		line 89 in file "main.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;		None
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;		None
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  1    wreg      void 
  4677 ;; Registers used:
  4678 ;;		status,2, status,0, pclath, cstack
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4688 ;;Total ram usage:        0 bytes
  4689 ;; Hardware stack levels used: 1
  4690 ;; Hardware stack levels required when called: 1
  4691 ;; This function calls:
  4692 ;;		_displayClear
  4693 ;; This function is called by:
  4694 ;;		_displaySegments
  4695 ;; This function uses a non-reentrant model
  4696 ;;
  4697                           
  4698                           
  4699                           ;psect for function _displayFour
  4700  021A                     _displayFour:
  4701  021A                     l1699:	
  4702                           ;incstack = 0
  4703                           ; Regs used in _displayFour: [status,2+status,0+pclath+cstack]
  4704                           
  4705                           
  4706                           ;main.c: 90:   displayClear();
  4707  021A  3182  2211  3182   	fcall	_displayClear
  4708  021D                     l1701:
  4709  021D  0022               	movlb	2	; select bank2
  4710  021E  130E               	bcf	14,6	;volatile
  4711  021F                     l1703:
  4712  021F  138E               	bcf	14,7	;volatile
  4713  0220                     l1705:
  4714  0220  120C               	bcf	12,4	;volatile
  4715  0221                     l1707:
  4716  0221  128E               	bcf	14,5	;volatile
  4717  0222                     l259:
  4718  0222  0008               	return
  4719  0223                     __end_of_displayFour:
  4720                           
  4721                           	psect	text12
  4722  022C                     __ptext12:	
  4723 ;; *************** function _displayFive *****************
  4724 ;; Defined at:
  4725 ;;		line 96 in file "main.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; Hardware stack levels required when called: 1
  4746 ;; This function calls:
  4747 ;;		_displayClear
  4748 ;; This function is called by:
  4749 ;;		_displaySegments
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           
  4754                           ;psect for function _displayFive
  4755  022C                     _displayFive:
  4756  022C                     l1709:	
  4757                           ;incstack = 0
  4758                           ; Regs used in _displayFive: [status,2+status,0+pclath+cstack]
  4759                           
  4760                           
  4761                           ;main.c: 97:   displayClear();
  4762  022C  3182  2211  3182   	fcall	_displayClear
  4763  022F                     l1711:
  4764  022F  0022               	movlb	2	; select bank2
  4765  0230  128C               	bcf	12,5	;volatile
  4766  0231                     l1713:
  4767  0231  130E               	bcf	14,6	;volatile
  4768  0232                     l1715:
  4769  0232  138E               	bcf	14,7	;volatile
  4770  0233                     l1717:
  4771  0233  128E               	bcf	14,5	;volatile
  4772  0234                     l1719:
  4773  0234  120E               	bcf	14,4	;volatile
  4774  0235                     l272:
  4775  0235  0008               	return
  4776  0236                     __end_of_displayFive:
  4777                           
  4778                           	psect	text13
  4779  026A                     __ptext13:	
  4780 ;; *************** function _displayEight *****************
  4781 ;; Defined at:
  4782 ;;		line 120 in file "main.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;		None
  4785 ;; Auto vars:     Size  Location     Type
  4786 ;;		None
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  1    wreg      void 
  4789 ;; Registers used:
  4790 ;;		status,2, status,0, pclath, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;Total ram usage:        0 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; Hardware stack levels required when called: 1
  4803 ;; This function calls:
  4804 ;;		_displayClear
  4805 ;; This function is called by:
  4806 ;;		_displaySegments
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           
  4811                           ;psect for function _displayEight
  4812  026A                     _displayEight:
  4813  026A                     l1745:	
  4814                           ;incstack = 0
  4815                           ; Regs used in _displayEight: [status,2+status,0+pclath+cstack]
  4816                           
  4817                           
  4818                           ;main.c: 121:   displayClear();
  4819  026A  3182  2211  3182   	fcall	_displayClear
  4820  026D                     l1747:
  4821  026D  0022               	movlb	2	; select bank2
  4822  026E  128C               	bcf	12,5	;volatile
  4823  026F                     l1749:
  4824  026F  120C               	bcf	12,4	;volatile
  4825  0270                     l1751:
  4826  0270  128E               	bcf	14,5	;volatile
  4827  0271                     l1753:
  4828  0271  120E               	bcf	14,4	;volatile
  4829  0272                     l1755:
  4830  0272  118E               	bcf	14,3	;volatile
  4831  0273                     l1757:
  4832  0273  130E               	bcf	14,6	;volatile
  4833  0274                     l1759:
  4834  0274  138E               	bcf	14,7	;volatile
  4835  0275                     l315:
  4836  0275  0008               	return
  4837  0276                     __end_of_displayEight:
  4838                           
  4839                           	psect	text14
  4840  0338                     __ptext14:	
  4841 ;; *************** function _displayRoll *****************
  4842 ;; Defined at:
  4843 ;;		line 207 in file "main.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  cnt             2    2[COMMON] int 
  4846 ;; Auto vars:     Size  Location     Type
  4847 ;;		None
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  1    wreg      void 
  4850 ;; Registers used:
  4851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;Total ram usage:        2 bytes
  4862 ;; Hardware stack levels used: 1
  4863 ;; Hardware stack levels required when called: 1
  4864 ;; This function calls:
  4865 ;;		_DELAY_milliseconds
  4866 ;;		_displayClear
  4867 ;; This function is called by:
  4868 ;;		_displayLotteryResult
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _displayRoll
  4874  0338                     _displayRoll:
  4875  0338                     l1841:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _displayRoll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4878                           
  4879                           
  4880                           ;main.c: 208:   displayClear();
  4881  0338  3182  2211  3183   	fcall	_displayClear
  4882                           
  4883                           ;main.c: 209:   switch(cnt){
  4884  033B  2B54               	goto	l1845
  4885  033C                     l375:	
  4886                           ;main.c: 211:       do { LATAbits.LATA5 = 0; } while(0);
  4887                           
  4888  033C  0022               	movlb	2	; select bank2
  4889  033D  128C               	bcf	12,5	;volatile
  4890  033E                     l377:	
  4891                           ;main.c: 212:       do { LATAbits.LATA4 = 0; } while(0);
  4892                           
  4893  033E  120C               	bcf	12,4	;volatile
  4894  033F  2B6D               	goto	l1847
  4895  0340                     l381:	
  4896                           ;main.c: 215:       do { LATAbits.LATA4 = 0; } while(0);
  4897                           
  4898  0340  0022               	movlb	2	; select bank2
  4899  0341  120C               	bcf	12,4	;volatile
  4900  0342                     l383:	
  4901                           ;main.c: 216:       do { LATCbits.LATC5 = 0; } while(0);
  4902                           
  4903  0342  128E               	bcf	14,5	;volatile
  4904  0343  2B6D               	goto	l1847
  4905  0344                     l386:	
  4906                           ;main.c: 219:       do { LATCbits.LATC5 = 0; } while(0);
  4907                           
  4908  0344  0022               	movlb	2	; select bank2
  4909  0345  128E               	bcf	14,5	;volatile
  4910  0346                     l388:	
  4911                           ;main.c: 220:       do { LATCbits.LATC4 = 0; } while(0);
  4912                           
  4913  0346  120E               	bcf	14,4	;volatile
  4914  0347  2B6D               	goto	l1847
  4915  0348                     l391:	
  4916                           ;main.c: 223:       do { LATCbits.LATC4 = 0; } while(0);
  4917                           
  4918  0348  0022               	movlb	2	; select bank2
  4919  0349  120E               	bcf	14,4	;volatile
  4920  034A                     l393:	
  4921                           ;main.c: 224:       do { LATCbits.LATC3 = 0; } while(0);
  4922                           
  4923  034A  118E               	bcf	14,3	;volatile
  4924  034B  2B6D               	goto	l1847
  4925  034C                     l396:	
  4926                           ;main.c: 227:       do { LATCbits.LATC3 = 0; } while(0);
  4927                           
  4928  034C  0022               	movlb	2	; select bank2
  4929  034D  118E               	bcf	14,3	;volatile
  4930  034E                     l398:	
  4931                           ;main.c: 228:       do { LATCbits.LATC6 = 0; } while(0);
  4932                           
  4933  034E  130E               	bcf	14,6	;volatile
  4934  034F  2B6D               	goto	l1847
  4935  0350                     l401:	
  4936                           ;main.c: 231:       do { LATCbits.LATC6 = 0; } while(0);
  4937                           
  4938  0350  0022               	movlb	2	; select bank2
  4939  0351  130E               	bcf	14,6	;volatile
  4940  0352                     l403:	
  4941                           ;main.c: 232:       do { LATAbits.LATA5 = 0; } while(0);
  4942                           
  4943  0352  128C               	bcf	12,5	;volatile
  4944  0353  2B6D               	goto	l1847
  4945  0354                     l1845:
  4946                           
  4947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4948                           ; Switch size 1, requested type "simple"
  4949                           ; Number of cases is 1, Range of values is 0 to 0
  4950                           ; switch strategies available:
  4951                           ; Name         Instructions Cycles
  4952                           ; simple_byte            4     3 (average)
  4953                           ; direct_byte            8     6 (fixed)
  4954                           ; jumptable            260     6 (fixed)
  4955                           ;	Chosen strategy is simple_byte
  4956  0354  0873               	movf	displayRoll@cnt+1,w
  4957  0355  3A00               	xorlw	0	; case 0
  4958  0356  1903               	skipnz
  4959  0357  2B59               	goto	l2215
  4960  0358  2B74               	goto	l406
  4961  0359                     l2215:
  4962                           
  4963                           ; Switch size 1, requested type "simple"
  4964                           ; Number of cases is 6, Range of values is 1 to 6
  4965                           ; switch strategies available:
  4966                           ; Name         Instructions Cycles
  4967                           ; simple_byte           19    10 (average)
  4968                           ; direct_byte           21     9 (fixed)
  4969                           ; jumptable            263     9 (fixed)
  4970                           ;	Chosen strategy is simple_byte
  4971  0359  0872               	movf	displayRoll@cnt,w
  4972  035A  3A01               	xorlw	1	; case 1
  4973  035B  1903               	skipnz
  4974  035C  2B3C               	goto	l375
  4975  035D  3A03               	xorlw	3	; case 2
  4976  035E  1903               	skipnz
  4977  035F  2B40               	goto	l381
  4978  0360  3A01               	xorlw	1	; case 3
  4979  0361  1903               	skipnz
  4980  0362  2B44               	goto	l386
  4981  0363  3A07               	xorlw	7	; case 4
  4982  0364  1903               	skipnz
  4983  0365  2B48               	goto	l391
  4984  0366  3A01               	xorlw	1	; case 5
  4985  0367  1903               	skipnz
  4986  0368  2B4C               	goto	l396
  4987  0369  3A03               	xorlw	3	; case 6
  4988  036A  1903               	skipnz
  4989  036B  2B50               	goto	l401
  4990  036C  2B74               	goto	l406
  4991  036D                     l1847:
  4992                           
  4993                           ;main.c: 238:   DELAY_milliseconds(1);
  4994  036D  3001               	movlw	1
  4995  036E  00F0               	movwf	DELAY_milliseconds@milliseconds
  4996  036F  3000               	movlw	0
  4997  0370  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  4998  0371  3182  2292  3183   	fcall	_DELAY_milliseconds
  4999  0374                     l406:
  5000  0374  0008               	return
  5001  0375                     __end_of_displayRoll:
  5002                           
  5003                           	psect	text15
  5004  0211                     __ptext15:	
  5005 ;; *************** function _displayClear *****************
  5006 ;; Defined at:
  5007 ;;		line 50 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;		None
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		None
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;Total ram usage:        0 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; This function calls:
  5028 ;;		Nothing
  5029 ;; This function is called by:
  5030 ;;		_displayZero
  5031 ;;		_displayOne
  5032 ;;		_displayTwo
  5033 ;;		_displayThree
  5034 ;;		_displayFour
  5035 ;;		_displayFive
  5036 ;;		_displaySix
  5037 ;;		_displaySeven
  5038 ;;		_displayEight
  5039 ;;		_displayNine
  5040 ;;		_displaySegments
  5041 ;;		_selectDIG
  5042 ;;		_displayRoll
  5043 ;;		_main
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           
  5048                           ;psect for function _displayClear
  5049  0211                     _displayClear:
  5050  0211                     l186:	
  5051                           ;incstack = 0
  5052                           ; Regs used in _displayClear: []
  5053                           ;main.c: 51:   do { LATAbits.LATA5 = 1; } while(0);
  5054                           
  5055  0211  0022               	movlb	2	; select bank2
  5056  0212  168C               	bsf	12,5	;volatile
  5057  0213                     l188:	
  5058                           ;main.c: 52:   do { LATAbits.LATA4 = 1; } while(0);
  5059                           
  5060  0213  160C               	bsf	12,4	;volatile
  5061  0214                     l190:	
  5062                           ;main.c: 53:   do { LATCbits.LATC5 = 1; } while(0);
  5063                           
  5064  0214  168E               	bsf	14,5	;volatile
  5065  0215                     l192:	
  5066                           ;main.c: 54:   do { LATCbits.LATC4 = 1; } while(0);
  5067                           
  5068  0215  160E               	bsf	14,4	;volatile
  5069  0216                     l194:	
  5070                           ;main.c: 55:   do { LATCbits.LATC3 = 1; } while(0);
  5071                           
  5072  0216  158E               	bsf	14,3	;volatile
  5073  0217                     l196:	
  5074                           ;main.c: 56:   do { LATCbits.LATC6 = 1; } while(0);
  5075                           
  5076  0217  170E               	bsf	14,6	;volatile
  5077  0218                     l198:	
  5078                           ;main.c: 57:   do { LATCbits.LATC7 = 1; } while(0);
  5079                           
  5080  0218  178E               	bsf	14,7	;volatile
  5081  0219                     l200:
  5082  0219  0008               	return
  5083  021A                     __end_of_displayClear:
  5084                           
  5085                           	psect	text16
  5086  0292                     __ptext16:	
  5087 ;; *************** function _DELAY_milliseconds *****************
  5088 ;; Defined at:
  5089 ;;		line 38 in file "mcc_generated_files/delay.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  milliseconds    2    0[COMMON] unsigned short 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;Total ram usage:        2 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; This function calls:
  5110 ;;		Nothing
  5111 ;; This function is called by:
  5112 ;;		_displaySegments
  5113 ;;		_displayRoll
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           
  5118                           ;psect for function _DELAY_milliseconds
  5119  0292                     _DELAY_milliseconds:
  5120  0292                     l1773:	
  5121                           ;incstack = 0
  5122                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
  5123                           
  5124                           
  5125                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5126  0292  2A97               	goto	l1777
  5127  0293                     l1775:
  5128                           
  5129                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(500000/4000.0)));
  5130  0293  3029               	movlw	41
  5131  0294                     u1347:
  5132  0294  0B89               	decfsz	9,f
  5133  0295  2A94               	goto	u1347
  5134  0296  3200               	nop2
  5135  0297                     l1777:
  5136                           
  5137                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5138  0297  3001               	movlw	1
  5139  0298  02F0               	subwf	DELAY_milliseconds@milliseconds,f
  5140  0299  3000               	movlw	0
  5141  029A  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
  5142  029B  0A70               	incf	DELAY_milliseconds@milliseconds,w
  5143  029C  1D03               	skipz
  5144  029D  2AA2               	goto	u701
  5145  029E  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
  5146  029F  1D03               	btfss	3,2
  5147  02A0  2AA2               	goto	u701
  5148  02A1  2AA3               	goto	u700
  5149  02A2                     u701:
  5150  02A2  2A93               	goto	l1775
  5151  02A3                     u700:
  5152  02A3                     l480:
  5153  02A3  0008               	return
  5154  02A4                     __end_of_DELAY_milliseconds:
  5155                           
  5156                           	psect	text17
  5157  0375                     __ptext17:	
  5158 ;; *************** function ___awmod *****************
  5159 ;; Defined at:
  5160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  divisor         2    9[COMMON] int 
  5163 ;;  dividend        2   11[COMMON] int 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  sign            1    1[BANK0 ] unsigned char 
  5166 ;;  counter         1    0[BANK0 ] unsigned char 
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2    9[COMMON] int 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5180 ;;Total ram usage:        7 bytes
  5181 ;; Hardware stack levels used: 1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_displayLotteryResult
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           
  5190                           ;psect for function ___awmod
  5191  0375                     ___awmod:
  5192  0375                     l1897:	
  5193                           ;incstack = 0
  5194                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5195                           
  5196  0375  0020               	movlb	0	; select bank0
  5197  0376  01A1               	clrf	___awmod@sign
  5198  0377                     l1899:
  5199  0377  1FFC               	btfss	___awmod@dividend+1,7
  5200  0378  2B7A               	goto	u811
  5201  0379  2B7B               	goto	u810
  5202  037A                     u811:
  5203  037A  2B82               	goto	l1905
  5204  037B                     u810:
  5205  037B                     l1901:
  5206  037B  09FB               	comf	___awmod@dividend,f
  5207  037C  09FC               	comf	___awmod@dividend+1,f
  5208  037D  0AFB               	incf	___awmod@dividend,f
  5209  037E  1903               	skipnz
  5210  037F  0AFC               	incf	___awmod@dividend+1,f
  5211  0380                     l1903:
  5212  0380  01A1               	clrf	___awmod@sign
  5213  0381  0AA1               	incf	___awmod@sign,f
  5214  0382                     l1905:
  5215  0382  1FFA               	btfss	___awmod@divisor+1,7
  5216  0383  2B85               	goto	u821
  5217  0384  2B86               	goto	u820
  5218  0385                     u821:
  5219  0385  2B8B               	goto	l1909
  5220  0386                     u820:
  5221  0386                     l1907:
  5222  0386  09F9               	comf	___awmod@divisor,f
  5223  0387  09FA               	comf	___awmod@divisor+1,f
  5224  0388  0AF9               	incf	___awmod@divisor,f
  5225  0389  1903               	skipnz
  5226  038A  0AFA               	incf	___awmod@divisor+1,f
  5227  038B                     l1909:
  5228  038B  0879               	movf	___awmod@divisor,w
  5229  038C  047A               	iorwf	___awmod@divisor+1,w
  5230  038D  1903               	btfsc	3,2
  5231  038E  2B90               	goto	u831
  5232  038F  2B91               	goto	u830
  5233  0390                     u831:
  5234  0390  2BBA               	goto	l1927
  5235  0391                     u830:
  5236  0391                     l1911:
  5237  0391  01A0               	clrf	___awmod@counter
  5238  0392  0AA0               	incf	___awmod@counter,f
  5239  0393  2B9D               	goto	l1917
  5240  0394                     l1913:
  5241  0394  3001               	movlw	1
  5242  0395                     u845:
  5243  0395  35F9               	lslf	___awmod@divisor,f
  5244  0396  0DFA               	rlf	___awmod@divisor+1,f
  5245  0397  0B89               	decfsz	9,f
  5246  0398  2B95               	goto	u845
  5247  0399                     l1915:
  5248  0399  3001               	movlw	1
  5249  039A  00FD               	movwf	??___awmod
  5250  039B  087D               	movf	??___awmod,w
  5251  039C  07A0               	addwf	___awmod@counter,f
  5252  039D                     l1917:
  5253  039D  1FFA               	btfss	___awmod@divisor+1,7
  5254  039E  2BA0               	goto	u851
  5255  039F  2BA1               	goto	u850
  5256  03A0                     u851:
  5257  03A0  2B94               	goto	l1913
  5258  03A1                     u850:
  5259  03A1                     l1919:
  5260  03A1  087A               	movf	___awmod@divisor+1,w
  5261  03A2  027C               	subwf	___awmod@dividend+1,w
  5262  03A3  1D03               	skipz
  5263  03A4  2BA7               	goto	u865
  5264  03A5  0879               	movf	___awmod@divisor,w
  5265  03A6  027B               	subwf	___awmod@dividend,w
  5266  03A7                     u865:
  5267  03A7  1C03               	skipc
  5268  03A8  2BAA               	goto	u861
  5269  03A9  2BAB               	goto	u860
  5270  03AA                     u861:
  5271  03AA  2BAF               	goto	l1923
  5272  03AB                     u860:
  5273  03AB                     l1921:
  5274  03AB  0879               	movf	___awmod@divisor,w
  5275  03AC  02FB               	subwf	___awmod@dividend,f
  5276  03AD  087A               	movf	___awmod@divisor+1,w
  5277  03AE  3BFC               	subwfb	___awmod@dividend+1,f
  5278  03AF                     l1923:
  5279  03AF  3001               	movlw	1
  5280  03B0                     u875:
  5281  03B0  36FA               	lsrf	___awmod@divisor+1,f
  5282  03B1  0CF9               	rrf	___awmod@divisor,f
  5283  03B2  0B89               	decfsz	9,f
  5284  03B3  2BB0               	goto	u875
  5285  03B4                     l1925:
  5286  03B4  3001               	movlw	1
  5287  03B5  02A0               	subwf	___awmod@counter,f
  5288  03B6  1D03               	btfss	3,2
  5289  03B7  2BB9               	goto	u881
  5290  03B8  2BBA               	goto	u880
  5291  03B9                     u881:
  5292  03B9  2BA1               	goto	l1919
  5293  03BA                     u880:
  5294  03BA                     l1927:
  5295  03BA  0821               	movf	___awmod@sign,w
  5296  03BB  1903               	btfsc	3,2
  5297  03BC  2BBE               	goto	u891
  5298  03BD  2BBF               	goto	u890
  5299  03BE                     u891:
  5300  03BE  2BC4               	goto	l1931
  5301  03BF                     u890:
  5302  03BF                     l1929:
  5303  03BF  09FB               	comf	___awmod@dividend,f
  5304  03C0  09FC               	comf	___awmod@dividend+1,f
  5305  03C1  0AFB               	incf	___awmod@dividend,f
  5306  03C2  1903               	skipnz
  5307  03C3  0AFC               	incf	___awmod@dividend+1,f
  5308  03C4                     l1931:
  5309  03C4  087C               	movf	___awmod@dividend+1,w
  5310  03C5  00FA               	movwf	?___awmod+1
  5311  03C6  087B               	movf	___awmod@dividend,w
  5312  03C7  00F9               	movwf	?___awmod
  5313  03C8                     l723:
  5314  03C8  0008               	return
  5315  03C9                     __end_of___awmod:
  5316                           
  5317                           	psect	text18
  5318  0422                     __ptext18:	
  5319 ;; *************** function ___awdiv *****************
  5320 ;; Defined at:
  5321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  divisor         2    0[COMMON] int 
  5324 ;;  dividend        2    2[COMMON] int 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  quotient        2    7[COMMON] int 
  5327 ;;  sign            1    6[COMMON] unsigned char 
  5328 ;;  counter         1    5[COMMON] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2    0[COMMON] int 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:        9 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_displayLotteryResult
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           
  5352                           ;psect for function ___awdiv
  5353  0422                     ___awdiv:
  5354  0422                     l1853:	
  5355                           ;incstack = 0
  5356                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5357                           
  5358  0422  01F6               	clrf	___awdiv@sign
  5359  0423                     l1855:
  5360  0423  1FF1               	btfss	___awdiv@divisor+1,7
  5361  0424  2C26               	goto	u711
  5362  0425  2C27               	goto	u710
  5363  0426                     u711:
  5364  0426  2C2E               	goto	l1861
  5365  0427                     u710:
  5366  0427                     l1857:
  5367  0427  09F0               	comf	___awdiv@divisor,f
  5368  0428  09F1               	comf	___awdiv@divisor+1,f
  5369  0429  0AF0               	incf	___awdiv@divisor,f
  5370  042A  1903               	skipnz
  5371  042B  0AF1               	incf	___awdiv@divisor+1,f
  5372  042C                     l1859:
  5373  042C  01F6               	clrf	___awdiv@sign
  5374  042D  0AF6               	incf	___awdiv@sign,f
  5375  042E                     l1861:
  5376  042E  1FF3               	btfss	___awdiv@dividend+1,7
  5377  042F  2C31               	goto	u721
  5378  0430  2C32               	goto	u720
  5379  0431                     u721:
  5380  0431  2C3B               	goto	l1867
  5381  0432                     u720:
  5382  0432                     l1863:
  5383  0432  09F2               	comf	___awdiv@dividend,f
  5384  0433  09F3               	comf	___awdiv@dividend+1,f
  5385  0434  0AF2               	incf	___awdiv@dividend,f
  5386  0435  1903               	skipnz
  5387  0436  0AF3               	incf	___awdiv@dividend+1,f
  5388  0437                     l1865:
  5389  0437  3001               	movlw	1
  5390  0438  00F4               	movwf	??___awdiv
  5391  0439  0874               	movf	??___awdiv,w
  5392  043A  06F6               	xorwf	___awdiv@sign,f
  5393  043B                     l1867:
  5394  043B  01F7               	clrf	___awdiv@quotient
  5395  043C  01F8               	clrf	___awdiv@quotient+1
  5396  043D                     l1869:
  5397  043D  0870               	movf	___awdiv@divisor,w
  5398  043E  0471               	iorwf	___awdiv@divisor+1,w
  5399  043F  1903               	btfsc	3,2
  5400  0440  2C42               	goto	u731
  5401  0441  2C43               	goto	u730
  5402  0442                     u731:
  5403  0442  2C72               	goto	l1889
  5404  0443                     u730:
  5405  0443                     l1871:
  5406  0443  01F5               	clrf	___awdiv@counter
  5407  0444  0AF5               	incf	___awdiv@counter,f
  5408  0445  2C4F               	goto	l1877
  5409  0446                     l1873:
  5410  0446  3001               	movlw	1
  5411  0447                     u745:
  5412  0447  35F0               	lslf	___awdiv@divisor,f
  5413  0448  0DF1               	rlf	___awdiv@divisor+1,f
  5414  0449  0B89               	decfsz	9,f
  5415  044A  2C47               	goto	u745
  5416  044B                     l1875:
  5417  044B  3001               	movlw	1
  5418  044C  00F4               	movwf	??___awdiv
  5419  044D  0874               	movf	??___awdiv,w
  5420  044E  07F5               	addwf	___awdiv@counter,f
  5421  044F                     l1877:
  5422  044F  1FF1               	btfss	___awdiv@divisor+1,7
  5423  0450  2C52               	goto	u751
  5424  0451  2C53               	goto	u750
  5425  0452                     u751:
  5426  0452  2C46               	goto	l1873
  5427  0453                     u750:
  5428  0453                     l1879:
  5429  0453  3001               	movlw	1
  5430  0454                     u765:
  5431  0454  35F7               	lslf	___awdiv@quotient,f
  5432  0455  0DF8               	rlf	___awdiv@quotient+1,f
  5433  0456  0B89               	decfsz	9,f
  5434  0457  2C54               	goto	u765
  5435  0458  0871               	movf	___awdiv@divisor+1,w
  5436  0459  0273               	subwf	___awdiv@dividend+1,w
  5437  045A  1D03               	skipz
  5438  045B  2C5E               	goto	u775
  5439  045C  0870               	movf	___awdiv@divisor,w
  5440  045D  0272               	subwf	___awdiv@dividend,w
  5441  045E                     u775:
  5442  045E  1C03               	skipc
  5443  045F  2C61               	goto	u771
  5444  0460  2C62               	goto	u770
  5445  0461                     u771:
  5446  0461  2C67               	goto	l1885
  5447  0462                     u770:
  5448  0462                     l1881:
  5449  0462  0870               	movf	___awdiv@divisor,w
  5450  0463  02F2               	subwf	___awdiv@dividend,f
  5451  0464  0871               	movf	___awdiv@divisor+1,w
  5452  0465  3BF3               	subwfb	___awdiv@dividend+1,f
  5453  0466                     l1883:
  5454  0466  1477               	bsf	___awdiv@quotient,0
  5455  0467                     l1885:
  5456  0467  3001               	movlw	1
  5457  0468                     u785:
  5458  0468  36F1               	lsrf	___awdiv@divisor+1,f
  5459  0469  0CF0               	rrf	___awdiv@divisor,f
  5460  046A  0B89               	decfsz	9,f
  5461  046B  2C68               	goto	u785
  5462  046C                     l1887:
  5463  046C  3001               	movlw	1
  5464  046D  02F5               	subwf	___awdiv@counter,f
  5465  046E  1D03               	btfss	3,2
  5466  046F  2C71               	goto	u791
  5467  0470  2C72               	goto	u790
  5468  0471                     u791:
  5469  0471  2C53               	goto	l1879
  5470  0472                     u790:
  5471  0472                     l1889:
  5472  0472  0876               	movf	___awdiv@sign,w
  5473  0473  1903               	btfsc	3,2
  5474  0474  2C76               	goto	u801
  5475  0475  2C77               	goto	u800
  5476  0476                     u801:
  5477  0476  2C7C               	goto	l1893
  5478  0477                     u800:
  5479  0477                     l1891:
  5480  0477  09F7               	comf	___awdiv@quotient,f
  5481  0478  09F8               	comf	___awdiv@quotient+1,f
  5482  0479  0AF7               	incf	___awdiv@quotient,f
  5483  047A  1903               	skipnz
  5484  047B  0AF8               	incf	___awdiv@quotient+1,f
  5485  047C                     l1893:
  5486  047C  0878               	movf	___awdiv@quotient+1,w
  5487  047D  00F1               	movwf	?___awdiv+1
  5488  047E  0877               	movf	___awdiv@quotient,w
  5489  047F  00F0               	movwf	?___awdiv
  5490  0480                     l710:
  5491  0480  0008               	return
  5492  0481                     __end_of___awdiv:
  5493                           
  5494                           	psect	text19
  5495  0276                     __ptext19:	
  5496 ;; *************** function _SYSTEM_Initialize *****************
  5497 ;; Defined at:
  5498 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2, status,0, pclath, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used: 1
  5518 ;; Hardware stack levels required when called: 2
  5519 ;; This function calls:
  5520 ;;		_EUSART_Initialize
  5521 ;;		_OSCILLATOR_Initialize
  5522 ;;		_PIN_MANAGER_Initialize
  5523 ;;		_WDT_Initialize
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _SYSTEM_Initialize
  5531  0276                     _SYSTEM_Initialize:
  5532  0276                     l1947:	
  5533                           ;incstack = 0
  5534                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5535                           
  5536                           
  5537                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5538  0276  3183  2307  3182   	fcall	_PIN_MANAGER_Initialize
  5539                           
  5540                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5541  0279  3182  2209  3182   	fcall	_OSCILLATOR_Initialize
  5542                           
  5543                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5544  027C  3181  21E7  3182   	fcall	_WDT_Initialize
  5545                           
  5546                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  5547  027F  3182  22C0  3182   	fcall	_EUSART_Initialize
  5548  0282                     l163:
  5549  0282  0008               	return
  5550  0283                     __end_of_SYSTEM_Initialize:
  5551                           
  5552                           	psect	text20
  5553  01E7                     __ptext20:	
  5554 ;; *************** function _WDT_Initialize *****************
  5555 ;; Defined at:
  5556 ;;		line 71 in file "mcc_generated_files/mcc.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_SYSTEM_Initialize
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           
  5584                           ;psect for function _WDT_Initialize
  5585  01E7                     _WDT_Initialize:
  5586  01E7                     l1197:	
  5587                           ;incstack = 0
  5588                           ; Regs used in _WDT_Initialize: [wreg]
  5589                           
  5590                           
  5591                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  5592  01E7  3016               	movlw	22
  5593  01E8  0021               	movlb	1	; select bank1
  5594  01E9  0097               	movwf	23	;volatile
  5595  01EA                     l169:
  5596  01EA  0008               	return
  5597  01EB                     __end_of_WDT_Initialize:
  5598                           
  5599                           	psect	text21
  5600  0307                     __ptext21:	
  5601 ;; *************** function _PIN_MANAGER_Initialize *****************
  5602 ;; Defined at:
  5603 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;		None
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;		None
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, status,2
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;Total ram usage:        0 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; This function calls:
  5624 ;;		Nothing
  5625 ;; This function is called by:
  5626 ;;		_SYSTEM_Initialize
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           
  5631                           ;psect for function _PIN_MANAGER_Initialize
  5632  0307                     _PIN_MANAGER_Initialize:
  5633  0307                     l1157:	
  5634                           ;incstack = 0
  5635                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5636                           
  5637                           
  5638                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5639  0307  0022               	movlb	2	; select bank2
  5640  0308  018C               	clrf	12	;volatile
  5641                           
  5642                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5643  0309  018D               	clrf	13	;volatile
  5644                           
  5645                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5646  030A  018E               	clrf	14	;volatile
  5647  030B                     l1159:
  5648                           
  5649                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  5650  030B  3007               	movlw	7
  5651  030C  0021               	movlb	1	; select bank1
  5652  030D  008C               	movwf	12	;volatile
  5653  030E                     l1161:
  5654                           
  5655                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
  5656  030E  3020               	movlw	32
  5657  030F  008D               	movwf	13	;volatile
  5658  0310                     l1163:
  5659                           
  5660                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x01;
  5661  0310  3001               	movlw	1
  5662  0311  008E               	movwf	14	;volatile
  5663  0312                     l1165:
  5664                           
  5665                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5666  0312  30CF               	movlw	207
  5667  0313  0023               	movlb	3	; select bank3
  5668  0314  008E               	movwf	14	;volatile
  5669  0315                     l1167:
  5670                           
  5671                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5672  0315  30C0               	movlw	192
  5673  0316  008D               	movwf	13	;volatile
  5674  0317                     l1169:
  5675                           
  5676                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5677  0317  3017               	movlw	23
  5678  0318  008C               	movwf	12	;volatile
  5679                           
  5680                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5681  0319  0024               	movlb	4	; select bank4
  5682  031A  018D               	clrf	13	;volatile
  5683                           
  5684                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5685  031B  018C               	clrf	12	;volatile
  5686                           
  5687                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5688  031C  018E               	clrf	14	;volatile
  5689  031D                     l1171:
  5690                           
  5691                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5692  031D  0021               	movlb	1	; select bank1
  5693  031E  1795               	bsf	21,7	;volatile
  5694                           
  5695                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5696  031F  0025               	movlb	5	; select bank5
  5697  0320  018C               	clrf	12	;volatile
  5698                           
  5699                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5700  0321  018D               	clrf	13	;volatile
  5701                           
  5702                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5703  0322  018E               	clrf	14	;volatile
  5704  0323                     l1173:
  5705                           
  5706                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5707  0323  3037               	movlw	55
  5708  0324  0026               	movlb	6	; select bank6
  5709  0325  008C               	movwf	12	;volatile
  5710  0326                     l1175:
  5711                           
  5712                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5713  0326  30F0               	movlw	240
  5714  0327  008D               	movwf	13	;volatile
  5715  0328                     l1177:
  5716                           
  5717                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5718  0328  30FF               	movlw	255
  5719  0329  008E               	movwf	14	;volatile
  5720  032A                     l1179:
  5721                           
  5722                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5723  032A  303F               	movlw	63
  5724  032B  0027               	movlb	7	; select bank7
  5725  032C  008C               	movwf	12	;volatile
  5726  032D                     l1181:
  5727                           
  5728                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5729  032D  30F0               	movlw	240
  5730  032E  008D               	movwf	13	;volatile
  5731  032F                     l1183:
  5732                           
  5733                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5734  032F  30FF               	movlw	255
  5735  0330  008E               	movwf	14	;volatile
  5736  0331                     l1185:
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x0D;
  5739  0331  300D               	movlw	13
  5740  0332  003C               	movlb	28	; select bank28
  5741  0333  00A4               	movwf	36	;volatile
  5742  0334                     l1187:
  5743                           
  5744                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x16;
  5745  0334  3016               	movlw	22
  5746  0335  003D               	movlb	29	; select bank29
  5747  0336  009C               	movwf	28	;volatile
  5748  0337                     l139:
  5749  0337  0008               	return
  5750  0338                     __end_of_PIN_MANAGER_Initialize:
  5751                           
  5752                           	psect	text22
  5753  0209                     __ptext22:	
  5754 ;; *************** function _OSCILLATOR_Initialize *****************
  5755 ;; Defined at:
  5756 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;		None
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, status,2
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;Total ram usage:        0 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; This function calls:
  5777 ;;		Nothing
  5778 ;; This function is called by:
  5779 ;;		_SYSTEM_Initialize
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _OSCILLATOR_Initialize
  5785  0209                     _OSCILLATOR_Initialize:
  5786  0209                     l1189:	
  5787                           ;incstack = 0
  5788                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5789                           
  5790                           
  5791                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x38;
  5792  0209  3038               	movlw	56
  5793  020A  0021               	movlb	1	; select bank1
  5794  020B  0099               	movwf	25	;volatile
  5795  020C                     l1191:
  5796                           
  5797                           ;mcc_generated_files/mcc.c: 64:     OSCSTAT = 0x00;
  5798  020C  019A               	clrf	26	;volatile
  5799  020D                     l1193:
  5800                           
  5801                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  5802  020D  0198               	clrf	24	;volatile
  5803  020E                     l1195:
  5804                           
  5805                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  5806  020E  0024               	movlb	4	; select bank4
  5807  020F  019D               	clrf	29	;volatile
  5808  0210                     l166:
  5809  0210  0008               	return
  5810  0211                     __end_of_OSCILLATOR_Initialize:
  5811                           
  5812                           	psect	text23
  5813  02C0                     __ptext23:	
  5814 ;; *************** function _EUSART_Initialize *****************
  5815 ;; Defined at:
  5816 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5834 ;;Total ram usage:        0 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 1
  5837 ;; This function calls:
  5838 ;;		_EUSART_SetErrorHandler
  5839 ;;		_EUSART_SetFramingErrorHandler
  5840 ;;		_EUSART_SetOverrunErrorHandler
  5841 ;; This function is called by:
  5842 ;;		_SYSTEM_Initialize
  5843 ;; This function uses a non-reentrant model
  5844 ;;
  5845                           
  5846                           
  5847                           ;psect for function _EUSART_Initialize
  5848  02C0                     _EUSART_Initialize:
  5849  02C0                     l1779:	
  5850                           ;incstack = 0
  5851                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5852                           
  5853                           
  5854                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  5855  02C0  3008               	movlw	8
  5856  02C1  0023               	movlb	3	; select bank3
  5857  02C2  009F               	movwf	31	;volatile
  5858                           
  5859                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  5860  02C3  3090               	movlw	144
  5861  02C4  009D               	movwf	29	;volatile
  5862                           
  5863                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  5864  02C5  3024               	movlw	36
  5865  02C6  009E               	movwf	30	;volatile
  5866                           
  5867                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x0C;
  5868  02C7  300C               	movlw	12
  5869  02C8  009B               	movwf	27	;volatile
  5870  02C9                     l1781:
  5871                           
  5872                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5873  02C9  019C               	clrf	28	;volatile
  5874  02CA                     l1783:
  5875                           
  5876                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5877  02CA  3000               	movlw	0
  5878  02CB  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5879  02CC  3000               	movlw	0
  5880  02CD  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5881  02CE  3181  21F6  3182   	fcall	_EUSART_SetFramingErrorHandler
  5882  02D1                     l1785:
  5883                           
  5884                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5885  02D1  3000               	movlw	0
  5886  02D2  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5887  02D3  3000               	movlw	0
  5888  02D4  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5889  02D5  3181  21FC  3182   	fcall	_EUSART_SetOverrunErrorHandler
  5890  02D8                     l1787:
  5891                           
  5892                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5893  02D8  3000               	movlw	0
  5894  02D9  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5895  02DA  3000               	movlw	0
  5896  02DB  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5897  02DC  3181  21F0  3182   	fcall	_EUSART_SetErrorHandler
  5898  02DF                     l1789:
  5899                           
  5900                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5901  02DF  0020               	movlb	0	; select bank0
  5902  02E0  01D7               	clrf	_eusartRxLastError	;volatile
  5903  02E1                     l43:
  5904  02E1  0008               	return
  5905  02E2                     __end_of_EUSART_Initialize:
  5906                           
  5907                           	psect	text24
  5908  01FC                     __ptext24:	
  5909 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5910 ;; Defined at:
  5911 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5914 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;		None
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      void 
  5919 ;; Registers used:
  5920 ;;		wreg
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;Total ram usage:        2 bytes
  5931 ;; Hardware stack levels used: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_EUSART_Initialize
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           
  5940                           ;psect for function _EUSART_SetOverrunErrorHandler
  5941  01FC                     _EUSART_SetOverrunErrorHandler:
  5942  01FC                     l1651:	
  5943                           ;incstack = 0
  5944                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  5945                           
  5946                           
  5947                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  5948  01FC  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  5949  01FD  0020               	movlb	0	; select bank0
  5950  01FE  00D4               	movwf	_EUSART_OverrunErrorHandler+1
  5951  01FF  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  5952  0200  00D3               	movwf	_EUSART_OverrunErrorHandler
  5953  0201                     l85:
  5954  0201  0008               	return
  5955  0202                     __end_of_EUSART_SetOverrunErrorHandler:
  5956                           
  5957                           	psect	text25
  5958  01F6                     __ptext25:	
  5959 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  5960 ;; Defined at:
  5961 ;;		line 157 in file "mcc_generated_files/eusart.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5964 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;Total ram usage:        2 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_EUSART_Initialize
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           
  5990                           ;psect for function _EUSART_SetFramingErrorHandler
  5991  01F6                     _EUSART_SetFramingErrorHandler:
  5992  01F6                     l1649:	
  5993                           ;incstack = 0
  5994                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  5995                           
  5996                           
  5997                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  5998  01F6  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  5999  01F7  0020               	movlb	0	; select bank0
  6000  01F8  00D6               	movwf	_EUSART_FramingErrorHandler+1
  6001  01F9  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6002  01FA  00D5               	movwf	_EUSART_FramingErrorHandler
  6003  01FB                     l82:
  6004  01FB  0008               	return
  6005  01FC                     __end_of_EUSART_SetFramingErrorHandler:
  6006                           
  6007                           	psect	text26
  6008  01F0                     __ptext26:	
  6009 ;; *************** function _EUSART_SetErrorHandler *****************
  6010 ;; Defined at:
  6011 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6014 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_EUSART_Initialize
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function _EUSART_SetErrorHandler
  6041  01F0                     _EUSART_SetErrorHandler:
  6042  01F0                     l1653:	
  6043                           ;incstack = 0
  6044                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6045                           
  6046                           
  6047                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6048  01F0  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6049  01F1  0020               	movlb	0	; select bank0
  6050  01F2  00D2               	movwf	_EUSART_ErrorHandler+1
  6051  01F3  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6052  01F4  00D1               	movwf	_EUSART_ErrorHandler
  6053  01F5                     l88:
  6054  01F5  0008               	return
  6055  01F6                     __end_of_EUSART_SetErrorHandler:
  6056                           
  6057                           	psect	text27
  6058  01EB                     __ptext27:	
  6059 ;; *************** function _EUSART_is_rx_ready *****************
  6060 ;; Defined at:
  6061 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      _Bool 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           
  6089                           ;psect for function _EUSART_is_rx_ready
  6090  01EB                     _EUSART_is_rx_ready:
  6091  01EB                     l1343:	
  6092                           ;incstack = 0
  6093                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6094                           
  6095                           
  6096                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6097  01EB  0020               	movlb	0	; select bank0
  6098  01EC  0E11               	swapf	17,w	;volatile
  6099  01ED  0C89               	rrf	9,f
  6100  01EE  3901               	andlw	1
  6101  01EF                     l51:
  6102  01EF  0008               	return
  6103  01F0                     __end_of_EUSART_is_rx_ready:
  6104                           
  6105                           	psect	text28
  6106  0283                     __ptext28:	
  6107 ;; *************** function _EUSART_Read *****************
  6108 ;; Defined at:
  6109 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;		None
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      unsigned char 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6127 ;;Total ram usage:        0 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		_main
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           
  6137                           ;psect for function _EUSART_Read
  6138  0283                     _EUSART_Read:
  6139  0283                     l1935:	
  6140                           ;incstack = 0
  6141                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6142                           
  6143  0283                     l60:	
  6144                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6145                           
  6146                           
  6147                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6148  0283  0020               	movlb	0	; select bank0
  6149  0284  1E91               	btfss	17,5	;volatile
  6150  0285  2A87               	goto	u901
  6151  0286  2A88               	goto	u900
  6152  0287                     u901:
  6153  0287  2A83               	goto	l60
  6154  0288                     u900:
  6155  0288                     l1937:
  6156                           
  6157                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6158  0288  01D7               	clrf	_eusartRxLastError	;volatile
  6159  0289                     l1939:
  6160                           
  6161                           ;mcc_generated_files/eusart.c: 121:     if(1 == RC1STAbits.OERR)
  6162  0289  0023               	movlb	3	; select bank3
  6163  028A  1C9D               	btfss	29,1	;volatile
  6164  028B  2A8D               	goto	u911
  6165  028C  2A8E               	goto	u910
  6166  028D                     u911:
  6167  028D  2A90               	goto	l1943
  6168  028E                     u910:
  6169  028E                     l1941:
  6170                           
  6171                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RC1
      +                          STAbits.CREN = 0;
  6172  028E  121D               	bcf	29,4	;volatile
  6173                           
  6174                           ;mcc_generated_files/eusart.c: 126:         RC1STAbits.CREN = 1;
  6175  028F  161D               	bsf	29,4	;volatile
  6176  0290                     l1943:
  6177                           
  6178                           ;mcc_generated_files/eusart.c: 129:     return RC1REG;
  6179  0290  0819               	movf	25,w	;volatile
  6180  0291                     l64:
  6181  0291  0008               	return
  6182  0292                     __end_of_EUSART_Read:
  6183  007E                     btemp	set	126	;btemp
  6184  007E                     wtemp0	set	126
  6185                           
  6186                           	psect	config
  6187                           
  6188                           ;Config register CONFIG1 @ 0x8007
  6189                           ;	Oscillator Selection Bits
  6190                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6191                           ;	Watchdog Timer Enable
  6192                           ;	WDTE = OFF, WDT disabled
  6193                           ;	Power-up Timer Enable
  6194                           ;	PWRTE = OFF, PWRT disabled
  6195                           ;	MCLR Pin Function Select
  6196                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6197                           ;	Flash Program Memory Code Protection
  6198                           ;	CP = OFF, Program memory code protection is disabled
  6199                           ;	Brown-out Reset Enable
  6200                           ;	BOREN = ON, Brown-out Reset enabled
  6201                           ;	Clock Out Enable
  6202                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6203                           ;	Internal/External Switchover Mode
  6204                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6205                           ;	Fail-Safe Clock Monitor Enable
  6206                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6207  8007                     	org	32775
  6208  8007  3FE4               	dw	16356
  6209                           
  6210                           ;Config register CONFIG2 @ 0x8008
  6211                           ;	Flash Memory Self-Write Protection
  6212                           ;	WRT = OFF, Write protection off
  6213                           ;	Peripheral Pin Select one-way control
  6214                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6215                           ;	Zero-cross detect disable
  6216                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  6217                           ;	Phase Lock Loop enable
  6218                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6219                           ;	Stack Overflow/Underflow Reset Enable
  6220                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6221                           ;	Brown-out Reset Voltage Selection
  6222                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6223                           ;	Low-Power Brown Out Reset
  6224                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6225                           ;	Low-Voltage Programming Enable
  6226                           ;	LVP = ON, Low-voltage programming enabled
  6227  8008                     	org	32776
  6228  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      56
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _displayLotteryResult->___awmod
    _displaySegments->_DELAY_milliseconds
    _displayRoll->_DELAY_milliseconds
    ___awmod->___awdiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_displayLotteryResult
    _displayLotteryResult->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5273
                        _EUSART_Read
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                       _displayClear
               _displayLotteryResult
 ---------------------------------------------------------------------------------
 (1) _displayLotteryResult                                47    45      2    4978
                                              2 BANK0     47    45      2
                            ___awdiv
                            ___awmod
                        _displayRoll
                    _displaySegments
                          _selectDIG
 ---------------------------------------------------------------------------------
 (2) _selectDIG                                            2     0      2     402
                                              0 COMMON     2     0      2
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displaySegments                                      2     0      2     956
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
                       _displayEight
                        _displayFive
                        _displayFour
                        _displayNine
                         _displayOne
                       _displaySeven
                         _displaySix
                       _displayThree
                         _displayTwo
                        _displayZero
 ---------------------------------------------------------------------------------
 (3) _displayZero                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayTwo                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayThree                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySix                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySeven                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayOne                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayNine                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFour                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFive                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayEight                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displayRoll                                          2     0      2     500
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayClear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _displayClear
   _displayLotteryResult
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _displayRoll
       _DELAY_milliseconds
       _displayClear
     _displaySegments
       _DELAY_milliseconds
       _displayClear
       _displayEight
         _displayClear
       _displayFive
         _displayClear
       _displayFour
         _displayClear
       _displayNine
         _displayClear
       _displayOne
         _displayClear
       _displaySeven
         _displayClear
       _displaySix
         _displayClear
       _displayThree
         _displayClear
       _displayTwo
         _displayClear
       _displayZero
         _displayClear
     _selectDIG
       _displayClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      38       5       70.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      46      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      46      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 20 13:48:11 2024

                                 ?_displayFive 0070                                   ?_displayFour 0070  
                                 ?_displayNine 0070                                   ?_displayRoll 0072  
                                 ?_displayZero 0070                                             l51 01EF  
                                           l43 02E1                                             l60 0283  
                                           l64 0291                                             l82 01FB  
                                           l85 0201                                             l88 01F5  
                                 ___awdiv@sign 0076                        __end_of_displaySegments 0422  
                                ?_displayClear 0070                                  ?_displayEight 0070  
                                ?_displaySeven 0070                                  ?_displayThree 0070  
                                          l200 0219                                            l222 0208  
                                          l215 0269                                            l401 0350  
                                          l139 0337                                            l163 0282  
                                          l403 0352                                            l315 0275  
                                          l235 0253                                            l166 0210  
                                          l190 0214                                            l406 0374  
                                          l192 0215                                            l272 0235  
                                          l328 023F                                            l248 0249  
                                          l344 0421                                            l169 01EA  
                                          l361 02ED                                            l194 0216  
                                          l186 0211                                            l370 0306  
                                          l259 0222                                            l196 0217  
                                          l188 0213                                            l364 02EF  
                                          l381 0340                                            l357 02EB  
                                          l710 0480                                            l198 0218  
                                          l391 0348                                            l383 0342  
                                          l375 033C                                            l287 025E  
                                          l367 02F1                                            l463 07FA  
                                          l480 02A3                                            l393 034A  
                                          l377 033E                                            l386 0344  
                                          l298 022B                                            l723 03C8  
                                          l396 034C                                            l388 0346  
                                          l398 034E                                            u700 02A3  
                                          u701 02A2                                            u710 0427  
                                          u711 0426                                            u800 0477  
                                          u720 0432                                            u801 0476  
                                          u721 0431                                            u730 0443  
                                          u810 037B                                            u731 0442  
                                          u811 037A                                            u900 0288  
                                          u820 0386                                            u901 0287  
                                          u821 0385                                            u910 028E  
                                          u750 0453                                            u830 0391  
                                          u911 028D                                            u751 0452  
                                          u831 0390                                            u920 0509  
                                          u745 0447                                            u921 0508  
                                          u770 0462                                            u850 03A1  
                                          u930 051B                                            u771 0461  
                                          u851 03A0                                            u931 051A  
                                          u860 03AB                                            u940 052D  
                                          u765 0454                                            u861 03AA  
                                          u845 0395                                            u941 052C  
                                          u925 0505                                            u790 0472  
                                          u950 053F                                            u791 0471  
                                          u775 045E                                            u951 053E  
                                          u935 0517                                            u880 03BA  
                                          u960 054F                                            u785 0468  
                                          u881 03B9                                            u865 03A7  
                                          u961 054E                                            u945 0529  
                                          u890 03BF                                            u970 0562  
                                          u891 03BE                                            u875 03B0  
                                          u971 0561                                            u955 053B  
                                          u980 0573                                            u981 0572  
                                          u965 054B                                            u990 0586  
                                          u991 0585                                            u975 055E  
                                          u985 056F                                            u995 0582  
                   __end_of_DELAY_milliseconds 02A4                 ?_EUSART_SetFramingErrorHandler 0070  
                       ??_displayLotteryResult 0024                                   ___awmod@sign 0021  
                                          wreg 0009                                   ?_EUSART_Read 0070  
                                         l2011 05A5                                           l2003 0587  
                                         l2101 0733                                           l2013 05AA  
                                         l2005 058F                                           l2021 05ED  
                                         l2111 0779                                           l2103 0740  
                                         l2031 0611                                           l2023 05F0  
                                         l2007 0596                                           l2015 05B7  
                                         l1161 030E                                           l2121 07A2  
                                         l2105 0752                                           l2041 0635  
                                         l2033 0614                                           l2009 059E  
                                         l2017 05C9                                           l1171 031D  
                                         l1163 0310                                           l2211 02F8  
                                         l2131 07C7                                           l2123 07A9  
                                         l2115 0787                                           l2107 0764  
                                         l2051 065B                                           l2043 063D  
                                         l2027 05FE                                           l2019 05DB  
                                         l1181 032D                                           l1173 0323  
                                         l1165 0312                                           l1157 0307  
                                         l2213 03FA                                           l2133 07CF  
                                         l2125 07B1                                           l2109 0776  
                                         l2053 0662                                           l2045 0644  
                                         l2037 0622                                           l2061 0698  
                                         l2141 02A4                                           l1343 01EB  
                                         l1191 020C                                           l1183 032F  
                                         l1175 0326                                           l1167 0315  
                                         l1159 030B                                           l2215 0359  
                                         l2127 07B8                                           l2135 07D6  
                                         l2119 079A                                           l2055 0667  
                                         l2047 064C                                           l2063 06AA  
                                         l2143 02A7                                           l1193 020D  
                                         l1185 0331                                           l1177 0328  
                                         l1169 0317                                           l2137 07DB  
                                         l2129 07C0                                           l2073 06CE  
                                         l2065 06AD                                           l2049 0653  
                                         l2057 0674                                           l2145 02AA  
                                         l1195 020E                                           l1187 0334  
                                         l1179 032A                                           l2139 07E8  
                                         l2091 0710                                           l2083 06F2  
                                         l2075 06D1                                           l2059 0686  
                                         l2147 02B2                                           l1189 0209  
                                         l1197 01E7                                           l1701 021D  
                                         l2093 0718                                           l2085 06FA  
                                         l2069 06BB                                           l2149 02BA  
                                         l1711 022F                                           l1703 021F  
                                         l2095 071F                                           l2087 0701  
                                         l2079 06DF                                           l1713 0231  
                                         l1705 0220                                           l1721 0254  
                                         l1801 03DD                                           l2097 0727  
                                         l2089 0709                                           l1651 01FC  
                                         l1715 0232                                           l1707 0221  
                                         l1731 025C                                           l1723 0257  
                                         l1811 03F1                                           l1803 03E1  
                                         l2099 072E                                           l1653 01F0  
                                         l1901 037B                                           l1717 0233  
                                         l1709 022C                                           l1741 0229  
                                         l1733 025D                                           l1725 0259  
                                         l1661 0265                                           l1805 03E5  
                                         l1911 0391                                           l1903 0380  
                                         l1751 0270                                           l1719 0234  
                                         l1671 0205                                           l1743 022A  
                                         l1735 0223                                           l1727 025A  
                                         l1663 0266                                           l1655 025F  
                                         l1807 03E9                                           l1815 03F5  
                                         l1831 02E9                                           l1823 02E2  
                                         l1649 01F6                                           l1921 03AB  
                                         l1913 0394                                           l1905 0382  
                                         l1841 0338                                           l1753 0271  
                                         l1745 026A                                           l1761 0236  
                                         l1673 0207                                           l1737 0226  
                                         l1729 025B                                           l1681 0250  
                                         l1665 0267                                           l1657 0262  
                                         l1809 03ED                                           l1817 041A  
                                         l1825 02E5                                           l1931 03C4  
                                         l1923 03AF                                           l1915 0399  
                                         l1907 0386                                           l1755 0272  
                                         l1747 026D                                           l1771 023E  
                                         l1763 0239                                           l1739 0228  
                                         l1691 0245                                           l1683 0251  
                                         l1675 024A                                           l1667 0268  
                                         l1659 0264                                           l1835 02F3  
                                         l1827 02E7                                           l1941 028E  
                                         l1781 02C9                                           l1861 042E  
                                         l1853 0422                                           l1925 03B4  
                                         l1917 039D                                           l1909 038B  
                                         l1773 0292                                           l1845 0354  
                                         l1757 0273                                           l1749 026F  
                                         l1765 023B                                           l1669 0202  
                                         l1693 0246                                           l1685 0252  
                                         l1677 024D                                           l1829 02E8  
                                         l1943 0290                                           l1935 0283  
                                         l1783 02CA                                           l1871 0443  
                                         l1863 0432                                           l1855 0423  
                                         l1919 03A1                                           l1927 03BA  
                                         l1775 0293                                           l1847 036D  
                                         l1759 0274                                           l1767 023C  
                                         l1695 0247                                           l1687 0240  
                                         l1679 024F                                           l1791 03C9  
                                         l1951 04D8                                           l1937 0288  
                                         l1785 02D1                                           l1881 0462  
                                         l1873 0446                                           l1865 0437  
                                         l1857 0427                                           l1929 03BF  
                                         l1777 0297                                           l1769 023D  
                                         l1697 0248                                           l1689 0243  
                                         l1793 03CD                                           l1961 04DF  
                                         l1939 0289                                           l1787 02D8  
                                         l1779 02C0                                           l1947 0276  
                                         l1891 0477                                           l1883 0466  
                                         l1875 044B                                           l1867 043B  
                                         l1859 042C                                           l1699 021A  
                                         l1795 03D1                                           l1971 04E7  
                                         l1789 02DF                                           l1893 047C  
                                         l1885 0467                                           l1877 044F  
                                         l1869 043D                                           l1797 03D5  
                                         l1981 052D                                           l1973 04F7  
                                         l1957 04DA                                           l1949 0481  
                                         l1887 046C                                           l1879 0453  
                                         l1799 03D9                                           l1983 053F  
                                         l1975 04FC                                           l1967 04E2  
                                         l1889 0472                                           l1897 0375  
                                         l1993 0563                                           l1985 0542  
                                         l1977 0509                                           l1899 0377  
                                         l1995 0566                                           l1979 051B  
                                         l1989 0550                                           l1999 0574  
                                         u1000 0596                                           u1001 0595  
                                         u1010 05B7                                           u1011 05B6  
                                         u1100 0653                                           u1020 05C9  
                                         u1101 0652                                           u1021 05C8  
                                         u1110 0674                                           u1030 05DB  
                                         u1111 0673                                           u1031 05DA  
                                         u1015 05B3                                           u1200 0710  
                                         u1120 0686                                           u1040 05ED  
                                         u1201 070F                                           u1121 0685  
                                         u1041 05EC                                           u1025 05C5  
                                         u1210 071F                                           u1130 0698  
                                         u1050 05FD                                           u1211 071E  
                                         u1131 0697                                           u1115 0670  
                                         u1051 05FC                                           u1035 05D7  
                                         u1300 07C7                                           u1220 0740  
                                         u1140 06AA                                           u1060 0610  
                                         u1301 07C6                                           u1221 073F  
                                         u1141 06A9                                           u1125 0682  
                                         u1061 060F                                           u1045 05E9  
                                         u1310 07E8                                           u1230 0752  
                                         u1150 06BA                                           u1070 0621  
                                         u1311 07E7                                           u1231 0751  
                                         u1151 06B9                                           u1135 0694  
                                         u1071 0620                                           u1055 05F9  
                                         u1320 07FA                                           u1240 0764  
                                         u1160 06CD                                           u1080 0634  
                                         u1321 07F9                                           u1241 0763  
                                         u1225 073C                                           u1161 06CC  
                                         u1145 06A6                                           u1081 0633  
                                         u1065 060C                                           u1250 0776  
                                         u1170 06DE                                           u1090 0644  
                                         u1330 02B2                                           u1315 07E4  
                                         u1251 0775                                           u1235 074E  
                                         u1171 06DD                                           u1155 06B6  
                                         u1091 0643                                           u1075 061D  
                                         u1331 02B1                                           u1260 0786  
                                         u1180 06F1                                           u1325 07F6  
                                         u1261 0785                                           u1245 0760  
                                         u1181 06F0                                           u1165 06C9  
                                         u1085 0630                                           _LATA 010C  
                                         u1270 0799                                           u1190 0701  
                                         _LATB 010D                                           u1271 0798  
                                         u1255 0772                                           u1191 0700  
                                         u1175 06DA                                           _LATC 010E  
                                         u1280 07A9                                           u1281 07A8  
                                         u1265 0782                                           u1185 06ED  
                                         u1290 07B8                                           u1347 0294  
                                         u1291 07B7                                           u1275 0795  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _main 02A4  
                                         btemp 007E                                           start 0002  
                               ??_displayClear 0070                                 ??_displayEight 0070  
               __size_of_OSCILLATOR_Initialize 0008                                 ??_displaySeven 0070  
                               ??_displayThree 0070                  __end_of_OSCILLATOR_Initialize 0211  
                                        ?_main 0070                                __end_of___awdiv 0481  
                              __end_of___awmod 03C9                                ___awdiv@divisor 0070  
                              ___awdiv@counter 0075                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        _RXPPS 0E24                                 _WDT_Initialize 01E7  
                                        status 0003                                          wtemp0 007E  
                              __initialization 07FB                                   __end_of_main 02C0  
                             ?_displaySegments 0072                                         ??_main 007E  
                       __end_of_WDT_Initialize 01EB              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0053                               ___awdiv@dividend 0072  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 01F0  
                                       _BORCON 021D                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB4PPS 0E9C  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                    ??___awdiv 0074                                      ??___awmod 007D  
                             ___awdiv@quotient 0077                                ___awmod@divisor 0079  
                         __size_of_displayFive 000A                                ___awmod@counter 0020  
                         __size_of_displayFour 0009                           __size_of_displayNine 000A  
                         __size_of_displayRoll 003D                           __size_of_displayZero 000B  
                              ?_WDT_Initialize 0070                           __end_of_displayClear 021A  
                         __size_of_EUSART_Read 000F                           __end_of_displayEight 0276  
                            _SYSTEM_Initialize 0276                        __end_of__initialization 07FD  
                         __end_of_displaySeven 022C                           __end_of_displayThree 024A  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0072                      __end_of_SYSTEM_Initialize 0283  
                                   __pbssBANK0 0057                             _DELAY_milliseconds 0292  
                          ?_DELAY_milliseconds 0070                                     __pmaintext 02A4  
                           __size_of_selectDIG 0025                      displayLotteryResult@i_402 0041  
                    displayLotteryResult@i_411 0045                      displayLotteryResult@i_407 0043  
                    displayLotteryResult@j_404 0049                      displayLotteryResult@j_413 004D  
                    displayLotteryResult@j_415 004F                      displayLotteryResult@j_409 004B  
                    displayLotteryResult@x_401 002D                      displayLotteryResult@x_410 0035  
                    displayLotteryResult@x_406 0031                      displayLotteryResult@dig_1 0047  
                    displayLotteryResult@dig_2 003B                      displayLotteryResult@dig_3 0027  
                    displayLotteryResult@dig_4 0025               displayLotteryResult@wait_cnt_403 002F  
             displayLotteryResult@wait_cnt_412 0037               displayLotteryResult@wait_cnt_414 0039  
             displayLotteryResult@wait_cnt_408 0033                           ??_DELAY_milliseconds 0072  
                                      _OSCSTAT 009A                                        _OSCTUNE 0098  
                __size_of_displayLotteryResult 037A                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                                   _displayOne 0202                                     _displaySix 0254  
                                   _displayTwo 024A                       ??_EUSART_SetErrorHandler 0072  
                                      ___awdiv 0422                                        ___awmod 0375  
                                      __ptext1 0481                                        __ptext2 02E2  
                                      __ptext3 03C9                                        __ptext4 025F  
                                      __ptext5 024A                                        __ptext6 0240  
                                      __ptext7 0254                                        __ptext8 0223  
                                      __ptext9 0202                          _OSCILLATOR_Initialize 0209  
                             ___awmod@dividend 007B                       ??_PIN_MANAGER_Initialize 0070  
                        __size_of_displayClear 0009                          __size_of_displayEight 000C  
                        __size_of_displaySeven 0009                          __size_of_displayThree 000A  
                   __size_of_SYSTEM_Initialize 000D                                 displayRoll@cnt 0072  
                         end_of_initialization 07FD                              __end_of_selectDIG 0307  
        __end_of_EUSART_SetOverrunErrorHandler 0202         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 01FC                              _EUSART_Initialize 02C0  
                           ?_EUSART_Initialize 0070                             _EUSART_is_rx_ready 01EB  
                          ??_EUSART_Initialize 0072                                   _displayClear 0211  
                             ??_WDT_Initialize 0070                                   _displayEight 026A  
                        displayLotteryResult@i 003D                          displayLotteryResult@j 003F  
                        displayLotteryResult@x 0029                            ?_EUSART_is_rx_ready 0070  
                                 _displaySeven 0223                                   _displayThree 0240  
                     __size_of_displaySegments 0059                                    ?_displayOne 0070  
                                  ?_displaySix 0070                                    ?_displayTwo 0070  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 02E2  
                         ??_EUSART_is_rx_ready 0070                                  ??_displayFive 0070  
                                ??_displayFour 0070                                  ??_displayNine 0070  
                                ??_displayRoll 0074                                  ??_displayZero 0070  
                   _EUSART_DefaultErrorHandler 0000                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 07FB                __size_of_PIN_MANAGER_Initialize 0031  
                                ??_EUSART_Read 0070                 ?_EUSART_SetOverrunErrorHandler 0070  
                   _EUSART_FramingErrorHandler 0055                         _EUSART_SetErrorHandler 01F0  
                          __size_of_displayOne 0007                            __size_of_displaySix 000B  
                          __size_of_displayTwo 000A                            __end_of_displayFive 0236  
                          __end_of_displayFour 0223                            __end_of_displayNine 0240  
                          __end_of_displayRoll 0375                            __end_of_displayZero 026A  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                   __size_of_EUSART_Initialize 0022                              ??_displaySegments 0074  
                          __end_of_EUSART_Read 0292                                      __pnvBANK0 0051  
                       _PIN_MANAGER_Initialize 0307                   __end_of_displayLotteryResult 07FB  
                                     ?___awdiv 0070                                       ?___awmod 0079  
                                     _BAUD1CON 019F                    __size_of_DELAY_milliseconds 0012  
                                 selectDIG@dig 0070                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 010D  
                                     _LATCbits 010E                                      _selectDIG 02E2  
                            _eusartRxLastError 0057                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0072                 DELAY_milliseconds@milliseconds 0070  
            _EUSART_DefaultOverrunErrorHandler 0000                                    _displayFive 022C  
                                  _displayFour 021A                                    _displayNine 0236  
                                  _displayRoll 0338                                    _displayZero 025F  
                                 ??_displayOne 0070                                   ??_displaySix 0070  
                                 ??_displayTwo 0070                                    _EUSART_Read 0283  
                 displayLotteryResult@wait_cnt 002B                                     ?_selectDIG 0070  
                      ??_OSCILLATOR_Initialize 0070                            _EUSART_ErrorHandler 0051  
                             __size_of___awdiv 005F                               __size_of___awmod 0054  
                           __end_of_displayOne 0209                             __end_of_displaySix 025F  
                           __end_of_displayTwo 0254                           _displayLotteryResult 0481  
                                     __ptext10 0236                                       __ptext11 021A  
                                     __ptext20 01E7                                       __ptext12 022C  
                                     __ptext21 0307                                       __ptext13 026A  
                                     __ptext22 0209                                       __ptext14 0338  
                                     __ptext23 02C0                                       __ptext15 0211  
                                     __ptext24 01FC                                       __ptext16 0292  
                                     __ptext25 01F6                                       __ptext17 0375  
                                     __ptext26 01F0                                       __ptext18 0422  
                                     __ptext27 01EB                                       __ptext19 0276  
                                     __ptext28 0283                    __size_of_EUSART_is_rx_ready 0005  
                                __size_of_main 001C                        ?_EUSART_SetErrorHandler 0070  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
        __end_of_EUSART_SetFramingErrorHandler 01FC         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 01F6                                _displaySegments 03C9  
                        ?_displayLotteryResult 0022                        __size_of_WDT_Initialize 0004  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 01F6  
                                  ??_selectDIG 0072                        displayLotteryResult@val 0022  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                     _TX1STAbits 019E  
               __end_of_PIN_MANAGER_Initialize 0338                             displaySegments@num 0072  
