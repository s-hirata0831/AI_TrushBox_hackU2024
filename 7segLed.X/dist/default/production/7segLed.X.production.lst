

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 20 05:39:19 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1769
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1769 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011C                     	;# 
   145  011D                     	;# 
   146  011E                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  0191                     	;# 
   152  0191                     	;# 
   153  0192                     	;# 
   154  0193                     	;# 
   155  0193                     	;# 
   156  0194                     	;# 
   157  0195                     	;# 
   158  0196                     	;# 
   159  0197                     	;# 
   160  0199                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019C                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019D                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019E                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019F                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  020C                     	;# 
   186  020D                     	;# 
   187  020E                     	;# 
   188  0211                     	;# 
   189  0211                     	;# 
   190  0212                     	;# 
   191  0212                     	;# 
   192  0213                     	;# 
   193  0213                     	;# 
   194  0214                     	;# 
   195  0214                     	;# 
   196  0215                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0215                     	;# 
   200  0216                     	;# 
   201  0216                     	;# 
   202  0217                     	;# 
   203  0217                     	;# 
   204  021D                     	;# 
   205  021E                     	;# 
   206  021F                     	;# 
   207  028C                     	;# 
   208  028D                     	;# 
   209  028E                     	;# 
   210  0291                     	;# 
   211  0291                     	;# 
   212  0292                     	;# 
   213  0293                     	;# 
   214  0294                     	;# 
   215  0298                     	;# 
   216  0298                     	;# 
   217  0299                     	;# 
   218  029A                     	;# 
   219  029B                     	;# 
   220  029E                     	;# 
   221  030C                     	;# 
   222  030D                     	;# 
   223  030E                     	;# 
   224  031B                     	;# 
   225  031C                     	;# 
   226  031D                     	;# 
   227  031E                     	;# 
   228  031F                     	;# 
   229  038C                     	;# 
   230  038D                     	;# 
   231  038E                     	;# 
   232  0391                     	;# 
   233  0392                     	;# 
   234  0393                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  0397                     	;# 
   239  0398                     	;# 
   240  0399                     	;# 
   241  039B                     	;# 
   242  039C                     	;# 
   243  039D                     	;# 
   244  039E                     	;# 
   245  039F                     	;# 
   246  040E                     	;# 
   247  0413                     	;# 
   248  0413                     	;# 
   249  0414                     	;# 
   250  0414                     	;# 
   251  0415                     	;# 
   252  0416                     	;# 
   253  0417                     	;# 
   254  0418                     	;# 
   255  041A                     	;# 
   256  041A                     	;# 
   257  041B                     	;# 
   258  041B                     	;# 
   259  041C                     	;# 
   260  041D                     	;# 
   261  041E                     	;# 
   262  041F                     	;# 
   263  0493                     	;# 
   264  0493                     	;# 
   265  0494                     	;# 
   266  0495                     	;# 
   267  0496                     	;# 
   268  049A                     	;# 
   269  049A                     	;# 
   270  049B                     	;# 
   271  049C                     	;# 
   272  049D                     	;# 
   273  050F                     	;# 
   274  0510                     	;# 
   275  0511                     	;# 
   276  0512                     	;# 
   277  0513                     	;# 
   278  0514                     	;# 
   279  0515                     	;# 
   280  0516                     	;# 
   281  0590                     	;# 
   282  0591                     	;# 
   283  0592                     	;# 
   284  0592                     	;# 
   285  0592                     	;# 
   286  0593                     	;# 
   287  0593                     	;# 
   288  0594                     	;# 
   289  0595                     	;# 
   290  0595                     	;# 
   291  0595                     	;# 
   292  0596                     	;# 
   293  0596                     	;# 
   294  0597                     	;# 
   295  0598                     	;# 
   296  0598                     	;# 
   297  0599                     	;# 
   298  059A                     	;# 
   299  059A                     	;# 
   300  0617                     	;# 
   301  0617                     	;# 
   302  0618                     	;# 
   303  0619                     	;# 
   304  061A                     	;# 
   305  061A                     	;# 
   306  061B                     	;# 
   307  061C                     	;# 
   308  068D                     	;# 
   309  068E                     	;# 
   310  068F                     	;# 
   311  0690                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0696                     	;# 
   318  0697                     	;# 
   319  0698                     	;# 
   320  0699                     	;# 
   321  069A                     	;# 
   322  069B                     	;# 
   323  069C                     	;# 
   324  069D                     	;# 
   325  069E                     	;# 
   326  069F                     	;# 
   327  070D                     	;# 
   328  070E                     	;# 
   329  070F                     	;# 
   330  0710                     	;# 
   331  0711                     	;# 
   332  0712                     	;# 
   333  0713                     	;# 
   334  0714                     	;# 
   335  0715                     	;# 
   336  0716                     	;# 
   337  0717                     	;# 
   338  0718                     	;# 
   339  0719                     	;# 
   340  071A                     	;# 
   341  071B                     	;# 
   342  071C                     	;# 
   343  071D                     	;# 
   344  071E                     	;# 
   345  071F                     	;# 
   346  0794                     	;# 
   347  0795                     	;# 
   348  0796                     	;# 
   349  0797                     	;# 
   350  0798                     	;# 
   351  0799                     	;# 
   352  079A                     	;# 
   353  079B                     	;# 
   354  079C                     	;# 
   355  079D                     	;# 
   356  079E                     	;# 
   357  079F                     	;# 
   358  0D8E                     	;# 
   359  0D8F                     	;# 
   360  0D90                     	;# 
   361  0D91                     	;# 
   362  0D91                     	;# 
   363  0D92                     	;# 
   364  0D93                     	;# 
   365  0D93                     	;# 
   366  0D94                     	;# 
   367  0D95                     	;# 
   368  0D95                     	;# 
   369  0D96                     	;# 
   370  0D97                     	;# 
   371  0D97                     	;# 
   372  0D98                     	;# 
   373  0D99                     	;# 
   374  0D99                     	;# 
   375  0D9A                     	;# 
   376  0D9B                     	;# 
   377  0D9C                     	;# 
   378  0D9C                     	;# 
   379  0D9D                     	;# 
   380  0D9D                     	;# 
   381  0D9E                     	;# 
   382  0D9F                     	;# 
   383  0DA0                     	;# 
   384  0DA1                     	;# 
   385  0DA1                     	;# 
   386  0DA2                     	;# 
   387  0DA3                     	;# 
   388  0DA3                     	;# 
   389  0DA4                     	;# 
   390  0DA5                     	;# 
   391  0DA5                     	;# 
   392  0DA6                     	;# 
   393  0DA7                     	;# 
   394  0DA7                     	;# 
   395  0DA8                     	;# 
   396  0DA9                     	;# 
   397  0DA9                     	;# 
   398  0DAA                     	;# 
   399  0DAB                     	;# 
   400  0DAC                     	;# 
   401  0DAC                     	;# 
   402  0DAD                     	;# 
   403  0DAD                     	;# 
   404  0DAE                     	;# 
   405  0DAF                     	;# 
   406  0DB0                     	;# 
   407  0E0F                     	;# 
   408  0E10                     	;# 
   409  0E11                     	;# 
   410  0E12                     	;# 
   411  0E13                     	;# 
   412  0E14                     	;# 
   413  0E15                     	;# 
   414  0E16                     	;# 
   415  0E17                     	;# 
   416  0E19                     	;# 
   417  0E19                     	;# 
   418  0E19                     	;# 
   419  0E1A                     	;# 
   420  0E1B                     	;# 
   421  0E1C                     	;# 
   422  0E1C                     	;# 
   423  0E1C                     	;# 
   424  0E1D                     	;# 
   425  0E1E                     	;# 
   426  0E1F                     	;# 
   427  0E1F                     	;# 
   428  0E1F                     	;# 
   429  0E20                     	;# 
   430  0E21                     	;# 
   431  0E22                     	;# 
   432  0E24                     	;# 
   433  0E25                     	;# 
   434  0E28                     	;# 
   435  0E29                     	;# 
   436  0E2A                     	;# 
   437  0E2B                     	;# 
   438  0E2C                     	;# 
   439  0E2D                     	;# 
   440  0E2E                     	;# 
   441  0E2F                     	;# 
   442  0E30                     	;# 
   443  0E31                     	;# 
   444  0E32                     	;# 
   445  0E33                     	;# 
   446  0E34                     	;# 
   447  0E35                     	;# 
   448  0E90                     	;# 
   449  0E91                     	;# 
   450  0E92                     	;# 
   451  0E94                     	;# 
   452  0E95                     	;# 
   453  0E9C                     	;# 
   454  0E9D                     	;# 
   455  0E9E                     	;# 
   456  0E9F                     	;# 
   457  0EA0                     	;# 
   458  0EA1                     	;# 
   459  0EA2                     	;# 
   460  0EA3                     	;# 
   461  0EA4                     	;# 
   462  0EA5                     	;# 
   463  0EA6                     	;# 
   464  0EA7                     	;# 
   465  0F0F                     	;# 
   466  0F10                     	;# 
   467  0F11                     	;# 
   468  0F12                     	;# 
   469  0F13                     	;# 
   470  0F14                     	;# 
   471  0F15                     	;# 
   472  0F16                     	;# 
   473  0F17                     	;# 
   474  0F18                     	;# 
   475  0F19                     	;# 
   476  0F1A                     	;# 
   477  0F1B                     	;# 
   478  0F1C                     	;# 
   479  0F1D                     	;# 
   480  0F1E                     	;# 
   481  0F1F                     	;# 
   482  0F20                     	;# 
   483  0F21                     	;# 
   484  0F22                     	;# 
   485  0F23                     	;# 
   486  0F24                     	;# 
   487  0F25                     	;# 
   488  0F26                     	;# 
   489  0F27                     	;# 
   490  0F28                     	;# 
   491  0F29                     	;# 
   492  0F2A                     	;# 
   493  0F2B                     	;# 
   494  0F2C                     	;# 
   495  0F2D                     	;# 
   496  0FE4                     	;# 
   497  0FE5                     	;# 
   498  0FE6                     	;# 
   499  0FE7                     	;# 
   500  0FE8                     	;# 
   501  0FE9                     	;# 
   502  0FEA                     	;# 
   503  0FEB                     	;# 
   504  0FED                     	;# 
   505  0FEE                     	;# 
   506  0FEF                     	;# 
   507  0000                     	;# 
   508  0001                     	;# 
   509  0002                     	;# 
   510  0003                     	;# 
   511  0004                     	;# 
   512  0005                     	;# 
   513  0006                     	;# 
   514  0007                     	;# 
   515  0008                     	;# 
   516  0009                     	;# 
   517  000A                     	;# 
   518  000B                     	;# 
   519  000C                     	;# 
   520  000D                     	;# 
   521  000E                     	;# 
   522  0011                     	;# 
   523  0012                     	;# 
   524  0013                     	;# 
   525  0014                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  001D                     	;# 
   538  001E                     	;# 
   539  001F                     	;# 
   540  008C                     	;# 
   541  008D                     	;# 
   542  008E                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0094                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0097                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009B                     	;# 
   555  009C                     	;# 
   556  009D                     	;# 
   557  009E                     	;# 
   558  009F                     	;# 
   559  010C                     	;# 
   560  010D                     	;# 
   561  010E                     	;# 
   562  010F                     	;# 
   563  0110                     	;# 
   564  0111                     	;# 
   565  0112                     	;# 
   566  0113                     	;# 
   567  0114                     	;# 
   568  0115                     	;# 
   569  0116                     	;# 
   570  0117                     	;# 
   571  0118                     	;# 
   572  0119                     	;# 
   573  011A                     	;# 
   574  011B                     	;# 
   575  011C                     	;# 
   576  011D                     	;# 
   577  011E                     	;# 
   578  011F                     	;# 
   579  018C                     	;# 
   580  018D                     	;# 
   581  018E                     	;# 
   582  0191                     	;# 
   583  0191                     	;# 
   584  0192                     	;# 
   585  0193                     	;# 
   586  0193                     	;# 
   587  0194                     	;# 
   588  0195                     	;# 
   589  0196                     	;# 
   590  0197                     	;# 
   591  0199                     	;# 
   592  0199                     	;# 
   593  0199                     	;# 
   594  019A                     	;# 
   595  019A                     	;# 
   596  019A                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019C                     	;# 
   605  019D                     	;# 
   606  019D                     	;# 
   607  019D                     	;# 
   608  019E                     	;# 
   609  019E                     	;# 
   610  019E                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  019F                     	;# 
   614  019F                     	;# 
   615  019F                     	;# 
   616  020C                     	;# 
   617  020D                     	;# 
   618  020E                     	;# 
   619  0211                     	;# 
   620  0211                     	;# 
   621  0212                     	;# 
   622  0212                     	;# 
   623  0213                     	;# 
   624  0213                     	;# 
   625  0214                     	;# 
   626  0214                     	;# 
   627  0215                     	;# 
   628  0215                     	;# 
   629  0215                     	;# 
   630  0215                     	;# 
   631  0216                     	;# 
   632  0216                     	;# 
   633  0217                     	;# 
   634  0217                     	;# 
   635  021D                     	;# 
   636  021E                     	;# 
   637  021F                     	;# 
   638  028C                     	;# 
   639  028D                     	;# 
   640  028E                     	;# 
   641  0291                     	;# 
   642  0291                     	;# 
   643  0292                     	;# 
   644  0293                     	;# 
   645  0294                     	;# 
   646  0298                     	;# 
   647  0298                     	;# 
   648  0299                     	;# 
   649  029A                     	;# 
   650  029B                     	;# 
   651  029E                     	;# 
   652  030C                     	;# 
   653  030D                     	;# 
   654  030E                     	;# 
   655  031B                     	;# 
   656  031C                     	;# 
   657  031D                     	;# 
   658  031E                     	;# 
   659  031F                     	;# 
   660  038C                     	;# 
   661  038D                     	;# 
   662  038E                     	;# 
   663  0391                     	;# 
   664  0392                     	;# 
   665  0393                     	;# 
   666  0394                     	;# 
   667  0395                     	;# 
   668  0396                     	;# 
   669  0397                     	;# 
   670  0398                     	;# 
   671  0399                     	;# 
   672  039B                     	;# 
   673  039C                     	;# 
   674  039D                     	;# 
   675  039E                     	;# 
   676  039F                     	;# 
   677  040E                     	;# 
   678  0413                     	;# 
   679  0413                     	;# 
   680  0414                     	;# 
   681  0414                     	;# 
   682  0415                     	;# 
   683  0416                     	;# 
   684  0417                     	;# 
   685  0418                     	;# 
   686  041A                     	;# 
   687  041A                     	;# 
   688  041B                     	;# 
   689  041B                     	;# 
   690  041C                     	;# 
   691  041D                     	;# 
   692  041E                     	;# 
   693  041F                     	;# 
   694  0493                     	;# 
   695  0493                     	;# 
   696  0494                     	;# 
   697  0495                     	;# 
   698  0496                     	;# 
   699  049A                     	;# 
   700  049A                     	;# 
   701  049B                     	;# 
   702  049C                     	;# 
   703  049D                     	;# 
   704  050F                     	;# 
   705  0510                     	;# 
   706  0511                     	;# 
   707  0512                     	;# 
   708  0513                     	;# 
   709  0514                     	;# 
   710  0515                     	;# 
   711  0516                     	;# 
   712  0590                     	;# 
   713  0591                     	;# 
   714  0592                     	;# 
   715  0592                     	;# 
   716  0592                     	;# 
   717  0593                     	;# 
   718  0593                     	;# 
   719  0594                     	;# 
   720  0595                     	;# 
   721  0595                     	;# 
   722  0595                     	;# 
   723  0596                     	;# 
   724  0596                     	;# 
   725  0597                     	;# 
   726  0598                     	;# 
   727  0598                     	;# 
   728  0599                     	;# 
   729  059A                     	;# 
   730  059A                     	;# 
   731  0617                     	;# 
   732  0617                     	;# 
   733  0618                     	;# 
   734  0619                     	;# 
   735  061A                     	;# 
   736  061A                     	;# 
   737  061B                     	;# 
   738  061C                     	;# 
   739  068D                     	;# 
   740  068E                     	;# 
   741  068F                     	;# 
   742  0690                     	;# 
   743  0691                     	;# 
   744  0692                     	;# 
   745  0693                     	;# 
   746  0694                     	;# 
   747  0695                     	;# 
   748  0696                     	;# 
   749  0697                     	;# 
   750  0698                     	;# 
   751  0699                     	;# 
   752  069A                     	;# 
   753  069B                     	;# 
   754  069C                     	;# 
   755  069D                     	;# 
   756  069E                     	;# 
   757  069F                     	;# 
   758  070D                     	;# 
   759  070E                     	;# 
   760  070F                     	;# 
   761  0710                     	;# 
   762  0711                     	;# 
   763  0712                     	;# 
   764  0713                     	;# 
   765  0714                     	;# 
   766  0715                     	;# 
   767  0716                     	;# 
   768  0717                     	;# 
   769  0718                     	;# 
   770  0719                     	;# 
   771  071A                     	;# 
   772  071B                     	;# 
   773  071C                     	;# 
   774  071D                     	;# 
   775  071E                     	;# 
   776  071F                     	;# 
   777  0794                     	;# 
   778  0795                     	;# 
   779  0796                     	;# 
   780  0797                     	;# 
   781  0798                     	;# 
   782  0799                     	;# 
   783  079A                     	;# 
   784  079B                     	;# 
   785  079C                     	;# 
   786  079D                     	;# 
   787  079E                     	;# 
   788  079F                     	;# 
   789  0D8E                     	;# 
   790  0D8F                     	;# 
   791  0D90                     	;# 
   792  0D91                     	;# 
   793  0D91                     	;# 
   794  0D92                     	;# 
   795  0D93                     	;# 
   796  0D93                     	;# 
   797  0D94                     	;# 
   798  0D95                     	;# 
   799  0D95                     	;# 
   800  0D96                     	;# 
   801  0D97                     	;# 
   802  0D97                     	;# 
   803  0D98                     	;# 
   804  0D99                     	;# 
   805  0D99                     	;# 
   806  0D9A                     	;# 
   807  0D9B                     	;# 
   808  0D9C                     	;# 
   809  0D9C                     	;# 
   810  0D9D                     	;# 
   811  0D9D                     	;# 
   812  0D9E                     	;# 
   813  0D9F                     	;# 
   814  0DA0                     	;# 
   815  0DA1                     	;# 
   816  0DA1                     	;# 
   817  0DA2                     	;# 
   818  0DA3                     	;# 
   819  0DA3                     	;# 
   820  0DA4                     	;# 
   821  0DA5                     	;# 
   822  0DA5                     	;# 
   823  0DA6                     	;# 
   824  0DA7                     	;# 
   825  0DA7                     	;# 
   826  0DA8                     	;# 
   827  0DA9                     	;# 
   828  0DA9                     	;# 
   829  0DAA                     	;# 
   830  0DAB                     	;# 
   831  0DAC                     	;# 
   832  0DAC                     	;# 
   833  0DAD                     	;# 
   834  0DAD                     	;# 
   835  0DAE                     	;# 
   836  0DAF                     	;# 
   837  0DB0                     	;# 
   838  0E0F                     	;# 
   839  0E10                     	;# 
   840  0E11                     	;# 
   841  0E12                     	;# 
   842  0E13                     	;# 
   843  0E14                     	;# 
   844  0E15                     	;# 
   845  0E16                     	;# 
   846  0E17                     	;# 
   847  0E19                     	;# 
   848  0E19                     	;# 
   849  0E19                     	;# 
   850  0E1A                     	;# 
   851  0E1B                     	;# 
   852  0E1C                     	;# 
   853  0E1C                     	;# 
   854  0E1C                     	;# 
   855  0E1D                     	;# 
   856  0E1E                     	;# 
   857  0E1F                     	;# 
   858  0E1F                     	;# 
   859  0E1F                     	;# 
   860  0E20                     	;# 
   861  0E21                     	;# 
   862  0E22                     	;# 
   863  0E24                     	;# 
   864  0E25                     	;# 
   865  0E28                     	;# 
   866  0E29                     	;# 
   867  0E2A                     	;# 
   868  0E2B                     	;# 
   869  0E2C                     	;# 
   870  0E2D                     	;# 
   871  0E2E                     	;# 
   872  0E2F                     	;# 
   873  0E30                     	;# 
   874  0E31                     	;# 
   875  0E32                     	;# 
   876  0E33                     	;# 
   877  0E34                     	;# 
   878  0E35                     	;# 
   879  0E90                     	;# 
   880  0E91                     	;# 
   881  0E92                     	;# 
   882  0E94                     	;# 
   883  0E95                     	;# 
   884  0E9C                     	;# 
   885  0E9D                     	;# 
   886  0E9E                     	;# 
   887  0E9F                     	;# 
   888  0EA0                     	;# 
   889  0EA1                     	;# 
   890  0EA2                     	;# 
   891  0EA3                     	;# 
   892  0EA4                     	;# 
   893  0EA5                     	;# 
   894  0EA6                     	;# 
   895  0EA7                     	;# 
   896  0F0F                     	;# 
   897  0F10                     	;# 
   898  0F11                     	;# 
   899  0F12                     	;# 
   900  0F13                     	;# 
   901  0F14                     	;# 
   902  0F15                     	;# 
   903  0F16                     	;# 
   904  0F17                     	;# 
   905  0F18                     	;# 
   906  0F19                     	;# 
   907  0F1A                     	;# 
   908  0F1B                     	;# 
   909  0F1C                     	;# 
   910  0F1D                     	;# 
   911  0F1E                     	;# 
   912  0F1F                     	;# 
   913  0F20                     	;# 
   914  0F21                     	;# 
   915  0F22                     	;# 
   916  0F23                     	;# 
   917  0F24                     	;# 
   918  0F25                     	;# 
   919  0F26                     	;# 
   920  0F27                     	;# 
   921  0F28                     	;# 
   922  0F29                     	;# 
   923  0F2A                     	;# 
   924  0F2B                     	;# 
   925  0F2C                     	;# 
   926  0F2D                     	;# 
   927  0FE4                     	;# 
   928  0FE5                     	;# 
   929  0FE6                     	;# 
   930  0FE7                     	;# 
   931  0FE8                     	;# 
   932  0FE9                     	;# 
   933  0FEA                     	;# 
   934  0FEB                     	;# 
   935  0FED                     	;# 
   936  0FEE                     	;# 
   937  0FEF                     	;# 
   938  0000                     	;# 
   939  0001                     	;# 
   940  0002                     	;# 
   941  0003                     	;# 
   942  0004                     	;# 
   943  0005                     	;# 
   944  0006                     	;# 
   945  0007                     	;# 
   946  0008                     	;# 
   947  0009                     	;# 
   948  000A                     	;# 
   949  000B                     	;# 
   950  000C                     	;# 
   951  000D                     	;# 
   952  000E                     	;# 
   953  0011                     	;# 
   954  0012                     	;# 
   955  0013                     	;# 
   956  0014                     	;# 
   957  0015                     	;# 
   958  0016                     	;# 
   959  0016                     	;# 
   960  0017                     	;# 
   961  0018                     	;# 
   962  0019                     	;# 
   963  001A                     	;# 
   964  001A                     	;# 
   965  001B                     	;# 
   966  001B                     	;# 
   967  001C                     	;# 
   968  001D                     	;# 
   969  001E                     	;# 
   970  001F                     	;# 
   971  008C                     	;# 
   972  008D                     	;# 
   973  008E                     	;# 
   974  0091                     	;# 
   975  0092                     	;# 
   976  0093                     	;# 
   977  0094                     	;# 
   978  0095                     	;# 
   979  0096                     	;# 
   980  0097                     	;# 
   981  0098                     	;# 
   982  0099                     	;# 
   983  009A                     	;# 
   984  009B                     	;# 
   985  009B                     	;# 
   986  009C                     	;# 
   987  009D                     	;# 
   988  009E                     	;# 
   989  009F                     	;# 
   990  010C                     	;# 
   991  010D                     	;# 
   992  010E                     	;# 
   993  010F                     	;# 
   994  0110                     	;# 
   995  0111                     	;# 
   996  0112                     	;# 
   997  0113                     	;# 
   998  0114                     	;# 
   999  0115                     	;# 
  1000  0116                     	;# 
  1001  0117                     	;# 
  1002  0118                     	;# 
  1003  0119                     	;# 
  1004  011A                     	;# 
  1005  011B                     	;# 
  1006  011C                     	;# 
  1007  011D                     	;# 
  1008  011E                     	;# 
  1009  011F                     	;# 
  1010  018C                     	;# 
  1011  018D                     	;# 
  1012  018E                     	;# 
  1013  0191                     	;# 
  1014  0191                     	;# 
  1015  0192                     	;# 
  1016  0193                     	;# 
  1017  0193                     	;# 
  1018  0194                     	;# 
  1019  0195                     	;# 
  1020  0196                     	;# 
  1021  0197                     	;# 
  1022  0199                     	;# 
  1023  0199                     	;# 
  1024  0199                     	;# 
  1025  019A                     	;# 
  1026  019A                     	;# 
  1027  019A                     	;# 
  1028  019B                     	;# 
  1029  019B                     	;# 
  1030  019B                     	;# 
  1031  019B                     	;# 
  1032  019B                     	;# 
  1033  019C                     	;# 
  1034  019C                     	;# 
  1035  019C                     	;# 
  1036  019D                     	;# 
  1037  019D                     	;# 
  1038  019D                     	;# 
  1039  019E                     	;# 
  1040  019E                     	;# 
  1041  019E                     	;# 
  1042  019F                     	;# 
  1043  019F                     	;# 
  1044  019F                     	;# 
  1045  019F                     	;# 
  1046  019F                     	;# 
  1047  020C                     	;# 
  1048  020D                     	;# 
  1049  020E                     	;# 
  1050  0211                     	;# 
  1051  0211                     	;# 
  1052  0212                     	;# 
  1053  0212                     	;# 
  1054  0213                     	;# 
  1055  0213                     	;# 
  1056  0214                     	;# 
  1057  0214                     	;# 
  1058  0215                     	;# 
  1059  0215                     	;# 
  1060  0215                     	;# 
  1061  0215                     	;# 
  1062  0216                     	;# 
  1063  0216                     	;# 
  1064  0217                     	;# 
  1065  0217                     	;# 
  1066  021D                     	;# 
  1067  021E                     	;# 
  1068  021F                     	;# 
  1069  028C                     	;# 
  1070  028D                     	;# 
  1071  028E                     	;# 
  1072  0291                     	;# 
  1073  0291                     	;# 
  1074  0292                     	;# 
  1075  0293                     	;# 
  1076  0294                     	;# 
  1077  0298                     	;# 
  1078  0298                     	;# 
  1079  0299                     	;# 
  1080  029A                     	;# 
  1081  029B                     	;# 
  1082  029E                     	;# 
  1083  030C                     	;# 
  1084  030D                     	;# 
  1085  030E                     	;# 
  1086  031B                     	;# 
  1087  031C                     	;# 
  1088  031D                     	;# 
  1089  031E                     	;# 
  1090  031F                     	;# 
  1091  038C                     	;# 
  1092  038D                     	;# 
  1093  038E                     	;# 
  1094  0391                     	;# 
  1095  0392                     	;# 
  1096  0393                     	;# 
  1097  0394                     	;# 
  1098  0395                     	;# 
  1099  0396                     	;# 
  1100  0397                     	;# 
  1101  0398                     	;# 
  1102  0399                     	;# 
  1103  039B                     	;# 
  1104  039C                     	;# 
  1105  039D                     	;# 
  1106  039E                     	;# 
  1107  039F                     	;# 
  1108  040E                     	;# 
  1109  0413                     	;# 
  1110  0413                     	;# 
  1111  0414                     	;# 
  1112  0414                     	;# 
  1113  0415                     	;# 
  1114  0416                     	;# 
  1115  0417                     	;# 
  1116  0418                     	;# 
  1117  041A                     	;# 
  1118  041A                     	;# 
  1119  041B                     	;# 
  1120  041B                     	;# 
  1121  041C                     	;# 
  1122  041D                     	;# 
  1123  041E                     	;# 
  1124  041F                     	;# 
  1125  0493                     	;# 
  1126  0493                     	;# 
  1127  0494                     	;# 
  1128  0495                     	;# 
  1129  0496                     	;# 
  1130  049A                     	;# 
  1131  049A                     	;# 
  1132  049B                     	;# 
  1133  049C                     	;# 
  1134  049D                     	;# 
  1135  050F                     	;# 
  1136  0510                     	;# 
  1137  0511                     	;# 
  1138  0512                     	;# 
  1139  0513                     	;# 
  1140  0514                     	;# 
  1141  0515                     	;# 
  1142  0516                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0592                     	;# 
  1147  0592                     	;# 
  1148  0593                     	;# 
  1149  0593                     	;# 
  1150  0594                     	;# 
  1151  0595                     	;# 
  1152  0595                     	;# 
  1153  0595                     	;# 
  1154  0596                     	;# 
  1155  0596                     	;# 
  1156  0597                     	;# 
  1157  0598                     	;# 
  1158  0598                     	;# 
  1159  0599                     	;# 
  1160  059A                     	;# 
  1161  059A                     	;# 
  1162  0617                     	;# 
  1163  0617                     	;# 
  1164  0618                     	;# 
  1165  0619                     	;# 
  1166  061A                     	;# 
  1167  061A                     	;# 
  1168  061B                     	;# 
  1169  061C                     	;# 
  1170  068D                     	;# 
  1171  068E                     	;# 
  1172  068F                     	;# 
  1173  0690                     	;# 
  1174  0691                     	;# 
  1175  0692                     	;# 
  1176  0693                     	;# 
  1177  0694                     	;# 
  1178  0695                     	;# 
  1179  0696                     	;# 
  1180  0697                     	;# 
  1181  0698                     	;# 
  1182  0699                     	;# 
  1183  069A                     	;# 
  1184  069B                     	;# 
  1185  069C                     	;# 
  1186  069D                     	;# 
  1187  069E                     	;# 
  1188  069F                     	;# 
  1189  070D                     	;# 
  1190  070E                     	;# 
  1191  070F                     	;# 
  1192  0710                     	;# 
  1193  0711                     	;# 
  1194  0712                     	;# 
  1195  0713                     	;# 
  1196  0714                     	;# 
  1197  0715                     	;# 
  1198  0716                     	;# 
  1199  0717                     	;# 
  1200  0718                     	;# 
  1201  0719                     	;# 
  1202  071A                     	;# 
  1203  071B                     	;# 
  1204  071C                     	;# 
  1205  071D                     	;# 
  1206  071E                     	;# 
  1207  071F                     	;# 
  1208  0794                     	;# 
  1209  0795                     	;# 
  1210  0796                     	;# 
  1211  0797                     	;# 
  1212  0798                     	;# 
  1213  0799                     	;# 
  1214  079A                     	;# 
  1215  079B                     	;# 
  1216  079C                     	;# 
  1217  079D                     	;# 
  1218  079E                     	;# 
  1219  079F                     	;# 
  1220  0D8E                     	;# 
  1221  0D8F                     	;# 
  1222  0D90                     	;# 
  1223  0D91                     	;# 
  1224  0D91                     	;# 
  1225  0D92                     	;# 
  1226  0D93                     	;# 
  1227  0D93                     	;# 
  1228  0D94                     	;# 
  1229  0D95                     	;# 
  1230  0D95                     	;# 
  1231  0D96                     	;# 
  1232  0D97                     	;# 
  1233  0D97                     	;# 
  1234  0D98                     	;# 
  1235  0D99                     	;# 
  1236  0D99                     	;# 
  1237  0D9A                     	;# 
  1238  0D9B                     	;# 
  1239  0D9C                     	;# 
  1240  0D9C                     	;# 
  1241  0D9D                     	;# 
  1242  0D9D                     	;# 
  1243  0D9E                     	;# 
  1244  0D9F                     	;# 
  1245  0DA0                     	;# 
  1246  0DA1                     	;# 
  1247  0DA1                     	;# 
  1248  0DA2                     	;# 
  1249  0DA3                     	;# 
  1250  0DA3                     	;# 
  1251  0DA4                     	;# 
  1252  0DA5                     	;# 
  1253  0DA5                     	;# 
  1254  0DA6                     	;# 
  1255  0DA7                     	;# 
  1256  0DA7                     	;# 
  1257  0DA8                     	;# 
  1258  0DA9                     	;# 
  1259  0DA9                     	;# 
  1260  0DAA                     	;# 
  1261  0DAB                     	;# 
  1262  0DAC                     	;# 
  1263  0DAC                     	;# 
  1264  0DAD                     	;# 
  1265  0DAD                     	;# 
  1266  0DAE                     	;# 
  1267  0DAF                     	;# 
  1268  0DB0                     	;# 
  1269  0E0F                     	;# 
  1270  0E10                     	;# 
  1271  0E11                     	;# 
  1272  0E12                     	;# 
  1273  0E13                     	;# 
  1274  0E14                     	;# 
  1275  0E15                     	;# 
  1276  0E16                     	;# 
  1277  0E17                     	;# 
  1278  0E19                     	;# 
  1279  0E19                     	;# 
  1280  0E19                     	;# 
  1281  0E1A                     	;# 
  1282  0E1B                     	;# 
  1283  0E1C                     	;# 
  1284  0E1C                     	;# 
  1285  0E1C                     	;# 
  1286  0E1D                     	;# 
  1287  0E1E                     	;# 
  1288  0E1F                     	;# 
  1289  0E1F                     	;# 
  1290  0E1F                     	;# 
  1291  0E20                     	;# 
  1292  0E21                     	;# 
  1293  0E22                     	;# 
  1294  0E24                     	;# 
  1295  0E25                     	;# 
  1296  0E28                     	;# 
  1297  0E29                     	;# 
  1298  0E2A                     	;# 
  1299  0E2B                     	;# 
  1300  0E2C                     	;# 
  1301  0E2D                     	;# 
  1302  0E2E                     	;# 
  1303  0E2F                     	;# 
  1304  0E30                     	;# 
  1305  0E31                     	;# 
  1306  0E32                     	;# 
  1307  0E33                     	;# 
  1308  0E34                     	;# 
  1309  0E35                     	;# 
  1310  0E90                     	;# 
  1311  0E91                     	;# 
  1312  0E92                     	;# 
  1313  0E94                     	;# 
  1314  0E95                     	;# 
  1315  0E9C                     	;# 
  1316  0E9D                     	;# 
  1317  0E9E                     	;# 
  1318  0E9F                     	;# 
  1319  0EA0                     	;# 
  1320  0EA1                     	;# 
  1321  0EA2                     	;# 
  1322  0EA3                     	;# 
  1323  0EA4                     	;# 
  1324  0EA5                     	;# 
  1325  0EA6                     	;# 
  1326  0EA7                     	;# 
  1327  0F0F                     	;# 
  1328  0F10                     	;# 
  1329  0F11                     	;# 
  1330  0F12                     	;# 
  1331  0F13                     	;# 
  1332  0F14                     	;# 
  1333  0F15                     	;# 
  1334  0F16                     	;# 
  1335  0F17                     	;# 
  1336  0F18                     	;# 
  1337  0F19                     	;# 
  1338  0F1A                     	;# 
  1339  0F1B                     	;# 
  1340  0F1C                     	;# 
  1341  0F1D                     	;# 
  1342  0F1E                     	;# 
  1343  0F1F                     	;# 
  1344  0F20                     	;# 
  1345  0F21                     	;# 
  1346  0F22                     	;# 
  1347  0F23                     	;# 
  1348  0F24                     	;# 
  1349  0F25                     	;# 
  1350  0F26                     	;# 
  1351  0F27                     	;# 
  1352  0F28                     	;# 
  1353  0F29                     	;# 
  1354  0F2A                     	;# 
  1355  0F2B                     	;# 
  1356  0F2C                     	;# 
  1357  0F2D                     	;# 
  1358  0FE4                     	;# 
  1359  0FE5                     	;# 
  1360  0FE6                     	;# 
  1361  0FE7                     	;# 
  1362  0FE8                     	;# 
  1363  0FE9                     	;# 
  1364  0FEA                     	;# 
  1365  0FEB                     	;# 
  1366  0FED                     	;# 
  1367  0FEE                     	;# 
  1368  0FEF                     	;# 
  1369  0000                     	;# 
  1370  0001                     	;# 
  1371  0002                     	;# 
  1372  0003                     	;# 
  1373  0004                     	;# 
  1374  0005                     	;# 
  1375  0006                     	;# 
  1376  0007                     	;# 
  1377  0008                     	;# 
  1378  0009                     	;# 
  1379  000A                     	;# 
  1380  000B                     	;# 
  1381  000C                     	;# 
  1382  000D                     	;# 
  1383  000E                     	;# 
  1384  0011                     	;# 
  1385  0012                     	;# 
  1386  0013                     	;# 
  1387  0014                     	;# 
  1388  0015                     	;# 
  1389  0016                     	;# 
  1390  0016                     	;# 
  1391  0017                     	;# 
  1392  0018                     	;# 
  1393  0019                     	;# 
  1394  001A                     	;# 
  1395  001A                     	;# 
  1396  001B                     	;# 
  1397  001B                     	;# 
  1398  001C                     	;# 
  1399  001D                     	;# 
  1400  001E                     	;# 
  1401  001F                     	;# 
  1402  008C                     	;# 
  1403  008D                     	;# 
  1404  008E                     	;# 
  1405  0091                     	;# 
  1406  0092                     	;# 
  1407  0093                     	;# 
  1408  0094                     	;# 
  1409  0095                     	;# 
  1410  0096                     	;# 
  1411  0097                     	;# 
  1412  0098                     	;# 
  1413  0099                     	;# 
  1414  009A                     	;# 
  1415  009B                     	;# 
  1416  009B                     	;# 
  1417  009C                     	;# 
  1418  009D                     	;# 
  1419  009E                     	;# 
  1420  009F                     	;# 
  1421  010C                     	;# 
  1422  010D                     	;# 
  1423  010E                     	;# 
  1424  010F                     	;# 
  1425  0110                     	;# 
  1426  0111                     	;# 
  1427  0112                     	;# 
  1428  0113                     	;# 
  1429  0114                     	;# 
  1430  0115                     	;# 
  1431  0116                     	;# 
  1432  0117                     	;# 
  1433  0118                     	;# 
  1434  0119                     	;# 
  1435  011A                     	;# 
  1436  011B                     	;# 
  1437  011C                     	;# 
  1438  011D                     	;# 
  1439  011E                     	;# 
  1440  011F                     	;# 
  1441  018C                     	;# 
  1442  018D                     	;# 
  1443  018E                     	;# 
  1444  0191                     	;# 
  1445  0191                     	;# 
  1446  0192                     	;# 
  1447  0193                     	;# 
  1448  0193                     	;# 
  1449  0194                     	;# 
  1450  0195                     	;# 
  1451  0196                     	;# 
  1452  0197                     	;# 
  1453  0199                     	;# 
  1454  0199                     	;# 
  1455  0199                     	;# 
  1456  019A                     	;# 
  1457  019A                     	;# 
  1458  019A                     	;# 
  1459  019B                     	;# 
  1460  019B                     	;# 
  1461  019B                     	;# 
  1462  019B                     	;# 
  1463  019B                     	;# 
  1464  019C                     	;# 
  1465  019C                     	;# 
  1466  019C                     	;# 
  1467  019D                     	;# 
  1468  019D                     	;# 
  1469  019D                     	;# 
  1470  019E                     	;# 
  1471  019E                     	;# 
  1472  019E                     	;# 
  1473  019F                     	;# 
  1474  019F                     	;# 
  1475  019F                     	;# 
  1476  019F                     	;# 
  1477  019F                     	;# 
  1478  020C                     	;# 
  1479  020D                     	;# 
  1480  020E                     	;# 
  1481  0211                     	;# 
  1482  0211                     	;# 
  1483  0212                     	;# 
  1484  0212                     	;# 
  1485  0213                     	;# 
  1486  0213                     	;# 
  1487  0214                     	;# 
  1488  0214                     	;# 
  1489  0215                     	;# 
  1490  0215                     	;# 
  1491  0215                     	;# 
  1492  0215                     	;# 
  1493  0216                     	;# 
  1494  0216                     	;# 
  1495  0217                     	;# 
  1496  0217                     	;# 
  1497  021D                     	;# 
  1498  021E                     	;# 
  1499  021F                     	;# 
  1500  028C                     	;# 
  1501  028D                     	;# 
  1502  028E                     	;# 
  1503  0291                     	;# 
  1504  0291                     	;# 
  1505  0292                     	;# 
  1506  0293                     	;# 
  1507  0294                     	;# 
  1508  0298                     	;# 
  1509  0298                     	;# 
  1510  0299                     	;# 
  1511  029A                     	;# 
  1512  029B                     	;# 
  1513  029E                     	;# 
  1514  030C                     	;# 
  1515  030D                     	;# 
  1516  030E                     	;# 
  1517  031B                     	;# 
  1518  031C                     	;# 
  1519  031D                     	;# 
  1520  031E                     	;# 
  1521  031F                     	;# 
  1522  038C                     	;# 
  1523  038D                     	;# 
  1524  038E                     	;# 
  1525  0391                     	;# 
  1526  0392                     	;# 
  1527  0393                     	;# 
  1528  0394                     	;# 
  1529  0395                     	;# 
  1530  0396                     	;# 
  1531  0397                     	;# 
  1532  0398                     	;# 
  1533  0399                     	;# 
  1534  039B                     	;# 
  1535  039C                     	;# 
  1536  039D                     	;# 
  1537  039E                     	;# 
  1538  039F                     	;# 
  1539  040E                     	;# 
  1540  0413                     	;# 
  1541  0413                     	;# 
  1542  0414                     	;# 
  1543  0414                     	;# 
  1544  0415                     	;# 
  1545  0416                     	;# 
  1546  0417                     	;# 
  1547  0418                     	;# 
  1548  041A                     	;# 
  1549  041A                     	;# 
  1550  041B                     	;# 
  1551  041B                     	;# 
  1552  041C                     	;# 
  1553  041D                     	;# 
  1554  041E                     	;# 
  1555  041F                     	;# 
  1556  0493                     	;# 
  1557  0493                     	;# 
  1558  0494                     	;# 
  1559  0495                     	;# 
  1560  0496                     	;# 
  1561  049A                     	;# 
  1562  049A                     	;# 
  1563  049B                     	;# 
  1564  049C                     	;# 
  1565  049D                     	;# 
  1566  050F                     	;# 
  1567  0510                     	;# 
  1568  0511                     	;# 
  1569  0512                     	;# 
  1570  0513                     	;# 
  1571  0514                     	;# 
  1572  0515                     	;# 
  1573  0516                     	;# 
  1574  0590                     	;# 
  1575  0591                     	;# 
  1576  0592                     	;# 
  1577  0592                     	;# 
  1578  0592                     	;# 
  1579  0593                     	;# 
  1580  0593                     	;# 
  1581  0594                     	;# 
  1582  0595                     	;# 
  1583  0595                     	;# 
  1584  0595                     	;# 
  1585  0596                     	;# 
  1586  0596                     	;# 
  1587  0597                     	;# 
  1588  0598                     	;# 
  1589  0598                     	;# 
  1590  0599                     	;# 
  1591  059A                     	;# 
  1592  059A                     	;# 
  1593  0617                     	;# 
  1594  0617                     	;# 
  1595  0618                     	;# 
  1596  0619                     	;# 
  1597  061A                     	;# 
  1598  061A                     	;# 
  1599  061B                     	;# 
  1600  061C                     	;# 
  1601  068D                     	;# 
  1602  068E                     	;# 
  1603  068F                     	;# 
  1604  0690                     	;# 
  1605  0691                     	;# 
  1606  0692                     	;# 
  1607  0693                     	;# 
  1608  0694                     	;# 
  1609  0695                     	;# 
  1610  0696                     	;# 
  1611  0697                     	;# 
  1612  0698                     	;# 
  1613  0699                     	;# 
  1614  069A                     	;# 
  1615  069B                     	;# 
  1616  069C                     	;# 
  1617  069D                     	;# 
  1618  069E                     	;# 
  1619  069F                     	;# 
  1620  070D                     	;# 
  1621  070E                     	;# 
  1622  070F                     	;# 
  1623  0710                     	;# 
  1624  0711                     	;# 
  1625  0712                     	;# 
  1626  0713                     	;# 
  1627  0714                     	;# 
  1628  0715                     	;# 
  1629  0716                     	;# 
  1630  0717                     	;# 
  1631  0718                     	;# 
  1632  0719                     	;# 
  1633  071A                     	;# 
  1634  071B                     	;# 
  1635  071C                     	;# 
  1636  071D                     	;# 
  1637  071E                     	;# 
  1638  071F                     	;# 
  1639  0794                     	;# 
  1640  0795                     	;# 
  1641  0796                     	;# 
  1642  0797                     	;# 
  1643  0798                     	;# 
  1644  0799                     	;# 
  1645  079A                     	;# 
  1646  079B                     	;# 
  1647  079C                     	;# 
  1648  079D                     	;# 
  1649  079E                     	;# 
  1650  079F                     	;# 
  1651  0D8E                     	;# 
  1652  0D8F                     	;# 
  1653  0D90                     	;# 
  1654  0D91                     	;# 
  1655  0D91                     	;# 
  1656  0D92                     	;# 
  1657  0D93                     	;# 
  1658  0D93                     	;# 
  1659  0D94                     	;# 
  1660  0D95                     	;# 
  1661  0D95                     	;# 
  1662  0D96                     	;# 
  1663  0D97                     	;# 
  1664  0D97                     	;# 
  1665  0D98                     	;# 
  1666  0D99                     	;# 
  1667  0D99                     	;# 
  1668  0D9A                     	;# 
  1669  0D9B                     	;# 
  1670  0D9C                     	;# 
  1671  0D9C                     	;# 
  1672  0D9D                     	;# 
  1673  0D9D                     	;# 
  1674  0D9E                     	;# 
  1675  0D9F                     	;# 
  1676  0DA0                     	;# 
  1677  0DA1                     	;# 
  1678  0DA1                     	;# 
  1679  0DA2                     	;# 
  1680  0DA3                     	;# 
  1681  0DA3                     	;# 
  1682  0DA4                     	;# 
  1683  0DA5                     	;# 
  1684  0DA5                     	;# 
  1685  0DA6                     	;# 
  1686  0DA7                     	;# 
  1687  0DA7                     	;# 
  1688  0DA8                     	;# 
  1689  0DA9                     	;# 
  1690  0DA9                     	;# 
  1691  0DAA                     	;# 
  1692  0DAB                     	;# 
  1693  0DAC                     	;# 
  1694  0DAC                     	;# 
  1695  0DAD                     	;# 
  1696  0DAD                     	;# 
  1697  0DAE                     	;# 
  1698  0DAF                     	;# 
  1699  0DB0                     	;# 
  1700  0E0F                     	;# 
  1701  0E10                     	;# 
  1702  0E11                     	;# 
  1703  0E12                     	;# 
  1704  0E13                     	;# 
  1705  0E14                     	;# 
  1706  0E15                     	;# 
  1707  0E16                     	;# 
  1708  0E17                     	;# 
  1709  0E19                     	;# 
  1710  0E19                     	;# 
  1711  0E19                     	;# 
  1712  0E1A                     	;# 
  1713  0E1B                     	;# 
  1714  0E1C                     	;# 
  1715  0E1C                     	;# 
  1716  0E1C                     	;# 
  1717  0E1D                     	;# 
  1718  0E1E                     	;# 
  1719  0E1F                     	;# 
  1720  0E1F                     	;# 
  1721  0E1F                     	;# 
  1722  0E20                     	;# 
  1723  0E21                     	;# 
  1724  0E22                     	;# 
  1725  0E24                     	;# 
  1726  0E25                     	;# 
  1727  0E28                     	;# 
  1728  0E29                     	;# 
  1729  0E2A                     	;# 
  1730  0E2B                     	;# 
  1731  0E2C                     	;# 
  1732  0E2D                     	;# 
  1733  0E2E                     	;# 
  1734  0E2F                     	;# 
  1735  0E30                     	;# 
  1736  0E31                     	;# 
  1737  0E32                     	;# 
  1738  0E33                     	;# 
  1739  0E34                     	;# 
  1740  0E35                     	;# 
  1741  0E90                     	;# 
  1742  0E91                     	;# 
  1743  0E92                     	;# 
  1744  0E94                     	;# 
  1745  0E95                     	;# 
  1746  0E9C                     	;# 
  1747  0E9D                     	;# 
  1748  0E9E                     	;# 
  1749  0E9F                     	;# 
  1750  0EA0                     	;# 
  1751  0EA1                     	;# 
  1752  0EA2                     	;# 
  1753  0EA3                     	;# 
  1754  0EA4                     	;# 
  1755  0EA5                     	;# 
  1756  0EA6                     	;# 
  1757  0EA7                     	;# 
  1758  0F0F                     	;# 
  1759  0F10                     	;# 
  1760  0F11                     	;# 
  1761  0F12                     	;# 
  1762  0F13                     	;# 
  1763  0F14                     	;# 
  1764  0F15                     	;# 
  1765  0F16                     	;# 
  1766  0F17                     	;# 
  1767  0F18                     	;# 
  1768  0F19                     	;# 
  1769  0F1A                     	;# 
  1770  0F1B                     	;# 
  1771  0F1C                     	;# 
  1772  0F1D                     	;# 
  1773  0F1E                     	;# 
  1774  0F1F                     	;# 
  1775  0F20                     	;# 
  1776  0F21                     	;# 
  1777  0F22                     	;# 
  1778  0F23                     	;# 
  1779  0F24                     	;# 
  1780  0F25                     	;# 
  1781  0F26                     	;# 
  1782  0F27                     	;# 
  1783  0F28                     	;# 
  1784  0F29                     	;# 
  1785  0F2A                     	;# 
  1786  0F2B                     	;# 
  1787  0F2C                     	;# 
  1788  0F2D                     	;# 
  1789  0FE4                     	;# 
  1790  0FE5                     	;# 
  1791  0FE6                     	;# 
  1792  0FE7                     	;# 
  1793  0FE8                     	;# 
  1794  0FE9                     	;# 
  1795  0FEA                     	;# 
  1796  0FEB                     	;# 
  1797  0FED                     	;# 
  1798  0FEE                     	;# 
  1799  0FEF                     	;# 
  1800  0000                     	;# 
  1801  0001                     	;# 
  1802  0002                     	;# 
  1803  0003                     	;# 
  1804  0004                     	;# 
  1805  0005                     	;# 
  1806  0006                     	;# 
  1807  0007                     	;# 
  1808  0008                     	;# 
  1809  0009                     	;# 
  1810  000A                     	;# 
  1811  000B                     	;# 
  1812  000C                     	;# 
  1813  000D                     	;# 
  1814  000E                     	;# 
  1815  0011                     	;# 
  1816  0012                     	;# 
  1817  0013                     	;# 
  1818  0014                     	;# 
  1819  0015                     	;# 
  1820  0016                     	;# 
  1821  0016                     	;# 
  1822  0017                     	;# 
  1823  0018                     	;# 
  1824  0019                     	;# 
  1825  001A                     	;# 
  1826  001A                     	;# 
  1827  001B                     	;# 
  1828  001B                     	;# 
  1829  001C                     	;# 
  1830  001D                     	;# 
  1831  001E                     	;# 
  1832  001F                     	;# 
  1833  008C                     	;# 
  1834  008D                     	;# 
  1835  008E                     	;# 
  1836  0091                     	;# 
  1837  0092                     	;# 
  1838  0093                     	;# 
  1839  0094                     	;# 
  1840  0095                     	;# 
  1841  0096                     	;# 
  1842  0097                     	;# 
  1843  0098                     	;# 
  1844  0099                     	;# 
  1845  009A                     	;# 
  1846  009B                     	;# 
  1847  009B                     	;# 
  1848  009C                     	;# 
  1849  009D                     	;# 
  1850  009E                     	;# 
  1851  009F                     	;# 
  1852  010C                     	;# 
  1853  010D                     	;# 
  1854  010E                     	;# 
  1855  010F                     	;# 
  1856  0110                     	;# 
  1857  0111                     	;# 
  1858  0112                     	;# 
  1859  0113                     	;# 
  1860  0114                     	;# 
  1861  0115                     	;# 
  1862  0116                     	;# 
  1863  0117                     	;# 
  1864  0118                     	;# 
  1865  0119                     	;# 
  1866  011A                     	;# 
  1867  011B                     	;# 
  1868  011C                     	;# 
  1869  011D                     	;# 
  1870  011E                     	;# 
  1871  011F                     	;# 
  1872  018C                     	;# 
  1873  018D                     	;# 
  1874  018E                     	;# 
  1875  0191                     	;# 
  1876  0191                     	;# 
  1877  0192                     	;# 
  1878  0193                     	;# 
  1879  0193                     	;# 
  1880  0194                     	;# 
  1881  0195                     	;# 
  1882  0196                     	;# 
  1883  0197                     	;# 
  1884  0199                     	;# 
  1885  0199                     	;# 
  1886  0199                     	;# 
  1887  019A                     	;# 
  1888  019A                     	;# 
  1889  019A                     	;# 
  1890  019B                     	;# 
  1891  019B                     	;# 
  1892  019B                     	;# 
  1893  019B                     	;# 
  1894  019B                     	;# 
  1895  019C                     	;# 
  1896  019C                     	;# 
  1897  019C                     	;# 
  1898  019D                     	;# 
  1899  019D                     	;# 
  1900  019D                     	;# 
  1901  019E                     	;# 
  1902  019E                     	;# 
  1903  019E                     	;# 
  1904  019F                     	;# 
  1905  019F                     	;# 
  1906  019F                     	;# 
  1907  019F                     	;# 
  1908  019F                     	;# 
  1909  020C                     	;# 
  1910  020D                     	;# 
  1911  020E                     	;# 
  1912  0211                     	;# 
  1913  0211                     	;# 
  1914  0212                     	;# 
  1915  0212                     	;# 
  1916  0213                     	;# 
  1917  0213                     	;# 
  1918  0214                     	;# 
  1919  0214                     	;# 
  1920  0215                     	;# 
  1921  0215                     	;# 
  1922  0215                     	;# 
  1923  0215                     	;# 
  1924  0216                     	;# 
  1925  0216                     	;# 
  1926  0217                     	;# 
  1927  0217                     	;# 
  1928  021D                     	;# 
  1929  021E                     	;# 
  1930  021F                     	;# 
  1931  028C                     	;# 
  1932  028D                     	;# 
  1933  028E                     	;# 
  1934  0291                     	;# 
  1935  0291                     	;# 
  1936  0292                     	;# 
  1937  0293                     	;# 
  1938  0294                     	;# 
  1939  0298                     	;# 
  1940  0298                     	;# 
  1941  0299                     	;# 
  1942  029A                     	;# 
  1943  029B                     	;# 
  1944  029E                     	;# 
  1945  030C                     	;# 
  1946  030D                     	;# 
  1947  030E                     	;# 
  1948  031B                     	;# 
  1949  031C                     	;# 
  1950  031D                     	;# 
  1951  031E                     	;# 
  1952  031F                     	;# 
  1953  038C                     	;# 
  1954  038D                     	;# 
  1955  038E                     	;# 
  1956  0391                     	;# 
  1957  0392                     	;# 
  1958  0393                     	;# 
  1959  0394                     	;# 
  1960  0395                     	;# 
  1961  0396                     	;# 
  1962  0397                     	;# 
  1963  0398                     	;# 
  1964  0399                     	;# 
  1965  039B                     	;# 
  1966  039C                     	;# 
  1967  039D                     	;# 
  1968  039E                     	;# 
  1969  039F                     	;# 
  1970  040E                     	;# 
  1971  0413                     	;# 
  1972  0413                     	;# 
  1973  0414                     	;# 
  1974  0414                     	;# 
  1975  0415                     	;# 
  1976  0416                     	;# 
  1977  0417                     	;# 
  1978  0418                     	;# 
  1979  041A                     	;# 
  1980  041A                     	;# 
  1981  041B                     	;# 
  1982  041B                     	;# 
  1983  041C                     	;# 
  1984  041D                     	;# 
  1985  041E                     	;# 
  1986  041F                     	;# 
  1987  0493                     	;# 
  1988  0493                     	;# 
  1989  0494                     	;# 
  1990  0495                     	;# 
  1991  0496                     	;# 
  1992  049A                     	;# 
  1993  049A                     	;# 
  1994  049B                     	;# 
  1995  049C                     	;# 
  1996  049D                     	;# 
  1997  050F                     	;# 
  1998  0510                     	;# 
  1999  0511                     	;# 
  2000  0512                     	;# 
  2001  0513                     	;# 
  2002  0514                     	;# 
  2003  0515                     	;# 
  2004  0516                     	;# 
  2005  0590                     	;# 
  2006  0591                     	;# 
  2007  0592                     	;# 
  2008  0592                     	;# 
  2009  0592                     	;# 
  2010  0593                     	;# 
  2011  0593                     	;# 
  2012  0594                     	;# 
  2013  0595                     	;# 
  2014  0595                     	;# 
  2015  0595                     	;# 
  2016  0596                     	;# 
  2017  0596                     	;# 
  2018  0597                     	;# 
  2019  0598                     	;# 
  2020  0598                     	;# 
  2021  0599                     	;# 
  2022  059A                     	;# 
  2023  059A                     	;# 
  2024  0617                     	;# 
  2025  0617                     	;# 
  2026  0618                     	;# 
  2027  0619                     	;# 
  2028  061A                     	;# 
  2029  061A                     	;# 
  2030  061B                     	;# 
  2031  061C                     	;# 
  2032  068D                     	;# 
  2033  068E                     	;# 
  2034  068F                     	;# 
  2035  0690                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  0695                     	;# 
  2041  0696                     	;# 
  2042  0697                     	;# 
  2043  0698                     	;# 
  2044  0699                     	;# 
  2045  069A                     	;# 
  2046  069B                     	;# 
  2047  069C                     	;# 
  2048  069D                     	;# 
  2049  069E                     	;# 
  2050  069F                     	;# 
  2051  070D                     	;# 
  2052  070E                     	;# 
  2053  070F                     	;# 
  2054  0710                     	;# 
  2055  0711                     	;# 
  2056  0712                     	;# 
  2057  0713                     	;# 
  2058  0714                     	;# 
  2059  0715                     	;# 
  2060  0716                     	;# 
  2061  0717                     	;# 
  2062  0718                     	;# 
  2063  0719                     	;# 
  2064  071A                     	;# 
  2065  071B                     	;# 
  2066  071C                     	;# 
  2067  071D                     	;# 
  2068  071E                     	;# 
  2069  071F                     	;# 
  2070  0794                     	;# 
  2071  0795                     	;# 
  2072  0796                     	;# 
  2073  0797                     	;# 
  2074  0798                     	;# 
  2075  0799                     	;# 
  2076  079A                     	;# 
  2077  079B                     	;# 
  2078  079C                     	;# 
  2079  079D                     	;# 
  2080  079E                     	;# 
  2081  079F                     	;# 
  2082  0D8E                     	;# 
  2083  0D8F                     	;# 
  2084  0D90                     	;# 
  2085  0D91                     	;# 
  2086  0D91                     	;# 
  2087  0D92                     	;# 
  2088  0D93                     	;# 
  2089  0D93                     	;# 
  2090  0D94                     	;# 
  2091  0D95                     	;# 
  2092  0D95                     	;# 
  2093  0D96                     	;# 
  2094  0D97                     	;# 
  2095  0D97                     	;# 
  2096  0D98                     	;# 
  2097  0D99                     	;# 
  2098  0D99                     	;# 
  2099  0D9A                     	;# 
  2100  0D9B                     	;# 
  2101  0D9C                     	;# 
  2102  0D9C                     	;# 
  2103  0D9D                     	;# 
  2104  0D9D                     	;# 
  2105  0D9E                     	;# 
  2106  0D9F                     	;# 
  2107  0DA0                     	;# 
  2108  0DA1                     	;# 
  2109  0DA1                     	;# 
  2110  0DA2                     	;# 
  2111  0DA3                     	;# 
  2112  0DA3                     	;# 
  2113  0DA4                     	;# 
  2114  0DA5                     	;# 
  2115  0DA5                     	;# 
  2116  0DA6                     	;# 
  2117  0DA7                     	;# 
  2118  0DA7                     	;# 
  2119  0DA8                     	;# 
  2120  0DA9                     	;# 
  2121  0DA9                     	;# 
  2122  0DAA                     	;# 
  2123  0DAB                     	;# 
  2124  0DAC                     	;# 
  2125  0DAC                     	;# 
  2126  0DAD                     	;# 
  2127  0DAD                     	;# 
  2128  0DAE                     	;# 
  2129  0DAF                     	;# 
  2130  0DB0                     	;# 
  2131  0E0F                     	;# 
  2132  0E10                     	;# 
  2133  0E11                     	;# 
  2134  0E12                     	;# 
  2135  0E13                     	;# 
  2136  0E14                     	;# 
  2137  0E15                     	;# 
  2138  0E16                     	;# 
  2139  0E17                     	;# 
  2140  0E19                     	;# 
  2141  0E19                     	;# 
  2142  0E19                     	;# 
  2143  0E1A                     	;# 
  2144  0E1B                     	;# 
  2145  0E1C                     	;# 
  2146  0E1C                     	;# 
  2147  0E1C                     	;# 
  2148  0E1D                     	;# 
  2149  0E1E                     	;# 
  2150  0E1F                     	;# 
  2151  0E1F                     	;# 
  2152  0E1F                     	;# 
  2153  0E20                     	;# 
  2154  0E21                     	;# 
  2155  0E22                     	;# 
  2156  0E24                     	;# 
  2157  0E25                     	;# 
  2158  0E28                     	;# 
  2159  0E29                     	;# 
  2160  0E2A                     	;# 
  2161  0E2B                     	;# 
  2162  0E2C                     	;# 
  2163  0E2D                     	;# 
  2164  0E2E                     	;# 
  2165  0E2F                     	;# 
  2166  0E30                     	;# 
  2167  0E31                     	;# 
  2168  0E32                     	;# 
  2169  0E33                     	;# 
  2170  0E34                     	;# 
  2171  0E35                     	;# 
  2172  0E90                     	;# 
  2173  0E91                     	;# 
  2174  0E92                     	;# 
  2175  0E94                     	;# 
  2176  0E95                     	;# 
  2177  0E9C                     	;# 
  2178  0E9D                     	;# 
  2179  0E9E                     	;# 
  2180  0E9F                     	;# 
  2181  0EA0                     	;# 
  2182  0EA1                     	;# 
  2183  0EA2                     	;# 
  2184  0EA3                     	;# 
  2185  0EA4                     	;# 
  2186  0EA5                     	;# 
  2187  0EA6                     	;# 
  2188  0EA7                     	;# 
  2189  0F0F                     	;# 
  2190  0F10                     	;# 
  2191  0F11                     	;# 
  2192  0F12                     	;# 
  2193  0F13                     	;# 
  2194  0F14                     	;# 
  2195  0F15                     	;# 
  2196  0F16                     	;# 
  2197  0F17                     	;# 
  2198  0F18                     	;# 
  2199  0F19                     	;# 
  2200  0F1A                     	;# 
  2201  0F1B                     	;# 
  2202  0F1C                     	;# 
  2203  0F1D                     	;# 
  2204  0F1E                     	;# 
  2205  0F1F                     	;# 
  2206  0F20                     	;# 
  2207  0F21                     	;# 
  2208  0F22                     	;# 
  2209  0F23                     	;# 
  2210  0F24                     	;# 
  2211  0F25                     	;# 
  2212  0F26                     	;# 
  2213  0F27                     	;# 
  2214  0F28                     	;# 
  2215  0F29                     	;# 
  2216  0F2A                     	;# 
  2217  0F2B                     	;# 
  2218  0F2C                     	;# 
  2219  0F2D                     	;# 
  2220  0FE4                     	;# 
  2221  0FE5                     	;# 
  2222  0FE6                     	;# 
  2223  0FE7                     	;# 
  2224  0FE8                     	;# 
  2225  0FE9                     	;# 
  2226  0FEA                     	;# 
  2227  0FEB                     	;# 
  2228  0FED                     	;# 
  2229  0FEE                     	;# 
  2230  0FEF                     	;# 
  2231                           
  2232 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  2233  0000                     
  2234 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  2235  0000                     
  2236 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  2237  0000                     
  2238                           	psect	nvBANK0
  2239  0053                     __pnvBANK0:
  2240  0053                     _EUSART_ErrorHandler:
  2241  0053                     	ds	2
  2242  0055                     _EUSART_OverrunErrorHandler:
  2243  0055                     	ds	2
  2244  0057                     _EUSART_FramingErrorHandler:
  2245  0057                     	ds	2
  2246  0011                     _PIR1bits	set	17
  2247  0097                     _WDTCON	set	151
  2248  0098                     _OSCTUNE	set	152
  2249  009A                     _OSCSTAT	set	154
  2250  0099                     _OSCCON	set	153
  2251  0095                     _OPTION_REGbits	set	149
  2252  008E                     _TRISC	set	142
  2253  008D                     _TRISB	set	141
  2254  008C                     _TRISA	set	140
  2255  010D                     _LATBbits	set	269
  2256  010E                     _LATCbits	set	270
  2257  010C                     _LATAbits	set	268
  2258  010E                     _LATC	set	270
  2259  010D                     _LATB	set	269
  2260  010C                     _LATA	set	268
  2261  018C                     _ANSELA	set	396
  2262  018D                     _ANSELB	set	397
  2263  018E                     _ANSELC	set	398
  2264  019A                     _TX1REG	set	410
  2265  0199                     _RC1REG	set	409
  2266  019D                     _RC1STAbits	set	413
  2267  019E                     _TX1STAbits	set	414
  2268  019C                     _SPBRGH	set	412
  2269  019B                     _SPBRGL	set	411
  2270  019E                     _TX1STA	set	414
  2271  019D                     _RC1STA	set	413
  2272  019F                     _BAUD1CON	set	415
  2273  021D                     _BORCON	set	541
  2274  020E                     _WPUC	set	526
  2275  020C                     _WPUA	set	524
  2276  020D                     _WPUB	set	525
  2277  028E                     _ODCONC	set	654
  2278  028D                     _ODCONB	set	653
  2279  028C                     _ODCONA	set	652
  2280  030E                     _SLRCONC	set	782
  2281  030D                     _SLRCONB	set	781
  2282  030C                     _SLRCONA	set	780
  2283  038E                     _INLVLC	set	910
  2284  038D                     _INLVLB	set	909
  2285  038C                     _INLVLA	set	908
  2286  0E24                     _RXPPS	set	3620
  2287  0E9C                     _RB4PPS	set	3740
  2288                           
  2289                           	psect	cinit
  2290  07FB                     start_initialization:	
  2291                           ; #config settings
  2292                           
  2293  07FB                     __initialization:
  2294                           
  2295                           ; Clear objects allocated to BANK0
  2296  07FB  0020               	movlb	0	; select bank0
  2297  07FC  01D9               	clrf	__pbssBANK0& (0+127)
  2298  07FD                     end_of_initialization:	
  2299                           ;End of C runtime variable initialization code
  2300                           
  2301  07FD                     __end_of__initialization:
  2302  07FD  0020               	movlb	0
  2303  07FE  3183  2B33         	ljmp	_main	;jump to C main() function
  2304                           
  2305                           	psect	bssBANK0
  2306  0059                     __pbssBANK0:
  2307  0059                     _eusartRxLastError:
  2308  0059                     	ds	1
  2309                           
  2310                           	psect	cstackCOMMON
  2311  0070                     __pcstackCOMMON:
  2312  0070                     ?_EUSART_SetFramingErrorHandler:
  2313  0070                     ?_EUSART_SetOverrunErrorHandler:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316  0070                     ?_EUSART_SetErrorHandler:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319  0070                     ?_OSCILLATOR_Initialize:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322  0070                     ??_OSCILLATOR_Initialize:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325  0070                     ?_WDT_Initialize:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328  0070                     ??_WDT_Initialize:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331  0070                     ?_DELAY_milliseconds:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334  0070                     ?_EUSART_Initialize:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337  0070                     ?_EUSART_is_rx_ready:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340  0070                     ??_EUSART_is_rx_ready:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343  0070                     ?_EUSART_Read:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346  0070                     ??_EUSART_Read:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349  0070                     ?_EUSART_Write:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0070                     ??_EUSART_Write:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0070                     ?_PIN_MANAGER_Initialize:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0070                     ??_PIN_MANAGER_Initialize:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0070                     ?_SYSTEM_Initialize:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0070                     ?_displayClear:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0070                     ??_displayClear:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0070                     ?_displayZero:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0070                     ??_displayZero:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0070                     ?_displayOne:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0070                     ??_displayOne:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0070                     ?_displayTwo:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0070                     ??_displayTwo:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0070                     ?_displayThree:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0070                     ??_displayThree:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0070                     ?_displayFour:	
  2395                           ; 1 bytes @ 0x0
  2396                           
  2397  0070                     ??_displayFour:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0070                     ?_displayFive:	
  2401                           ; 1 bytes @ 0x0
  2402                           
  2403  0070                     ??_displayFive:	
  2404                           ; 1 bytes @ 0x0
  2405                           
  2406  0070                     ?_displaySix:	
  2407                           ; 1 bytes @ 0x0
  2408                           
  2409  0070                     ??_displaySix:	
  2410                           ; 1 bytes @ 0x0
  2411                           
  2412  0070                     ?_displaySeven:	
  2413                           ; 1 bytes @ 0x0
  2414                           
  2415  0070                     ??_displaySeven:	
  2416                           ; 1 bytes @ 0x0
  2417                           
  2418  0070                     ?_displayEight:	
  2419                           ; 1 bytes @ 0x0
  2420                           
  2421  0070                     ??_displayEight:	
  2422                           ; 1 bytes @ 0x0
  2423                           
  2424  0070                     ?_displayNine:	
  2425                           ; 1 bytes @ 0x0
  2426                           
  2427  0070                     ??_displayNine:	
  2428                           ; 1 bytes @ 0x0
  2429                           
  2430  0070                     ?_selectDIG:	
  2431                           ; 1 bytes @ 0x0
  2432                           
  2433  0070                     ?_main:	
  2434                           ; 1 bytes @ 0x0
  2435                           
  2436  0070                     ?___awdiv:	
  2437                           ; 1 bytes @ 0x0
  2438                           
  2439  0070                     EUSART_Write@txData:	
  2440                           ; 2 bytes @ 0x0
  2441                           
  2442  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2446                           ; 2 bytes @ 0x0
  2447                           
  2448  0070                     EUSART_SetErrorHandler@interruptHandler:	
  2449                           ; 2 bytes @ 0x0
  2450                           
  2451  0070                     selectDIG@dig:	
  2452                           ; 2 bytes @ 0x0
  2453                           
  2454  0070                     DELAY_milliseconds@milliseconds:	
  2455                           ; 2 bytes @ 0x0
  2456                           
  2457  0070                     ___awdiv@divisor:	
  2458                           ; 2 bytes @ 0x0
  2459                           
  2460                           
  2461                           ; 2 bytes @ 0x0
  2462  0070                     	ds	2
  2463  0072                     ??_EUSART_SetFramingErrorHandler:
  2464  0072                     ??_EUSART_SetOverrunErrorHandler:	
  2465                           ; 1 bytes @ 0x2
  2466                           
  2467  0072                     ??_EUSART_SetErrorHandler:	
  2468                           ; 1 bytes @ 0x2
  2469                           
  2470  0072                     ??_DELAY_milliseconds:	
  2471                           ; 1 bytes @ 0x2
  2472                           
  2473  0072                     ??_EUSART_Initialize:	
  2474                           ; 1 bytes @ 0x2
  2475                           
  2476  0072                     ??_SYSTEM_Initialize:	
  2477                           ; 1 bytes @ 0x2
  2478                           
  2479  0072                     ?_displaySegments:	
  2480                           ; 1 bytes @ 0x2
  2481                           
  2482  0072                     ??_selectDIG:	
  2483                           ; 1 bytes @ 0x2
  2484                           
  2485  0072                     ?_displayRoll:	
  2486                           ; 1 bytes @ 0x2
  2487                           
  2488  0072                     displaySegments@num:	
  2489                           ; 1 bytes @ 0x2
  2490                           
  2491  0072                     displayRoll@cnt:	
  2492                           ; 2 bytes @ 0x2
  2493                           
  2494  0072                     ___awdiv@dividend:	
  2495                           ; 2 bytes @ 0x2
  2496                           
  2497                           
  2498                           ; 2 bytes @ 0x2
  2499  0072                     	ds	2
  2500  0074                     ??_displaySegments:
  2501  0074                     ??_displayRoll:	
  2502                           ; 1 bytes @ 0x4
  2503                           
  2504  0074                     ??___awdiv:	
  2505                           ; 1 bytes @ 0x4
  2506                           
  2507                           
  2508                           ; 1 bytes @ 0x4
  2509  0074                     	ds	1
  2510  0075                     ___awdiv@counter:
  2511                           
  2512                           ; 1 bytes @ 0x5
  2513  0075                     	ds	1
  2514  0076                     ___awdiv@sign:
  2515                           
  2516                           ; 1 bytes @ 0x6
  2517  0076                     	ds	1
  2518  0077                     ___awdiv@quotient:
  2519                           
  2520                           ; 2 bytes @ 0x7
  2521  0077                     	ds	2
  2522  0079                     ?___awmod:
  2523  0079                     ___awmod@divisor:	
  2524                           ; 2 bytes @ 0x9
  2525                           
  2526                           
  2527                           ; 2 bytes @ 0x9
  2528  0079                     	ds	2
  2529  007B                     ___awmod@dividend:
  2530                           
  2531                           ; 2 bytes @ 0xB
  2532  007B                     	ds	2
  2533  007D                     ??___awmod:
  2534                           
  2535                           ; 1 bytes @ 0xD
  2536  007D                     	ds	1
  2537                           
  2538                           	psect	cstackBANK0
  2539  0020                     __pcstackBANK0:
  2540  0020                     ___awmod@counter:
  2541                           
  2542                           ; 1 bytes @ 0x0
  2543  0020                     	ds	1
  2544  0021                     ___awmod@sign:
  2545                           
  2546                           ; 1 bytes @ 0x1
  2547  0021                     	ds	1
  2548  0022                     ?_displayLotteryResult:
  2549  0022                     displayLotteryResult@val:	
  2550                           ; 1 bytes @ 0x2
  2551                           
  2552                           
  2553                           ; 2 bytes @ 0x2
  2554  0022                     	ds	2
  2555  0024                     ??_displayLotteryResult:
  2556                           
  2557                           ; 1 bytes @ 0x4
  2558  0024                     	ds	1
  2559  0025                     displayLotteryResult@dig_4:
  2560                           
  2561                           ; 2 bytes @ 0x5
  2562  0025                     	ds	2
  2563  0027                     displayLotteryResult@dig_3:
  2564                           
  2565                           ; 2 bytes @ 0x7
  2566  0027                     	ds	2
  2567  0029                     displayLotteryResult@x:
  2568                           
  2569                           ; 2 bytes @ 0x9
  2570  0029                     	ds	2
  2571  002B                     displayLotteryResult@wait_cnt:
  2572                           
  2573                           ; 2 bytes @ 0xB
  2574  002B                     	ds	2
  2575  002D                     displayLotteryResult@x_402:
  2576                           
  2577                           ; 2 bytes @ 0xD
  2578  002D                     	ds	2
  2579  002F                     displayLotteryResult@wait_cnt_404:
  2580                           
  2581                           ; 2 bytes @ 0xF
  2582  002F                     	ds	2
  2583  0031                     displayLotteryResult@x_407:
  2584                           
  2585                           ; 2 bytes @ 0x11
  2586  0031                     	ds	2
  2587  0033                     displayLotteryResult@wait_cnt_409:
  2588                           
  2589                           ; 2 bytes @ 0x13
  2590  0033                     	ds	2
  2591  0035                     displayLotteryResult@x_411:
  2592                           
  2593                           ; 2 bytes @ 0x15
  2594  0035                     	ds	2
  2595  0037                     displayLotteryResult@wait_cnt_413:
  2596                           
  2597                           ; 2 bytes @ 0x17
  2598  0037                     	ds	2
  2599  0039                     displayLotteryResult@wait_cnt_415:
  2600                           
  2601                           ; 2 bytes @ 0x19
  2602  0039                     	ds	2
  2603  003B                     displayLotteryResult@dig_2:
  2604                           
  2605                           ; 2 bytes @ 0x1B
  2606  003B                     	ds	2
  2607  003D                     displayLotteryResult@i:
  2608                           
  2609                           ; 2 bytes @ 0x1D
  2610  003D                     	ds	2
  2611  003F                     displayLotteryResult@j:
  2612                           
  2613                           ; 2 bytes @ 0x1F
  2614  003F                     	ds	2
  2615  0041                     displayLotteryResult@i_403:
  2616                           
  2617                           ; 2 bytes @ 0x21
  2618  0041                     	ds	2
  2619  0043                     displayLotteryResult@i_408:
  2620                           
  2621                           ; 2 bytes @ 0x23
  2622  0043                     	ds	2
  2623  0045                     displayLotteryResult@i_412:
  2624                           
  2625                           ; 2 bytes @ 0x25
  2626  0045                     	ds	2
  2627  0047                     displayLotteryResult@dig_1:
  2628                           
  2629                           ; 2 bytes @ 0x27
  2630  0047                     	ds	2
  2631  0049                     displayLotteryResult@j_405:
  2632                           
  2633                           ; 2 bytes @ 0x29
  2634  0049                     	ds	2
  2635  004B                     displayLotteryResult@j_410:
  2636                           
  2637                           ; 2 bytes @ 0x2B
  2638  004B                     	ds	2
  2639  004D                     displayLotteryResult@j_414:
  2640                           
  2641                           ; 2 bytes @ 0x2D
  2642  004D                     	ds	2
  2643  004F                     displayLotteryResult@j_416:
  2644                           
  2645                           ; 2 bytes @ 0x2F
  2646  004F                     	ds	2
  2647  0051                     ??_main:
  2648                           
  2649                           ; 1 bytes @ 0x31
  2650  0051                     	ds	1
  2651  0052                     main@data:
  2652                           
  2653                           ; 1 bytes @ 0x32
  2654  0052                     	ds	1
  2655                           
  2656                           	psect	maintext
  2657  0333                     __pmaintext:	
  2658 ;;
  2659 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2660 ;;
  2661 ;; *************** function _main *****************
  2662 ;; Defined at:
  2663 ;;		line 329 in file "main.c"
  2664 ;; Parameters:    Size  Location     Type
  2665 ;;		None
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  data            1   50[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  1    wreg      void 
  2670 ;; Registers used:
  2671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : B1F/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2681 ;;Total ram usage:        2 bytes
  2682 ;; Hardware stack levels required when called: 4
  2683 ;; This function calls:
  2684 ;;		_EUSART_Read
  2685 ;;		_EUSART_Write
  2686 ;;		_EUSART_is_rx_ready
  2687 ;;		_SYSTEM_Initialize
  2688 ;;		_displayClear
  2689 ;;		_displayLotteryResult
  2690 ;; This function is called by:
  2691 ;;		Startup code after reset
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _main
  2697  0333                     _main:
  2698  0333                     l2211:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2701                           
  2702                           
  2703                           ;main.c: 332:     SYSTEM_Initialize();
  2704  0333  3182  2250  3183   	fcall	_SYSTEM_Initialize
  2705  0336                     l470:	
  2706                           ;main.c: 349:     while (1)
  2707                           
  2708                           
  2709                           ;main.c: 350:     {;main.c: 351:       if(EUSART_is_rx_ready()){
  2710  0336  3181  21BB  3183   	fcall	_EUSART_is_rx_ready
  2711  0339  3A00               	xorlw	0
  2712  033A  1903               	skipnz
  2713  033B  2B3D               	goto	u1371
  2714  033C  2B3E               	goto	u1370
  2715  033D                     u1371:
  2716  033D  2B36               	goto	l470
  2717  033E                     u1370:
  2718  033E                     l2213:
  2719                           
  2720                           ;main.c: 352:         uint8_t data = EUSART_Read();
  2721  033E  3182  225D  3183   	fcall	_EUSART_Read
  2722  0341  0020               	movlb	0	; select bank0
  2723  0342  00D1               	movwf	??_main
  2724  0343  0851               	movf	??_main,w
  2725  0344  00D2               	movwf	main@data
  2726  0345                     l2215:
  2727                           
  2728                           ;main.c: 353:         if(data == 10){
  2729  0345  300A               	movlw	10
  2730  0346  0652               	xorwf	main@data,w
  2731  0347  1D03               	btfss	3,2
  2732  0348  2B4A               	goto	u1381
  2733  0349  2B4B               	goto	u1380
  2734  034A                     u1381:
  2735  034A  2B4F               	goto	l2219
  2736  034B                     u1380:
  2737  034B                     l2217:
  2738                           
  2739                           ;main.c: 354:           displayClear();
  2740  034B  3181  21E1  3183   	fcall	_displayClear
  2741                           
  2742                           ;main.c: 355:         }else if(data == 20){
  2743  034E  2B36               	goto	l470
  2744  034F                     l2219:
  2745  034F  3014               	movlw	20
  2746  0350  0652               	xorwf	main@data,w
  2747  0351  1D03               	btfss	3,2
  2748  0352  2B54               	goto	u1391
  2749  0353  2B55               	goto	u1390
  2750  0354                     u1391:
  2751  0354  2B61               	goto	l2225
  2752  0355                     u1390:
  2753  0355                     l2221:
  2754                           
  2755                           ;main.c: 356:           displayLotteryResult(7777);
  2756  0355  3061               	movlw	97
  2757  0356  00A2               	movwf	displayLotteryResult@val
  2758  0357  301E               	movlw	30
  2759  0358  00A3               	movwf	displayLotteryResult@val+1
  2760  0359  3184  2481  3183   	fcall	_displayLotteryResult
  2761  035C                     l2223:
  2762                           
  2763                           ;main.c: 357:           EUSART_Write(50);
  2764  035C  3032               	movlw	50
  2765  035D  3181  21FC  3183   	fcall	_EUSART_Write
  2766                           
  2767                           ;main.c: 358:         }else if(data == 30){
  2768  0360  2B36               	goto	l470
  2769  0361                     l2225:
  2770  0361  301E               	movlw	30
  2771  0362  0652               	xorwf	main@data,w
  2772  0363  1D03               	btfss	3,2
  2773  0364  2B66               	goto	u1401
  2774  0365  2B67               	goto	u1400
  2775  0366                     u1401:
  2776  0366  2B4B               	goto	l2217
  2777  0367                     u1400:
  2778  0367                     l2227:
  2779                           
  2780                           ;main.c: 359:           displayLotteryResult(7776);
  2781  0367  3060               	movlw	96
  2782  0368  00A2               	movwf	displayLotteryResult@val
  2783  0369  301E               	movlw	30
  2784  036A  00A3               	movwf	displayLotteryResult@val+1
  2785  036B  3184  2481  3183   	fcall	_displayLotteryResult
  2786  036E                     l2229:
  2787                           
  2788                           ;main.c: 360:           EUSART_Write(50);
  2789  036E  3032               	movlw	50
  2790  036F  3181  21FC  3183   	fcall	_EUSART_Write
  2791                           
  2792                           ;main.c: 361:         }else{
  2793  0372  2B36               	goto	l470
  2794  0373  3180  2802         	ljmp	start
  2795  0375                     __end_of_main:
  2796                           
  2797                           	psect	text1
  2798  0481                     __ptext1:	
  2799 ;; *************** function _displayLotteryResult *****************
  2800 ;; Defined at:
  2801 ;;		line 241 in file "main.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  val             2    2[BANK0 ] int 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  j               2   45[BANK0 ] int 
  2806 ;;  j               2   43[BANK0 ] int 
  2807 ;;  j               2   41[BANK0 ] int 
  2808 ;;  j               2   31[BANK0 ] int 
  2809 ;;  wait_cnt        2   23[BANK0 ] int 
  2810 ;;  wait_cnt        2   19[BANK0 ] int 
  2811 ;;  wait_cnt        2   15[BANK0 ] int 
  2812 ;;  wait_cnt        2   11[BANK0 ] int 
  2813 ;;  j               2   47[BANK0 ] int 
  2814 ;;  i               2   37[BANK0 ] int 
  2815 ;;  i               2   35[BANK0 ] int 
  2816 ;;  i               2   33[BANK0 ] int 
  2817 ;;  i               2   29[BANK0 ] int 
  2818 ;;  wait_cnt        2   25[BANK0 ] int 
  2819 ;;  x               2   21[BANK0 ] int 
  2820 ;;  x               2   17[BANK0 ] int 
  2821 ;;  x               2   13[BANK0 ] int 
  2822 ;;  x               2    9[BANK0 ] int 
  2823 ;;  dig_1           2   39[BANK0 ] int 
  2824 ;;  dig_2           2   27[BANK0 ] int 
  2825 ;;  dig_3           2    7[BANK0 ] int 
  2826 ;;  dig_4           2    5[BANK0 ] int 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2837 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2839 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2840 ;;Total ram usage:       47 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 3
  2843 ;; This function calls:
  2844 ;;		___awdiv
  2845 ;;		___awmod
  2846 ;;		_displayRoll
  2847 ;;		_displaySegments
  2848 ;;		_selectDIG
  2849 ;; This function is called by:
  2850 ;;		_main
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854                           
  2855                           ;psect for function _displayLotteryResult
  2856  0481                     _displayLotteryResult:
  2857  0481                     l2019:	
  2858                           ;incstack = 0
  2859                           ; Regs used in _displayLotteryResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2860                           
  2861                           
  2862                           ;main.c: 242:   int dig_1 = val / 1000;
  2863  0481  30E8               	movlw	232
  2864  0482  00F0               	movwf	___awdiv@divisor
  2865  0483  3003               	movlw	3
  2866  0484  00F1               	movwf	___awdiv@divisor+1
  2867  0485  0020               	movlb	0	; select bank0
  2868  0486  0823               	movf	displayLotteryResult@val+1,w
  2869  0487  00F3               	movwf	___awdiv@dividend+1
  2870  0488  0822               	movf	displayLotteryResult@val,w
  2871  0489  00F2               	movwf	___awdiv@dividend
  2872  048A  3184  2422  3184   	fcall	___awdiv
  2873  048D  0871               	movf	?___awdiv+1,w
  2874  048E  0020               	movlb	0	; select bank0
  2875  048F  00C8               	movwf	displayLotteryResult@dig_1+1
  2876  0490  0870               	movf	?___awdiv,w
  2877  0491  00C7               	movwf	displayLotteryResult@dig_1
  2878                           
  2879                           ;main.c: 243:   int dig_2 = (val / 100) % 10;
  2880  0492  300A               	movlw	10
  2881  0493  00F9               	movwf	___awmod@divisor
  2882  0494  3000               	movlw	0
  2883  0495  00FA               	movwf	___awmod@divisor+1
  2884  0496  3064               	movlw	100
  2885  0497  00F0               	movwf	___awdiv@divisor
  2886  0498  3000               	movlw	0
  2887  0499  00F1               	movwf	___awdiv@divisor+1
  2888  049A  0823               	movf	displayLotteryResult@val+1,w
  2889  049B  00F3               	movwf	___awdiv@dividend+1
  2890  049C  0822               	movf	displayLotteryResult@val,w
  2891  049D  00F2               	movwf	___awdiv@dividend
  2892  049E  3184  2422  3184   	fcall	___awdiv
  2893  04A1  0871               	movf	?___awdiv+1,w
  2894  04A2  00FC               	movwf	___awmod@dividend+1
  2895  04A3  0870               	movf	?___awdiv,w
  2896  04A4  00FB               	movwf	___awmod@dividend
  2897  04A5  3183  2375  3184   	fcall	___awmod
  2898  04A8  087A               	movf	?___awmod+1,w
  2899  04A9  0020               	movlb	0	; select bank0
  2900  04AA  00BC               	movwf	displayLotteryResult@dig_2+1
  2901  04AB  0879               	movf	?___awmod,w
  2902  04AC  00BB               	movwf	displayLotteryResult@dig_2
  2903                           
  2904                           ;main.c: 244:   int dig_3 = (val / 10) % 10;
  2905  04AD  300A               	movlw	10
  2906  04AE  00F9               	movwf	___awmod@divisor
  2907  04AF  3000               	movlw	0
  2908  04B0  00FA               	movwf	___awmod@divisor+1
  2909  04B1  300A               	movlw	10
  2910  04B2  00F0               	movwf	___awdiv@divisor
  2911  04B3  3000               	movlw	0
  2912  04B4  00F1               	movwf	___awdiv@divisor+1
  2913  04B5  0823               	movf	displayLotteryResult@val+1,w
  2914  04B6  00F3               	movwf	___awdiv@dividend+1
  2915  04B7  0822               	movf	displayLotteryResult@val,w
  2916  04B8  00F2               	movwf	___awdiv@dividend
  2917  04B9  3184  2422  3184   	fcall	___awdiv
  2918  04BC  0871               	movf	?___awdiv+1,w
  2919  04BD  00FC               	movwf	___awmod@dividend+1
  2920  04BE  0870               	movf	?___awdiv,w
  2921  04BF  00FB               	movwf	___awmod@dividend
  2922  04C0  3183  2375  3184   	fcall	___awmod
  2923  04C3  087A               	movf	?___awmod+1,w
  2924  04C4  0020               	movlb	0	; select bank0
  2925  04C5  00A8               	movwf	displayLotteryResult@dig_3+1
  2926  04C6  0879               	movf	?___awmod,w
  2927  04C7  00A7               	movwf	displayLotteryResult@dig_3
  2928                           
  2929                           ;main.c: 245:   int dig_4 = val % 10;
  2930  04C8  300A               	movlw	10
  2931  04C9  00F9               	movwf	___awmod@divisor
  2932  04CA  3000               	movlw	0
  2933  04CB  00FA               	movwf	___awmod@divisor+1
  2934  04CC  0823               	movf	displayLotteryResult@val+1,w
  2935  04CD  00FC               	movwf	___awmod@dividend+1
  2936  04CE  0822               	movf	displayLotteryResult@val,w
  2937  04CF  00FB               	movwf	___awmod@dividend
  2938  04D0  3183  2375  3184   	fcall	___awmod
  2939  04D3  087A               	movf	?___awmod+1,w
  2940  04D4  0020               	movlb	0	; select bank0
  2941  04D5  00A6               	movwf	displayLotteryResult@dig_4+1
  2942  04D6  0879               	movf	?___awmod,w
  2943  04D7  00A5               	movwf	displayLotteryResult@dig_4
  2944  04D8                     l2021:
  2945                           
  2946                           ;main.c: 247:   for(int x=0; x<3; x++){
  2947  04D8  01A9               	clrf	displayLotteryResult@x
  2948  04D9  01AA               	clrf	displayLotteryResult@x+1
  2949  04DA                     l2027:
  2950                           
  2951                           ;main.c: 248:     for(int i=1; i<7; i++){
  2952  04DA  3001               	movlw	1
  2953  04DB  0020               	movlb	0	; select bank0
  2954  04DC  00BD               	movwf	displayLotteryResult@i
  2955  04DD  3000               	movlw	0
  2956  04DE  00BE               	movwf	displayLotteryResult@i+1
  2957  04DF                     l2031:
  2958                           
  2959                           ;main.c: 249:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  2960  04DF  0020               	movlb	0	; select bank0
  2961  04E0  01AB               	clrf	displayLotteryResult@wait_cnt
  2962  04E1  01AC               	clrf	displayLotteryResult@wait_cnt+1
  2963  04E2                     l2037:
  2964                           
  2965                           ;main.c: 250:         for(int j=1; j<5; j++){
  2966  04E2  3001               	movlw	1
  2967  04E3  0020               	movlb	0	; select bank0
  2968  04E4  00BF               	movwf	displayLotteryResult@j
  2969  04E5  3000               	movlw	0
  2970  04E6  00C0               	movwf	displayLotteryResult@j+1
  2971  04E7                     l2041:
  2972                           
  2973                           ;main.c: 251:           selectDIG(j);
  2974  04E7  0020               	movlb	0	; select bank0
  2975  04E8  0840               	movf	displayLotteryResult@j+1,w
  2976  04E9  00F1               	movwf	selectDIG@dig+1
  2977  04EA  083F               	movf	displayLotteryResult@j,w
  2978  04EB  00F0               	movwf	selectDIG@dig
  2979  04EC  3182  22A0  3184   	fcall	_selectDIG
  2980                           
  2981                           ;main.c: 252:           displayRoll(i);
  2982  04EF  0020               	movlb	0	; select bank0
  2983  04F0  083E               	movf	displayLotteryResult@i+1,w
  2984  04F1  00F3               	movwf	displayRoll@cnt+1
  2985  04F2  083D               	movf	displayLotteryResult@i,w
  2986  04F3  00F2               	movwf	displayRoll@cnt
  2987  04F4  3182  22F6  3184   	fcall	_displayRoll
  2988  04F7                     l2043:
  2989                           
  2990                           ;main.c: 253:         }
  2991  04F7  3001               	movlw	1
  2992  04F8  0020               	movlb	0	; select bank0
  2993  04F9  07BF               	addwf	displayLotteryResult@j,f
  2994  04FA  3000               	movlw	0
  2995  04FB  3DC0               	addwfc	displayLotteryResult@j+1,f
  2996  04FC                     l2045:
  2997  04FC  0840               	movf	displayLotteryResult@j+1,w
  2998  04FD  3A80               	xorlw	128
  2999  04FE  00A4               	movwf	??_displayLotteryResult
  3000  04FF  3080               	movlw	128
  3001  0500  0224               	subwf	??_displayLotteryResult,w
  3002  0501  1D03               	skipz
  3003  0502  2D05               	goto	u965
  3004  0503  3005               	movlw	5
  3005  0504  023F               	subwf	displayLotteryResult@j,w
  3006  0505                     u965:
  3007  0505  1C03               	skipc
  3008  0506  2D08               	goto	u961
  3009  0507  2D09               	goto	u960
  3010  0508                     u961:
  3011  0508  2CE7               	goto	l2041
  3012  0509                     u960:
  3013  0509                     l2047:
  3014                           
  3015                           ;main.c: 254:       }
  3016  0509  3001               	movlw	1
  3017  050A  0020               	movlb	0	; select bank0
  3018  050B  07AB               	addwf	displayLotteryResult@wait_cnt,f
  3019  050C  3000               	movlw	0
  3020  050D  3DAC               	addwfc	displayLotteryResult@wait_cnt+1,f
  3021  050E  082C               	movf	displayLotteryResult@wait_cnt+1,w
  3022  050F  3A80               	xorlw	128
  3023  0510  00A4               	movwf	??_displayLotteryResult
  3024  0511  3080               	movlw	128
  3025  0512  0224               	subwf	??_displayLotteryResult,w
  3026  0513  1D03               	skipz
  3027  0514  2D17               	goto	u975
  3028  0515  300A               	movlw	10
  3029  0516  022B               	subwf	displayLotteryResult@wait_cnt,w
  3030  0517                     u975:
  3031  0517  1C03               	skipc
  3032  0518  2D1A               	goto	u971
  3033  0519  2D1B               	goto	u970
  3034  051A                     u971:
  3035  051A  2CE2               	goto	l2037
  3036  051B                     u970:
  3037  051B                     l2049:
  3038                           
  3039                           ;main.c: 255:     }
  3040  051B  3001               	movlw	1
  3041  051C  0020               	movlb	0	; select bank0
  3042  051D  07BD               	addwf	displayLotteryResult@i,f
  3043  051E  3000               	movlw	0
  3044  051F  3DBE               	addwfc	displayLotteryResult@i+1,f
  3045  0520  083E               	movf	displayLotteryResult@i+1,w
  3046  0521  3A80               	xorlw	128
  3047  0522  00A4               	movwf	??_displayLotteryResult
  3048  0523  3080               	movlw	128
  3049  0524  0224               	subwf	??_displayLotteryResult,w
  3050  0525  1D03               	skipz
  3051  0526  2D29               	goto	u985
  3052  0527  3007               	movlw	7
  3053  0528  023D               	subwf	displayLotteryResult@i,w
  3054  0529                     u985:
  3055  0529  1C03               	skipc
  3056  052A  2D2C               	goto	u981
  3057  052B  2D2D               	goto	u980
  3058  052C                     u981:
  3059  052C  2CDF               	goto	l2031
  3060  052D                     u980:
  3061  052D                     l2051:
  3062                           
  3063                           ;main.c: 256:   }
  3064  052D  3001               	movlw	1
  3065  052E  0020               	movlb	0	; select bank0
  3066  052F  07A9               	addwf	displayLotteryResult@x,f
  3067  0530  3000               	movlw	0
  3068  0531  3DAA               	addwfc	displayLotteryResult@x+1,f
  3069  0532  082A               	movf	displayLotteryResult@x+1,w
  3070  0533  3A80               	xorlw	128
  3071  0534  00A4               	movwf	??_displayLotteryResult
  3072  0535  3080               	movlw	128
  3073  0536  0224               	subwf	??_displayLotteryResult,w
  3074  0537  1D03               	skipz
  3075  0538  2D3B               	goto	u995
  3076  0539  3003               	movlw	3
  3077  053A  0229               	subwf	displayLotteryResult@x,w
  3078  053B                     u995:
  3079  053B  1C03               	skipc
  3080  053C  2D3E               	goto	u991
  3081  053D  2D3F               	goto	u990
  3082  053E                     u991:
  3083  053E  2CDA               	goto	l2027
  3084  053F                     u990:
  3085  053F                     l2053:
  3086                           
  3087                           ;main.c: 259:   for(int x=0; x<1; x++){
  3088  053F  0020               	movlb	0	; select bank0
  3089  0540  01AD               	clrf	displayLotteryResult@x_402
  3090  0541  01AE               	clrf	displayLotteryResult@x_402+1
  3091  0542                     l2055:
  3092  0542  082E               	movf	displayLotteryResult@x_402+1,w
  3093  0543  3A80               	xorlw	128
  3094  0544  00A4               	movwf	??_displayLotteryResult
  3095  0545  3080               	movlw	128
  3096  0546  0224               	subwf	??_displayLotteryResult,w
  3097  0547  1D03               	skipz
  3098  0548  2D4B               	goto	u1005
  3099  0549  3001               	movlw	1
  3100  054A  022D               	subwf	displayLotteryResult@x_402,w
  3101  054B                     u1005:
  3102  054B  1C03               	skipc
  3103  054C  2D4E               	goto	u1001
  3104  054D  2D4F               	goto	u1000
  3105  054E                     u1001:
  3106  054E  2D50               	goto	l2059
  3107  054F                     u1000:
  3108  054F  2DED               	goto	l2091
  3109  0550                     l2059:
  3110                           
  3111                           ;main.c: 260:     for(int i=1; i<7; i++){
  3112  0550  3001               	movlw	1
  3113  0551  0020               	movlb	0	; select bank0
  3114  0552  00C1               	movwf	displayLotteryResult@i_403
  3115  0553  3000               	movlw	0
  3116  0554  00C2               	movwf	displayLotteryResult@i_403+1
  3117  0555  0842               	movf	displayLotteryResult@i_403+1,w
  3118  0556  3A80               	xorlw	128
  3119  0557  00A4               	movwf	??_displayLotteryResult
  3120  0558  3080               	movlw	128
  3121  0559  0224               	subwf	??_displayLotteryResult,w
  3122  055A  1D03               	skipz
  3123  055B  2D5E               	goto	u1015
  3124  055C  3007               	movlw	7
  3125  055D  0241               	subwf	displayLotteryResult@i_403,w
  3126  055E                     u1015:
  3127  055E  1C03               	skipc
  3128  055F  2D61               	goto	u1011
  3129  0560  2D62               	goto	u1010
  3130  0561                     u1011:
  3131  0561  2D63               	goto	l2063
  3132  0562                     u1010:
  3133  0562  2DDB               	goto	l2089
  3134  0563                     l2063:
  3135                           
  3136                           ;main.c: 261:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3137  0563  0020               	movlb	0	; select bank0
  3138  0564  01AF               	clrf	displayLotteryResult@wait_cnt_404
  3139  0565  01B0               	clrf	displayLotteryResult@wait_cnt_404+1
  3140  0566                     l2065:
  3141  0566  0830               	movf	displayLotteryResult@wait_cnt_404+1,w
  3142  0567  3A80               	xorlw	128
  3143  0568  00A4               	movwf	??_displayLotteryResult
  3144  0569  3080               	movlw	128
  3145  056A  0224               	subwf	??_displayLotteryResult,w
  3146  056B  1D03               	skipz
  3147  056C  2D6F               	goto	u1025
  3148  056D  300A               	movlw	10
  3149  056E  022F               	subwf	displayLotteryResult@wait_cnt_404,w
  3150  056F                     u1025:
  3151  056F  1C03               	skipc
  3152  0570  2D72               	goto	u1021
  3153  0571  2D73               	goto	u1020
  3154  0572                     u1021:
  3155  0572  2D74               	goto	l2069
  3156  0573                     u1020:
  3157  0573  2DC9               	goto	l2087
  3158  0574                     l2069:
  3159                           
  3160                           ;main.c: 262:         for(int j=1; j<5; j++){
  3161  0574  3001               	movlw	1
  3162  0575  0020               	movlb	0	; select bank0
  3163  0576  00C9               	movwf	displayLotteryResult@j_405
  3164  0577  3000               	movlw	0
  3165  0578  00CA               	movwf	displayLotteryResult@j_405+1
  3166  0579  084A               	movf	displayLotteryResult@j_405+1,w
  3167  057A  3A80               	xorlw	128
  3168  057B  00A4               	movwf	??_displayLotteryResult
  3169  057C  3080               	movlw	128
  3170  057D  0224               	subwf	??_displayLotteryResult,w
  3171  057E  1D03               	skipz
  3172  057F  2D82               	goto	u1035
  3173  0580  3005               	movlw	5
  3174  0581  0249               	subwf	displayLotteryResult@j_405,w
  3175  0582                     u1035:
  3176  0582  1C03               	skipc
  3177  0583  2D85               	goto	u1031
  3178  0584  2D86               	goto	u1030
  3179  0585                     u1031:
  3180  0585  2D87               	goto	l2073
  3181  0586                     u1030:
  3182  0586  2DB7               	goto	l2085
  3183  0587                     l2073:
  3184                           
  3185                           ;main.c: 263:           selectDIG(j);
  3186  0587  0020               	movlb	0	; select bank0
  3187  0588  084A               	movf	displayLotteryResult@j_405+1,w
  3188  0589  00F1               	movwf	selectDIG@dig+1
  3189  058A  0849               	movf	displayLotteryResult@j_405,w
  3190  058B  00F0               	movwf	selectDIG@dig
  3191  058C  3182  22A0  3184   	fcall	_selectDIG
  3192  058F                     l2075:
  3193                           
  3194                           ;main.c: 264:           if(j == 1){
  3195  058F  0020               	movlb	0	; select bank0
  3196  0590  0349               	decf	displayLotteryResult@j_405,w
  3197  0591  044A               	iorwf	displayLotteryResult@j_405+1,w
  3198  0592  1D03               	btfss	3,2
  3199  0593  2D95               	goto	u1041
  3200  0594  2D96               	goto	u1040
  3201  0595                     u1041:
  3202  0595  2D9E               	goto	l2079
  3203  0596                     u1040:
  3204  0596                     l2077:
  3205                           
  3206                           ;main.c: 265:             displaySegments(dig_1);
  3207  0596  0848               	movf	displayLotteryResult@dig_1+1,w
  3208  0597  00F3               	movwf	displaySegments@num+1
  3209  0598  0847               	movf	displayLotteryResult@dig_1,w
  3210  0599  00F2               	movwf	displaySegments@num
  3211  059A  3183  23C9  3184   	fcall	_displaySegments
  3212                           
  3213                           ;main.c: 266:           }else{
  3214  059D  2DA5               	goto	l2081
  3215  059E                     l2079:
  3216                           
  3217                           ;main.c: 267:             displayRoll(i);
  3218  059E  0842               	movf	displayLotteryResult@i_403+1,w
  3219  059F  00F3               	movwf	displayRoll@cnt+1
  3220  05A0  0841               	movf	displayLotteryResult@i_403,w
  3221  05A1  00F2               	movwf	displayRoll@cnt
  3222  05A2  3182  22F6  3184   	fcall	_displayRoll
  3223  05A5                     l2081:
  3224                           
  3225                           ;main.c: 269:         }
  3226  05A5  3001               	movlw	1
  3227  05A6  0020               	movlb	0	; select bank0
  3228  05A7  07C9               	addwf	displayLotteryResult@j_405,f
  3229  05A8  3000               	movlw	0
  3230  05A9  3DCA               	addwfc	displayLotteryResult@j_405+1,f
  3231  05AA                     l2083:
  3232  05AA  084A               	movf	displayLotteryResult@j_405+1,w
  3233  05AB  3A80               	xorlw	128
  3234  05AC  00A4               	movwf	??_displayLotteryResult
  3235  05AD  3080               	movlw	128
  3236  05AE  0224               	subwf	??_displayLotteryResult,w
  3237  05AF  1D03               	skipz
  3238  05B0  2DB3               	goto	u1055
  3239  05B1  3005               	movlw	5
  3240  05B2  0249               	subwf	displayLotteryResult@j_405,w
  3241  05B3                     u1055:
  3242  05B3  1C03               	skipc
  3243  05B4  2DB6               	goto	u1051
  3244  05B5  2DB7               	goto	u1050
  3245  05B6                     u1051:
  3246  05B6  2D87               	goto	l2073
  3247  05B7                     u1050:
  3248  05B7                     l2085:
  3249                           
  3250                           ;main.c: 270:       }
  3251  05B7  3001               	movlw	1
  3252  05B8  0020               	movlb	0	; select bank0
  3253  05B9  07AF               	addwf	displayLotteryResult@wait_cnt_404,f
  3254  05BA  3000               	movlw	0
  3255  05BB  3DB0               	addwfc	displayLotteryResult@wait_cnt_404+1,f
  3256  05BC  0830               	movf	displayLotteryResult@wait_cnt_404+1,w
  3257  05BD  3A80               	xorlw	128
  3258  05BE  00A4               	movwf	??_displayLotteryResult
  3259  05BF  3080               	movlw	128
  3260  05C0  0224               	subwf	??_displayLotteryResult,w
  3261  05C1  1D03               	skipz
  3262  05C2  2DC5               	goto	u1065
  3263  05C3  300A               	movlw	10
  3264  05C4  022F               	subwf	displayLotteryResult@wait_cnt_404,w
  3265  05C5                     u1065:
  3266  05C5  1C03               	skipc
  3267  05C6  2DC8               	goto	u1061
  3268  05C7  2DC9               	goto	u1060
  3269  05C8                     u1061:
  3270  05C8  2D74               	goto	l2069
  3271  05C9                     u1060:
  3272  05C9                     l2087:
  3273                           
  3274                           ;main.c: 271:     }
  3275  05C9  3001               	movlw	1
  3276  05CA  0020               	movlb	0	; select bank0
  3277  05CB  07C1               	addwf	displayLotteryResult@i_403,f
  3278  05CC  3000               	movlw	0
  3279  05CD  3DC2               	addwfc	displayLotteryResult@i_403+1,f
  3280  05CE  0842               	movf	displayLotteryResult@i_403+1,w
  3281  05CF  3A80               	xorlw	128
  3282  05D0  00A4               	movwf	??_displayLotteryResult
  3283  05D1  3080               	movlw	128
  3284  05D2  0224               	subwf	??_displayLotteryResult,w
  3285  05D3  1D03               	skipz
  3286  05D4  2DD7               	goto	u1075
  3287  05D5  3007               	movlw	7
  3288  05D6  0241               	subwf	displayLotteryResult@i_403,w
  3289  05D7                     u1075:
  3290  05D7  1C03               	skipc
  3291  05D8  2DDA               	goto	u1071
  3292  05D9  2DDB               	goto	u1070
  3293  05DA                     u1071:
  3294  05DA  2D63               	goto	l2063
  3295  05DB                     u1070:
  3296  05DB                     l2089:
  3297                           
  3298                           ;main.c: 272:   }
  3299  05DB  3001               	movlw	1
  3300  05DC  0020               	movlb	0	; select bank0
  3301  05DD  07AD               	addwf	displayLotteryResult@x_402,f
  3302  05DE  3000               	movlw	0
  3303  05DF  3DAE               	addwfc	displayLotteryResult@x_402+1,f
  3304  05E0  082E               	movf	displayLotteryResult@x_402+1,w
  3305  05E1  3A80               	xorlw	128
  3306  05E2  00A4               	movwf	??_displayLotteryResult
  3307  05E3  3080               	movlw	128
  3308  05E4  0224               	subwf	??_displayLotteryResult,w
  3309  05E5  1D03               	skipz
  3310  05E6  2DE9               	goto	u1085
  3311  05E7  3001               	movlw	1
  3312  05E8  022D               	subwf	displayLotteryResult@x_402,w
  3313  05E9                     u1085:
  3314  05E9  1C03               	skipc
  3315  05EA  2DEC               	goto	u1081
  3316  05EB  2DED               	goto	u1080
  3317  05EC                     u1081:
  3318  05EC  2D50               	goto	l2059
  3319  05ED                     u1080:
  3320  05ED                     l2091:
  3321                           
  3322                           ;main.c: 275:   for(int x=0; x<1; x++){
  3323  05ED  0020               	movlb	0	; select bank0
  3324  05EE  01B1               	clrf	displayLotteryResult@x_407
  3325  05EF  01B2               	clrf	displayLotteryResult@x_407+1
  3326  05F0                     l2093:
  3327  05F0  0832               	movf	displayLotteryResult@x_407+1,w
  3328  05F1  3A80               	xorlw	128
  3329  05F2  00A4               	movwf	??_displayLotteryResult
  3330  05F3  3080               	movlw	128
  3331  05F4  0224               	subwf	??_displayLotteryResult,w
  3332  05F5  1D03               	skipz
  3333  05F6  2DF9               	goto	u1095
  3334  05F7  3001               	movlw	1
  3335  05F8  0231               	subwf	displayLotteryResult@x_407,w
  3336  05F9                     u1095:
  3337  05F9  1C03               	skipc
  3338  05FA  2DFC               	goto	u1091
  3339  05FB  2DFD               	goto	u1090
  3340  05FC                     u1091:
  3341  05FC  2DFE               	goto	l2097
  3342  05FD                     u1090:
  3343  05FD  2EAA               	goto	l2133
  3344  05FE                     l2097:
  3345                           
  3346                           ;main.c: 276:     for(int i=1; i<7; i++){
  3347  05FE  3001               	movlw	1
  3348  05FF  0020               	movlb	0	; select bank0
  3349  0600  00C3               	movwf	displayLotteryResult@i_408
  3350  0601  3000               	movlw	0
  3351  0602  00C4               	movwf	displayLotteryResult@i_408+1
  3352  0603  0844               	movf	displayLotteryResult@i_408+1,w
  3353  0604  3A80               	xorlw	128
  3354  0605  00A4               	movwf	??_displayLotteryResult
  3355  0606  3080               	movlw	128
  3356  0607  0224               	subwf	??_displayLotteryResult,w
  3357  0608  1D03               	skipz
  3358  0609  2E0C               	goto	u1105
  3359  060A  3007               	movlw	7
  3360  060B  0243               	subwf	displayLotteryResult@i_408,w
  3361  060C                     u1105:
  3362  060C  1C03               	skipc
  3363  060D  2E0F               	goto	u1101
  3364  060E  2E10               	goto	u1100
  3365  060F                     u1101:
  3366  060F  2E11               	goto	l2101
  3367  0610                     u1100:
  3368  0610  2E98               	goto	l2131
  3369  0611                     l2101:
  3370                           
  3371                           ;main.c: 277:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3372  0611  0020               	movlb	0	; select bank0
  3373  0612  01B3               	clrf	displayLotteryResult@wait_cnt_409
  3374  0613  01B4               	clrf	displayLotteryResult@wait_cnt_409+1
  3375  0614                     l2103:
  3376  0614  0834               	movf	displayLotteryResult@wait_cnt_409+1,w
  3377  0615  3A80               	xorlw	128
  3378  0616  00A4               	movwf	??_displayLotteryResult
  3379  0617  3080               	movlw	128
  3380  0618  0224               	subwf	??_displayLotteryResult,w
  3381  0619  1D03               	skipz
  3382  061A  2E1D               	goto	u1115
  3383  061B  300A               	movlw	10
  3384  061C  0233               	subwf	displayLotteryResult@wait_cnt_409,w
  3385  061D                     u1115:
  3386  061D  1C03               	skipc
  3387  061E  2E20               	goto	u1111
  3388  061F  2E21               	goto	u1110
  3389  0620                     u1111:
  3390  0620  2E22               	goto	l2107
  3391  0621                     u1110:
  3392  0621  2E86               	goto	l2129
  3393  0622                     l2107:
  3394                           
  3395                           ;main.c: 278:         for(int j=1; j<5; j++){
  3396  0622  3001               	movlw	1
  3397  0623  0020               	movlb	0	; select bank0
  3398  0624  00CB               	movwf	displayLotteryResult@j_410
  3399  0625  3000               	movlw	0
  3400  0626  00CC               	movwf	displayLotteryResult@j_410+1
  3401  0627  084C               	movf	displayLotteryResult@j_410+1,w
  3402  0628  3A80               	xorlw	128
  3403  0629  00A4               	movwf	??_displayLotteryResult
  3404  062A  3080               	movlw	128
  3405  062B  0224               	subwf	??_displayLotteryResult,w
  3406  062C  1D03               	skipz
  3407  062D  2E30               	goto	u1125
  3408  062E  3005               	movlw	5
  3409  062F  024B               	subwf	displayLotteryResult@j_410,w
  3410  0630                     u1125:
  3411  0630  1C03               	skipc
  3412  0631  2E33               	goto	u1121
  3413  0632  2E34               	goto	u1120
  3414  0633                     u1121:
  3415  0633  2E35               	goto	l2111
  3416  0634                     u1120:
  3417  0634  2E74               	goto	l2127
  3418  0635                     l2111:
  3419                           
  3420                           ;main.c: 279:           selectDIG(j);
  3421  0635  0020               	movlb	0	; select bank0
  3422  0636  084C               	movf	displayLotteryResult@j_410+1,w
  3423  0637  00F1               	movwf	selectDIG@dig+1
  3424  0638  084B               	movf	displayLotteryResult@j_410,w
  3425  0639  00F0               	movwf	selectDIG@dig
  3426  063A  3182  22A0  3184   	fcall	_selectDIG
  3427  063D                     l2113:
  3428                           
  3429                           ;main.c: 280:           if(j == 1){
  3430  063D  0020               	movlb	0	; select bank0
  3431  063E  034B               	decf	displayLotteryResult@j_410,w
  3432  063F  044C               	iorwf	displayLotteryResult@j_410+1,w
  3433  0640  1D03               	btfss	3,2
  3434  0641  2E43               	goto	u1131
  3435  0642  2E44               	goto	u1130
  3436  0643                     u1131:
  3437  0643  2E4C               	goto	l2117
  3438  0644                     u1130:
  3439  0644                     l2115:
  3440                           
  3441                           ;main.c: 281:             displaySegments(dig_1);
  3442  0644  0848               	movf	displayLotteryResult@dig_1+1,w
  3443  0645  00F3               	movwf	displaySegments@num+1
  3444  0646  0847               	movf	displayLotteryResult@dig_1,w
  3445  0647  00F2               	movwf	displaySegments@num
  3446  0648  3183  23C9  3184   	fcall	_displaySegments
  3447                           
  3448                           ;main.c: 282:           }else if(j == 2){
  3449  064B  2E62               	goto	l2123
  3450  064C                     l2117:
  3451  064C  3002               	movlw	2
  3452  064D  064B               	xorwf	displayLotteryResult@j_410,w
  3453  064E  044C               	iorwf	displayLotteryResult@j_410+1,w
  3454  064F  1D03               	btfss	3,2
  3455  0650  2E52               	goto	u1141
  3456  0651  2E53               	goto	u1140
  3457  0652                     u1141:
  3458  0652  2E5B               	goto	l2121
  3459  0653                     u1140:
  3460  0653                     l2119:
  3461                           
  3462                           ;main.c: 283:             displaySegments(dig_2);
  3463  0653  083C               	movf	displayLotteryResult@dig_2+1,w
  3464  0654  00F3               	movwf	displaySegments@num+1
  3465  0655  083B               	movf	displayLotteryResult@dig_2,w
  3466  0656  00F2               	movwf	displaySegments@num
  3467  0657  3183  23C9  3184   	fcall	_displaySegments
  3468                           
  3469                           ;main.c: 284:           }else{
  3470  065A  2E62               	goto	l2123
  3471  065B                     l2121:
  3472                           
  3473                           ;main.c: 285:             displayRoll(i);
  3474  065B  0844               	movf	displayLotteryResult@i_408+1,w
  3475  065C  00F3               	movwf	displayRoll@cnt+1
  3476  065D  0843               	movf	displayLotteryResult@i_408,w
  3477  065E  00F2               	movwf	displayRoll@cnt
  3478  065F  3182  22F6  3184   	fcall	_displayRoll
  3479  0662                     l2123:
  3480                           
  3481                           ;main.c: 287:         }
  3482  0662  3001               	movlw	1
  3483  0663  0020               	movlb	0	; select bank0
  3484  0664  07CB               	addwf	displayLotteryResult@j_410,f
  3485  0665  3000               	movlw	0
  3486  0666  3DCC               	addwfc	displayLotteryResult@j_410+1,f
  3487  0667                     l2125:
  3488  0667  084C               	movf	displayLotteryResult@j_410+1,w
  3489  0668  3A80               	xorlw	128
  3490  0669  00A4               	movwf	??_displayLotteryResult
  3491  066A  3080               	movlw	128
  3492  066B  0224               	subwf	??_displayLotteryResult,w
  3493  066C  1D03               	skipz
  3494  066D  2E70               	goto	u1155
  3495  066E  3005               	movlw	5
  3496  066F  024B               	subwf	displayLotteryResult@j_410,w
  3497  0670                     u1155:
  3498  0670  1C03               	skipc
  3499  0671  2E73               	goto	u1151
  3500  0672  2E74               	goto	u1150
  3501  0673                     u1151:
  3502  0673  2E35               	goto	l2111
  3503  0674                     u1150:
  3504  0674                     l2127:
  3505                           
  3506                           ;main.c: 288:       }
  3507  0674  3001               	movlw	1
  3508  0675  0020               	movlb	0	; select bank0
  3509  0676  07B3               	addwf	displayLotteryResult@wait_cnt_409,f
  3510  0677  3000               	movlw	0
  3511  0678  3DB4               	addwfc	displayLotteryResult@wait_cnt_409+1,f
  3512  0679  0834               	movf	displayLotteryResult@wait_cnt_409+1,w
  3513  067A  3A80               	xorlw	128
  3514  067B  00A4               	movwf	??_displayLotteryResult
  3515  067C  3080               	movlw	128
  3516  067D  0224               	subwf	??_displayLotteryResult,w
  3517  067E  1D03               	skipz
  3518  067F  2E82               	goto	u1165
  3519  0680  300A               	movlw	10
  3520  0681  0233               	subwf	displayLotteryResult@wait_cnt_409,w
  3521  0682                     u1165:
  3522  0682  1C03               	skipc
  3523  0683  2E85               	goto	u1161
  3524  0684  2E86               	goto	u1160
  3525  0685                     u1161:
  3526  0685  2E22               	goto	l2107
  3527  0686                     u1160:
  3528  0686                     l2129:
  3529                           
  3530                           ;main.c: 289:     }
  3531  0686  3001               	movlw	1
  3532  0687  0020               	movlb	0	; select bank0
  3533  0688  07C3               	addwf	displayLotteryResult@i_408,f
  3534  0689  3000               	movlw	0
  3535  068A  3DC4               	addwfc	displayLotteryResult@i_408+1,f
  3536  068B  0844               	movf	displayLotteryResult@i_408+1,w
  3537  068C  3A80               	xorlw	128
  3538  068D  00A4               	movwf	??_displayLotteryResult
  3539  068E  3080               	movlw	128
  3540  068F  0224               	subwf	??_displayLotteryResult,w
  3541  0690  1D03               	skipz
  3542  0691  2E94               	goto	u1175
  3543  0692  3007               	movlw	7
  3544  0693  0243               	subwf	displayLotteryResult@i_408,w
  3545  0694                     u1175:
  3546  0694  1C03               	skipc
  3547  0695  2E97               	goto	u1171
  3548  0696  2E98               	goto	u1170
  3549  0697                     u1171:
  3550  0697  2E11               	goto	l2101
  3551  0698                     u1170:
  3552  0698                     l2131:
  3553                           
  3554                           ;main.c: 290:   }
  3555  0698  3001               	movlw	1
  3556  0699  0020               	movlb	0	; select bank0
  3557  069A  07B1               	addwf	displayLotteryResult@x_407,f
  3558  069B  3000               	movlw	0
  3559  069C  3DB2               	addwfc	displayLotteryResult@x_407+1,f
  3560  069D  0832               	movf	displayLotteryResult@x_407+1,w
  3561  069E  3A80               	xorlw	128
  3562  069F  00A4               	movwf	??_displayLotteryResult
  3563  06A0  3080               	movlw	128
  3564  06A1  0224               	subwf	??_displayLotteryResult,w
  3565  06A2  1D03               	skipz
  3566  06A3  2EA6               	goto	u1185
  3567  06A4  3001               	movlw	1
  3568  06A5  0231               	subwf	displayLotteryResult@x_407,w
  3569  06A6                     u1185:
  3570  06A6  1C03               	skipc
  3571  06A7  2EA9               	goto	u1181
  3572  06A8  2EAA               	goto	u1180
  3573  06A9                     u1181:
  3574  06A9  2DFE               	goto	l2097
  3575  06AA                     u1180:
  3576  06AA                     l2133:
  3577                           
  3578                           ;main.c: 293:   for(int x=0; x<1; x++){
  3579  06AA  0020               	movlb	0	; select bank0
  3580  06AB  01B5               	clrf	displayLotteryResult@x_411
  3581  06AC  01B6               	clrf	displayLotteryResult@x_411+1
  3582  06AD                     l2135:
  3583  06AD  0836               	movf	displayLotteryResult@x_411+1,w
  3584  06AE  3A80               	xorlw	128
  3585  06AF  00A4               	movwf	??_displayLotteryResult
  3586  06B0  3080               	movlw	128
  3587  06B1  0224               	subwf	??_displayLotteryResult,w
  3588  06B2  1D03               	skipz
  3589  06B3  2EB6               	goto	u1195
  3590  06B4  3001               	movlw	1
  3591  06B5  0235               	subwf	displayLotteryResult@x_411,w
  3592  06B6                     u1195:
  3593  06B6  1C03               	skipc
  3594  06B7  2EB9               	goto	u1191
  3595  06B8  2EBA               	goto	u1190
  3596  06B9                     u1191:
  3597  06B9  2EBB               	goto	l2139
  3598  06BA                     u1190:
  3599  06BA  2F76               	goto	l2179
  3600  06BB                     l2139:
  3601                           
  3602                           ;main.c: 294:     for(int i=1; i<7; i++){
  3603  06BB  3001               	movlw	1
  3604  06BC  0020               	movlb	0	; select bank0
  3605  06BD  00C5               	movwf	displayLotteryResult@i_412
  3606  06BE  3000               	movlw	0
  3607  06BF  00C6               	movwf	displayLotteryResult@i_412+1
  3608  06C0  0846               	movf	displayLotteryResult@i_412+1,w
  3609  06C1  3A80               	xorlw	128
  3610  06C2  00A4               	movwf	??_displayLotteryResult
  3611  06C3  3080               	movlw	128
  3612  06C4  0224               	subwf	??_displayLotteryResult,w
  3613  06C5  1D03               	skipz
  3614  06C6  2EC9               	goto	u1205
  3615  06C7  3007               	movlw	7
  3616  06C8  0245               	subwf	displayLotteryResult@i_412,w
  3617  06C9                     u1205:
  3618  06C9  1C03               	skipc
  3619  06CA  2ECC               	goto	u1201
  3620  06CB  2ECD               	goto	u1200
  3621  06CC                     u1201:
  3622  06CC  2ECE               	goto	l2143
  3623  06CD                     u1200:
  3624  06CD  2F64               	goto	l2177
  3625  06CE                     l2143:
  3626                           
  3627                           ;main.c: 295:       for(int wait_cnt=0; wait_cnt<10; wait_cnt++){
  3628  06CE  0020               	movlb	0	; select bank0
  3629  06CF  01B7               	clrf	displayLotteryResult@wait_cnt_413
  3630  06D0  01B8               	clrf	displayLotteryResult@wait_cnt_413+1
  3631  06D1                     l2145:
  3632  06D1  0838               	movf	displayLotteryResult@wait_cnt_413+1,w
  3633  06D2  3A80               	xorlw	128
  3634  06D3  00A4               	movwf	??_displayLotteryResult
  3635  06D4  3080               	movlw	128
  3636  06D5  0224               	subwf	??_displayLotteryResult,w
  3637  06D6  1D03               	skipz
  3638  06D7  2EDA               	goto	u1215
  3639  06D8  300A               	movlw	10
  3640  06D9  0237               	subwf	displayLotteryResult@wait_cnt_413,w
  3641  06DA                     u1215:
  3642  06DA  1C03               	skipc
  3643  06DB  2EDD               	goto	u1211
  3644  06DC  2EDE               	goto	u1210
  3645  06DD                     u1211:
  3646  06DD  2EDF               	goto	l2149
  3647  06DE                     u1210:
  3648  06DE  2F52               	goto	l2175
  3649  06DF                     l2149:
  3650                           
  3651                           ;main.c: 296:         for(int j=1; j<5; j++){
  3652  06DF  3001               	movlw	1
  3653  06E0  0020               	movlb	0	; select bank0
  3654  06E1  00CD               	movwf	displayLotteryResult@j_414
  3655  06E2  3000               	movlw	0
  3656  06E3  00CE               	movwf	displayLotteryResult@j_414+1
  3657  06E4  084E               	movf	displayLotteryResult@j_414+1,w
  3658  06E5  3A80               	xorlw	128
  3659  06E6  00A4               	movwf	??_displayLotteryResult
  3660  06E7  3080               	movlw	128
  3661  06E8  0224               	subwf	??_displayLotteryResult,w
  3662  06E9  1D03               	skipz
  3663  06EA  2EED               	goto	u1225
  3664  06EB  3005               	movlw	5
  3665  06EC  024D               	subwf	displayLotteryResult@j_414,w
  3666  06ED                     u1225:
  3667  06ED  1C03               	skipc
  3668  06EE  2EF0               	goto	u1221
  3669  06EF  2EF1               	goto	u1220
  3670  06F0                     u1221:
  3671  06F0  2EF2               	goto	l2153
  3672  06F1                     u1220:
  3673  06F1  2F40               	goto	l2173
  3674  06F2                     l2153:
  3675                           
  3676                           ;main.c: 297:           selectDIG(j);
  3677  06F2  0020               	movlb	0	; select bank0
  3678  06F3  084E               	movf	displayLotteryResult@j_414+1,w
  3679  06F4  00F1               	movwf	selectDIG@dig+1
  3680  06F5  084D               	movf	displayLotteryResult@j_414,w
  3681  06F6  00F0               	movwf	selectDIG@dig
  3682  06F7  3182  22A0  3184   	fcall	_selectDIG
  3683  06FA                     l2155:
  3684                           
  3685                           ;main.c: 298:           if(j == 1){
  3686  06FA  0020               	movlb	0	; select bank0
  3687  06FB  034D               	decf	displayLotteryResult@j_414,w
  3688  06FC  044E               	iorwf	displayLotteryResult@j_414+1,w
  3689  06FD  1D03               	btfss	3,2
  3690  06FE  2F00               	goto	u1231
  3691  06FF  2F01               	goto	u1230
  3692  0700                     u1231:
  3693  0700  2F09               	goto	l2159
  3694  0701                     u1230:
  3695  0701                     l2157:
  3696                           
  3697                           ;main.c: 299:             displaySegments(dig_1);
  3698  0701  0848               	movf	displayLotteryResult@dig_1+1,w
  3699  0702  00F3               	movwf	displaySegments@num+1
  3700  0703  0847               	movf	displayLotteryResult@dig_1,w
  3701  0704  00F2               	movwf	displaySegments@num
  3702  0705  3183  23C9  3184   	fcall	_displaySegments
  3703                           
  3704                           ;main.c: 300:           }else if(j == 2){
  3705  0708  2F2E               	goto	l2169
  3706  0709                     l2159:
  3707  0709  3002               	movlw	2
  3708  070A  064D               	xorwf	displayLotteryResult@j_414,w
  3709  070B  044E               	iorwf	displayLotteryResult@j_414+1,w
  3710  070C  1D03               	btfss	3,2
  3711  070D  2F0F               	goto	u1241
  3712  070E  2F10               	goto	u1240
  3713  070F                     u1241:
  3714  070F  2F18               	goto	l2163
  3715  0710                     u1240:
  3716  0710                     l2161:
  3717                           
  3718                           ;main.c: 301:             displaySegments(dig_2);
  3719  0710  083C               	movf	displayLotteryResult@dig_2+1,w
  3720  0711  00F3               	movwf	displaySegments@num+1
  3721  0712  083B               	movf	displayLotteryResult@dig_2,w
  3722  0713  00F2               	movwf	displaySegments@num
  3723  0714  3183  23C9  3184   	fcall	_displaySegments
  3724                           
  3725                           ;main.c: 302:           }else if(j == 3){
  3726  0717  2F2E               	goto	l2169
  3727  0718                     l2163:
  3728  0718  3003               	movlw	3
  3729  0719  064D               	xorwf	displayLotteryResult@j_414,w
  3730  071A  044E               	iorwf	displayLotteryResult@j_414+1,w
  3731  071B  1D03               	btfss	3,2
  3732  071C  2F1E               	goto	u1251
  3733  071D  2F1F               	goto	u1250
  3734  071E                     u1251:
  3735  071E  2F27               	goto	l2167
  3736  071F                     u1250:
  3737  071F                     l2165:
  3738                           
  3739                           ;main.c: 303:             displaySegments(dig_3);
  3740  071F  0828               	movf	displayLotteryResult@dig_3+1,w
  3741  0720  00F3               	movwf	displaySegments@num+1
  3742  0721  0827               	movf	displayLotteryResult@dig_3,w
  3743  0722  00F2               	movwf	displaySegments@num
  3744  0723  3183  23C9  3184   	fcall	_displaySegments
  3745                           
  3746                           ;main.c: 304:           }else{
  3747  0726  2F2E               	goto	l2169
  3748  0727                     l2167:
  3749                           
  3750                           ;main.c: 305:             displayRoll(i);
  3751  0727  0846               	movf	displayLotteryResult@i_412+1,w
  3752  0728  00F3               	movwf	displayRoll@cnt+1
  3753  0729  0845               	movf	displayLotteryResult@i_412,w
  3754  072A  00F2               	movwf	displayRoll@cnt
  3755  072B  3182  22F6  3184   	fcall	_displayRoll
  3756  072E                     l2169:
  3757                           
  3758                           ;main.c: 307:         }
  3759  072E  3001               	movlw	1
  3760  072F  0020               	movlb	0	; select bank0
  3761  0730  07CD               	addwf	displayLotteryResult@j_414,f
  3762  0731  3000               	movlw	0
  3763  0732  3DCE               	addwfc	displayLotteryResult@j_414+1,f
  3764  0733                     l2171:
  3765  0733  084E               	movf	displayLotteryResult@j_414+1,w
  3766  0734  3A80               	xorlw	128
  3767  0735  00A4               	movwf	??_displayLotteryResult
  3768  0736  3080               	movlw	128
  3769  0737  0224               	subwf	??_displayLotteryResult,w
  3770  0738  1D03               	skipz
  3771  0739  2F3C               	goto	u1265
  3772  073A  3005               	movlw	5
  3773  073B  024D               	subwf	displayLotteryResult@j_414,w
  3774  073C                     u1265:
  3775  073C  1C03               	skipc
  3776  073D  2F3F               	goto	u1261
  3777  073E  2F40               	goto	u1260
  3778  073F                     u1261:
  3779  073F  2EF2               	goto	l2153
  3780  0740                     u1260:
  3781  0740                     l2173:
  3782                           
  3783                           ;main.c: 308:       }
  3784  0740  3001               	movlw	1
  3785  0741  0020               	movlb	0	; select bank0
  3786  0742  07B7               	addwf	displayLotteryResult@wait_cnt_413,f
  3787  0743  3000               	movlw	0
  3788  0744  3DB8               	addwfc	displayLotteryResult@wait_cnt_413+1,f
  3789  0745  0838               	movf	displayLotteryResult@wait_cnt_413+1,w
  3790  0746  3A80               	xorlw	128
  3791  0747  00A4               	movwf	??_displayLotteryResult
  3792  0748  3080               	movlw	128
  3793  0749  0224               	subwf	??_displayLotteryResult,w
  3794  074A  1D03               	skipz
  3795  074B  2F4E               	goto	u1275
  3796  074C  300A               	movlw	10
  3797  074D  0237               	subwf	displayLotteryResult@wait_cnt_413,w
  3798  074E                     u1275:
  3799  074E  1C03               	skipc
  3800  074F  2F51               	goto	u1271
  3801  0750  2F52               	goto	u1270
  3802  0751                     u1271:
  3803  0751  2EDF               	goto	l2149
  3804  0752                     u1270:
  3805  0752                     l2175:
  3806                           
  3807                           ;main.c: 309:     }
  3808  0752  3001               	movlw	1
  3809  0753  0020               	movlb	0	; select bank0
  3810  0754  07C5               	addwf	displayLotteryResult@i_412,f
  3811  0755  3000               	movlw	0
  3812  0756  3DC6               	addwfc	displayLotteryResult@i_412+1,f
  3813  0757  0846               	movf	displayLotteryResult@i_412+1,w
  3814  0758  3A80               	xorlw	128
  3815  0759  00A4               	movwf	??_displayLotteryResult
  3816  075A  3080               	movlw	128
  3817  075B  0224               	subwf	??_displayLotteryResult,w
  3818  075C  1D03               	skipz
  3819  075D  2F60               	goto	u1285
  3820  075E  3007               	movlw	7
  3821  075F  0245               	subwf	displayLotteryResult@i_412,w
  3822  0760                     u1285:
  3823  0760  1C03               	skipc
  3824  0761  2F63               	goto	u1281
  3825  0762  2F64               	goto	u1280
  3826  0763                     u1281:
  3827  0763  2ECE               	goto	l2143
  3828  0764                     u1280:
  3829  0764                     l2177:
  3830                           
  3831                           ;main.c: 310:   }
  3832  0764  3001               	movlw	1
  3833  0765  0020               	movlb	0	; select bank0
  3834  0766  07B5               	addwf	displayLotteryResult@x_411,f
  3835  0767  3000               	movlw	0
  3836  0768  3DB6               	addwfc	displayLotteryResult@x_411+1,f
  3837  0769  0836               	movf	displayLotteryResult@x_411+1,w
  3838  076A  3A80               	xorlw	128
  3839  076B  00A4               	movwf	??_displayLotteryResult
  3840  076C  3080               	movlw	128
  3841  076D  0224               	subwf	??_displayLotteryResult,w
  3842  076E  1D03               	skipz
  3843  076F  2F72               	goto	u1295
  3844  0770  3001               	movlw	1
  3845  0771  0235               	subwf	displayLotteryResult@x_411,w
  3846  0772                     u1295:
  3847  0772  1C03               	skipc
  3848  0773  2F75               	goto	u1291
  3849  0774  2F76               	goto	u1290
  3850  0775                     u1291:
  3851  0775  2EBB               	goto	l2139
  3852  0776                     u1290:
  3853  0776                     l2179:
  3854                           
  3855                           ;main.c: 313:   for(int wait_cnt=0; wait_cnt<1000; wait_cnt++){
  3856  0776  0020               	movlb	0	; select bank0
  3857  0777  01B9               	clrf	displayLotteryResult@wait_cnt_415
  3858  0778  01BA               	clrf	displayLotteryResult@wait_cnt_415+1
  3859  0779                     l2181:
  3860  0779  083A               	movf	displayLotteryResult@wait_cnt_415+1,w
  3861  077A  3A80               	xorlw	128
  3862  077B  00A4               	movwf	??_displayLotteryResult
  3863  077C  3083               	movlw	131
  3864  077D  0224               	subwf	??_displayLotteryResult,w
  3865  077E  1D03               	skipz
  3866  077F  2F82               	goto	u1305
  3867  0780  30E8               	movlw	232
  3868  0781  0239               	subwf	displayLotteryResult@wait_cnt_415,w
  3869  0782                     u1305:
  3870  0782  1C03               	skipc
  3871  0783  2F85               	goto	u1301
  3872  0784  2F86               	goto	u1300
  3873  0785                     u1301:
  3874  0785  2F87               	goto	l2185
  3875  0786                     u1300:
  3876  0786  2FFA               	goto	l465
  3877  0787                     l2185:
  3878                           
  3879                           ;main.c: 314:     for(int j=1; j<5; j++){
  3880  0787  3001               	movlw	1
  3881  0788  0020               	movlb	0	; select bank0
  3882  0789  00CF               	movwf	displayLotteryResult@j_416
  3883  078A  3000               	movlw	0
  3884  078B  00D0               	movwf	displayLotteryResult@j_416+1
  3885  078C  0850               	movf	displayLotteryResult@j_416+1,w
  3886  078D  3A80               	xorlw	128
  3887  078E  00A4               	movwf	??_displayLotteryResult
  3888  078F  3080               	movlw	128
  3889  0790  0224               	subwf	??_displayLotteryResult,w
  3890  0791  1D03               	skipz
  3891  0792  2F95               	goto	u1315
  3892  0793  3005               	movlw	5
  3893  0794  024F               	subwf	displayLotteryResult@j_416,w
  3894  0795                     u1315:
  3895  0795  1C03               	skipc
  3896  0796  2F98               	goto	u1311
  3897  0797  2F99               	goto	u1310
  3898  0798                     u1311:
  3899  0798  2F9A               	goto	l2189
  3900  0799                     u1310:
  3901  0799  2FE8               	goto	l2209
  3902  079A                     l2189:
  3903                           
  3904                           ;main.c: 315:       selectDIG(j);
  3905  079A  0020               	movlb	0	; select bank0
  3906  079B  0850               	movf	displayLotteryResult@j_416+1,w
  3907  079C  00F1               	movwf	selectDIG@dig+1
  3908  079D  084F               	movf	displayLotteryResult@j_416,w
  3909  079E  00F0               	movwf	selectDIG@dig
  3910  079F  3182  22A0  3184   	fcall	_selectDIG
  3911  07A2                     l2191:
  3912                           
  3913                           ;main.c: 316:       if(j == 1){
  3914  07A2  0020               	movlb	0	; select bank0
  3915  07A3  034F               	decf	displayLotteryResult@j_416,w
  3916  07A4  0450               	iorwf	displayLotteryResult@j_416+1,w
  3917  07A5  1D03               	btfss	3,2
  3918  07A6  2FA8               	goto	u1321
  3919  07A7  2FA9               	goto	u1320
  3920  07A8                     u1321:
  3921  07A8  2FB1               	goto	l2195
  3922  07A9                     u1320:
  3923  07A9                     l2193:
  3924                           
  3925                           ;main.c: 317:         displaySegments(dig_1);
  3926  07A9  0848               	movf	displayLotteryResult@dig_1+1,w
  3927  07AA  00F3               	movwf	displaySegments@num+1
  3928  07AB  0847               	movf	displayLotteryResult@dig_1,w
  3929  07AC  00F2               	movwf	displaySegments@num
  3930  07AD  3183  23C9  3184   	fcall	_displaySegments
  3931                           
  3932                           ;main.c: 318:       }else if(j == 2){
  3933  07B0  2FD6               	goto	l2205
  3934  07B1                     l2195:
  3935  07B1  3002               	movlw	2
  3936  07B2  064F               	xorwf	displayLotteryResult@j_416,w
  3937  07B3  0450               	iorwf	displayLotteryResult@j_416+1,w
  3938  07B4  1D03               	btfss	3,2
  3939  07B5  2FB7               	goto	u1331
  3940  07B6  2FB8               	goto	u1330
  3941  07B7                     u1331:
  3942  07B7  2FC0               	goto	l2199
  3943  07B8                     u1330:
  3944  07B8                     l2197:
  3945                           
  3946                           ;main.c: 319:         displaySegments(dig_2);
  3947  07B8  083C               	movf	displayLotteryResult@dig_2+1,w
  3948  07B9  00F3               	movwf	displaySegments@num+1
  3949  07BA  083B               	movf	displayLotteryResult@dig_2,w
  3950  07BB  00F2               	movwf	displaySegments@num
  3951  07BC  3183  23C9  3184   	fcall	_displaySegments
  3952                           
  3953                           ;main.c: 320:       }else if(j == 3){
  3954  07BF  2FD6               	goto	l2205
  3955  07C0                     l2199:
  3956  07C0  3003               	movlw	3
  3957  07C1  064F               	xorwf	displayLotteryResult@j_416,w
  3958  07C2  0450               	iorwf	displayLotteryResult@j_416+1,w
  3959  07C3  1D03               	btfss	3,2
  3960  07C4  2FC6               	goto	u1341
  3961  07C5  2FC7               	goto	u1340
  3962  07C6                     u1341:
  3963  07C6  2FCF               	goto	l2203
  3964  07C7                     u1340:
  3965  07C7                     l2201:
  3966                           
  3967                           ;main.c: 321:         displaySegments(dig_3);
  3968  07C7  0828               	movf	displayLotteryResult@dig_3+1,w
  3969  07C8  00F3               	movwf	displaySegments@num+1
  3970  07C9  0827               	movf	displayLotteryResult@dig_3,w
  3971  07CA  00F2               	movwf	displaySegments@num
  3972  07CB  3183  23C9  3184   	fcall	_displaySegments
  3973                           
  3974                           ;main.c: 322:       }else{
  3975  07CE  2FD6               	goto	l2205
  3976  07CF                     l2203:
  3977                           
  3978                           ;main.c: 323:         displaySegments(dig_4);
  3979  07CF  0826               	movf	displayLotteryResult@dig_4+1,w
  3980  07D0  00F3               	movwf	displaySegments@num+1
  3981  07D1  0825               	movf	displayLotteryResult@dig_4,w
  3982  07D2  00F2               	movwf	displaySegments@num
  3983  07D3  3183  23C9  3184   	fcall	_displaySegments
  3984  07D6                     l2205:
  3985                           
  3986                           ;main.c: 325:     }
  3987  07D6  3001               	movlw	1
  3988  07D7  0020               	movlb	0	; select bank0
  3989  07D8  07CF               	addwf	displayLotteryResult@j_416,f
  3990  07D9  3000               	movlw	0
  3991  07DA  3DD0               	addwfc	displayLotteryResult@j_416+1,f
  3992  07DB                     l2207:
  3993  07DB  0850               	movf	displayLotteryResult@j_416+1,w
  3994  07DC  3A80               	xorlw	128
  3995  07DD  00A4               	movwf	??_displayLotteryResult
  3996  07DE  3080               	movlw	128
  3997  07DF  0224               	subwf	??_displayLotteryResult,w
  3998  07E0  1D03               	skipz
  3999  07E1  2FE4               	goto	u1355
  4000  07E2  3005               	movlw	5
  4001  07E3  024F               	subwf	displayLotteryResult@j_416,w
  4002  07E4                     u1355:
  4003  07E4  1C03               	skipc
  4004  07E5  2FE7               	goto	u1351
  4005  07E6  2FE8               	goto	u1350
  4006  07E7                     u1351:
  4007  07E7  2F9A               	goto	l2189
  4008  07E8                     u1350:
  4009  07E8                     l2209:
  4010                           
  4011                           ;main.c: 326:   }
  4012  07E8  3001               	movlw	1
  4013  07E9  0020               	movlb	0	; select bank0
  4014  07EA  07B9               	addwf	displayLotteryResult@wait_cnt_415,f
  4015  07EB  3000               	movlw	0
  4016  07EC  3DBA               	addwfc	displayLotteryResult@wait_cnt_415+1,f
  4017  07ED  083A               	movf	displayLotteryResult@wait_cnt_415+1,w
  4018  07EE  3A80               	xorlw	128
  4019  07EF  00A4               	movwf	??_displayLotteryResult
  4020  07F0  3083               	movlw	131
  4021  07F1  0224               	subwf	??_displayLotteryResult,w
  4022  07F2  1D03               	skipz
  4023  07F3  2FF6               	goto	u1365
  4024  07F4  30E8               	movlw	232
  4025  07F5  0239               	subwf	displayLotteryResult@wait_cnt_415,w
  4026  07F6                     u1365:
  4027  07F6  1C03               	skipc
  4028  07F7  2FF9               	goto	u1361
  4029  07F8  2FFA               	goto	u1360
  4030  07F9                     u1361:
  4031  07F9  2F87               	goto	l2185
  4032  07FA                     u1360:
  4033  07FA                     l465:
  4034  07FA  0008               	return
  4035  07FB                     __end_of_displayLotteryResult:
  4036                           
  4037                           	psect	text2
  4038  02A0                     __ptext2:	
  4039 ;; *************** function _selectDIG *****************
  4040 ;; Defined at:
  4041 ;;		line 180 in file "main.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  dig             2    0[COMMON] int 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4055 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 1
  4062 ;; This function calls:
  4063 ;;		_displayClear
  4064 ;; This function is called by:
  4065 ;;		_displayLotteryResult
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _selectDIG
  4071  02A0                     _selectDIG:
  4072  02A0                     l1885:	
  4073                           ;incstack = 0
  4074                           ; Regs used in _selectDIG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4075                           
  4076                           
  4077                           ;main.c: 181:   displayClear();
  4078  02A0  3181  21E1  3182   	fcall	_displayClear
  4079  02A3                     l1887:
  4080  02A3  0022               	movlb	2	; select bank2
  4081  02A4  178D               	bsf	13,7	;volatile
  4082  02A5                     l1889:
  4083  02A5  170D               	bsf	13,6	;volatile
  4084  02A6                     l1891:
  4085  02A6  150E               	bsf	14,2	;volatile
  4086  02A7                     l1893:
  4087  02A7  148E               	bsf	14,1	;volatile
  4088  02A8  2AB1               	goto	l1897
  4089  02A9                     l359:	
  4090                           ;main.c: 190:       do { LATBbits.LATB7 = 0; } while(0);
  4091                           
  4092  02A9  138D               	bcf	13,7	;volatile
  4093  02AA  2AC4               	goto	l372
  4094  02AB                     l363:	
  4095                           ;main.c: 193:       do { LATBbits.LATB6 = 0; } while(0);
  4096                           
  4097  02AB  130D               	bcf	13,6	;volatile
  4098  02AC  2AC4               	goto	l372
  4099  02AD                     l366:	
  4100                           ;main.c: 196:       do { LATCbits.LATC2 = 0; } while(0);
  4101                           
  4102  02AD  110E               	bcf	14,2	;volatile
  4103  02AE  2AC4               	goto	l372
  4104  02AF                     l369:	
  4105                           ;main.c: 199:       do { LATCbits.LATC1 = 0; } while(0);
  4106                           
  4107  02AF  108E               	bcf	14,1	;volatile
  4108  02B0  2AC4               	goto	l372
  4109  02B1                     l1897:
  4110                           
  4111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4112                           ; Switch size 1, requested type "simple"
  4113                           ; Number of cases is 1, Range of values is 0 to 0
  4114                           ; switch strategies available:
  4115                           ; Name         Instructions Cycles
  4116                           ; simple_byte            4     3 (average)
  4117                           ; direct_byte            8     6 (fixed)
  4118                           ; jumptable            260     6 (fixed)
  4119                           ;	Chosen strategy is simple_byte
  4120  02B1  0871               	movf	selectDIG@dig+1,w
  4121  02B2  3A00               	xorlw	0	; case 0
  4122  02B3  1903               	skipnz
  4123  02B4  2AB6               	goto	l2293
  4124  02B5  2AC4               	goto	l372
  4125  02B6                     l2293:
  4126                           
  4127                           ; Switch size 1, requested type "simple"
  4128                           ; Number of cases is 4, Range of values is 1 to 4
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte           13     7 (average)
  4132                           ; direct_byte           17     9 (fixed)
  4133                           ; jumptable            263     9 (fixed)
  4134                           ;	Chosen strategy is simple_byte
  4135  02B6  0870               	movf	selectDIG@dig,w
  4136  02B7  3A01               	xorlw	1	; case 1
  4137  02B8  1903               	skipnz
  4138  02B9  2AA9               	goto	l359
  4139  02BA  3A03               	xorlw	3	; case 2
  4140  02BB  1903               	skipnz
  4141  02BC  2AAB               	goto	l363
  4142  02BD  3A01               	xorlw	1	; case 3
  4143  02BE  1903               	skipnz
  4144  02BF  2AAD               	goto	l366
  4145  02C0  3A07               	xorlw	7	; case 4
  4146  02C1  1903               	skipnz
  4147  02C2  2AAF               	goto	l369
  4148  02C3  2AC4               	goto	l372
  4149  02C4                     l372:
  4150  02C4  0008               	return
  4151  02C5                     __end_of_selectDIG:
  4152                           
  4153                           	psect	text3
  4154  03C9                     __ptext3:	
  4155 ;; *************** function _displaySegments *****************
  4156 ;; Defined at:
  4157 ;;		line 139 in file "main.c"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;  num             2    2[COMMON] int 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 2
  4178 ;; This function calls:
  4179 ;;		_DELAY_milliseconds
  4180 ;;		_displayClear
  4181 ;;		_displayEight
  4182 ;;		_displayFive
  4183 ;;		_displayFour
  4184 ;;		_displayNine
  4185 ;;		_displayOne
  4186 ;;		_displaySeven
  4187 ;;		_displaySix
  4188 ;;		_displayThree
  4189 ;;		_displayTwo
  4190 ;;		_displayZero
  4191 ;; This function is called by:
  4192 ;;		_displayLotteryResult
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _displaySegments
  4198  03C9                     _displaySegments:
  4199  03C9                     l1853:	
  4200                           ;incstack = 0
  4201                           ; Regs used in _displaySegments: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4202                           
  4203                           
  4204                           ;main.c: 140:   displayClear();
  4205  03C9  3181  21E1  3183   	fcall	_displayClear
  4206                           
  4207                           ;main.c: 141:   switch (num)
  4208  03CC  2BF5               	goto	l1877
  4209  03CD                     l1855:
  4210                           
  4211                           ;main.c: 144:     displayZero();
  4212  03CD  3182  2239  3183   	fcall	_displayZero
  4213                           
  4214                           ;main.c: 145:     break;
  4215  03D0  2C1A               	goto	l1879
  4216  03D1                     l1857:
  4217                           
  4218                           ;main.c: 147:     displayOne();
  4219  03D1  3181  21D2  3183   	fcall	_displayOne
  4220                           
  4221                           ;main.c: 148:     break;
  4222  03D4  2C1A               	goto	l1879
  4223  03D5                     l1859:
  4224                           
  4225                           ;main.c: 150:     displayTwo();
  4226  03D5  3182  2224  3183   	fcall	_displayTwo
  4227                           
  4228                           ;main.c: 151:     break;
  4229  03D8  2C1A               	goto	l1879
  4230  03D9                     l1861:
  4231                           
  4232                           ;main.c: 153:     displayThree();
  4233  03D9  3182  221A  3183   	fcall	_displayThree
  4234                           
  4235                           ;main.c: 154:     break;
  4236  03DC  2C1A               	goto	l1879
  4237  03DD                     l1863:
  4238                           
  4239                           ;main.c: 156:     displayFour();
  4240  03DD  3181  21EA  3183   	fcall	_displayFour
  4241                           
  4242                           ;main.c: 157:     break;
  4243  03E0  2C1A               	goto	l1879
  4244  03E1                     l1865:
  4245                           
  4246                           ;main.c: 159:     displayFive();
  4247  03E1  3182  2206  3183   	fcall	_displayFive
  4248                           
  4249                           ;main.c: 160:     break;
  4250  03E4  2C1A               	goto	l1879
  4251  03E5                     l1867:
  4252                           
  4253                           ;main.c: 162:     displaySix();
  4254  03E5  3182  222E  3183   	fcall	_displaySix
  4255                           
  4256                           ;main.c: 163:     break;
  4257  03E8  2C1A               	goto	l1879
  4258  03E9                     l1869:
  4259                           
  4260                           ;main.c: 165:     displaySeven();
  4261  03E9  3181  21F3  3183   	fcall	_displaySeven
  4262                           
  4263                           ;main.c: 166:     break;
  4264  03EC  2C1A               	goto	l1879
  4265  03ED                     l1871:
  4266                           
  4267                           ;main.c: 168:     displayEight();
  4268  03ED  3182  2244  3183   	fcall	_displayEight
  4269                           
  4270                           ;main.c: 169:     break;
  4271  03F0  2C1A               	goto	l1879
  4272  03F1                     l1873:
  4273                           
  4274                           ;main.c: 171:     displayNine();
  4275  03F1  3182  2210  3183   	fcall	_displayNine
  4276                           
  4277                           ;main.c: 172:     break;
  4278  03F4  2C1A               	goto	l1879
  4279  03F5                     l1877:
  4280                           
  4281                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4282                           ; Switch size 1, requested type "simple"
  4283                           ; Number of cases is 1, Range of values is 0 to 0
  4284                           ; switch strategies available:
  4285                           ; Name         Instructions Cycles
  4286                           ; simple_byte            4     3 (average)
  4287                           ; direct_byte            8     6 (fixed)
  4288                           ; jumptable            260     6 (fixed)
  4289                           ;	Chosen strategy is simple_byte
  4290  03F5  0873               	movf	displaySegments@num+1,w
  4291  03F6  3A00               	xorlw	0	; case 0
  4292  03F7  1903               	skipnz
  4293  03F8  2BFA               	goto	l2295
  4294  03F9  2C21               	goto	l346
  4295  03FA                     l2295:
  4296                           
  4297                           ; Switch size 1, requested type "simple"
  4298                           ; Number of cases is 10, Range of values is 0 to 9
  4299                           ; switch strategies available:
  4300                           ; Name         Instructions Cycles
  4301                           ; direct_byte           26     6 (fixed)
  4302                           ; simple_byte           31    16 (average)
  4303                           ; jumptable            260     6 (fixed)
  4304                           ;	Chosen strategy is simple_byte
  4305  03FA  0872               	movf	displaySegments@num,w
  4306  03FB  3A00               	xorlw	0	; case 0
  4307  03FC  1903               	skipnz
  4308  03FD  2BCD               	goto	l1855
  4309  03FE  3A01               	xorlw	1	; case 1
  4310  03FF  1903               	skipnz
  4311  0400  2BD1               	goto	l1857
  4312  0401  3A03               	xorlw	3	; case 2
  4313  0402  1903               	skipnz
  4314  0403  2BD5               	goto	l1859
  4315  0404  3A01               	xorlw	1	; case 3
  4316  0405  1903               	skipnz
  4317  0406  2BD9               	goto	l1861
  4318  0407  3A07               	xorlw	7	; case 4
  4319  0408  1903               	skipnz
  4320  0409  2BDD               	goto	l1863
  4321  040A  3A01               	xorlw	1	; case 5
  4322  040B  1903               	skipnz
  4323  040C  2BE1               	goto	l1865
  4324  040D  3A03               	xorlw	3	; case 6
  4325  040E  1903               	skipnz
  4326  040F  2BE5               	goto	l1867
  4327  0410  3A01               	xorlw	1	; case 7
  4328  0411  1903               	skipnz
  4329  0412  2BE9               	goto	l1869
  4330  0413  3A0F               	xorlw	15	; case 8
  4331  0414  1903               	skipnz
  4332  0415  2BED               	goto	l1871
  4333  0416  3A01               	xorlw	1	; case 9
  4334  0417  1903               	skipnz
  4335  0418  2BF1               	goto	l1873
  4336  0419  2C21               	goto	l346
  4337  041A                     l1879:
  4338                           
  4339                           ;main.c: 177:   DELAY_milliseconds(1);
  4340  041A  3001               	movlw	1
  4341  041B  00F0               	movwf	DELAY_milliseconds@milliseconds
  4342  041C  3000               	movlw	0
  4343  041D  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  4344  041E  3182  226C  3183   	fcall	_DELAY_milliseconds
  4345  0421                     l346:
  4346  0421  0008               	return
  4347  0422                     __end_of_displaySegments:
  4348                           
  4349                           	psect	text4
  4350  0239                     __ptext4:	
  4351 ;; *************** function _displayZero *****************
  4352 ;; Defined at:
  4353 ;;		line 59 in file "main.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 1
  4374 ;; This function calls:
  4375 ;;		_displayClear
  4376 ;; This function is called by:
  4377 ;;		_displaySegments
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           
  4382                           ;psect for function _displayZero
  4383  0239                     _displayZero:
  4384  0239                     l1675:	
  4385                           ;incstack = 0
  4386                           ; Regs used in _displayZero: [status,2+status,0+pclath+cstack]
  4387                           
  4388                           
  4389                           ;main.c: 60:   displayClear();
  4390  0239  3181  21E1  3182   	fcall	_displayClear
  4391  023C                     l1677:
  4392  023C  0022               	movlb	2	; select bank2
  4393  023D  128C               	bcf	12,5	;volatile
  4394  023E                     l1679:
  4395  023E  120C               	bcf	12,4	;volatile
  4396  023F                     l1681:
  4397  023F  128E               	bcf	14,5	;volatile
  4398  0240                     l1683:
  4399  0240  120E               	bcf	14,4	;volatile
  4400  0241                     l1685:
  4401  0241  118E               	bcf	14,3	;volatile
  4402  0242                     l1687:
  4403  0242  130E               	bcf	14,6	;volatile
  4404  0243                     l217:
  4405  0243  0008               	return
  4406  0244                     __end_of_displayZero:
  4407                           
  4408                           	psect	text5
  4409  0224                     __ptext5:	
  4410 ;; *************** function _displayTwo *****************
  4411 ;; Defined at:
  4412 ;;		line 73 in file "main.c"
  4413 ;; Parameters:    Size  Location     Type
  4414 ;;		None
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;		None
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4430 ;;Total ram usage:        0 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; Hardware stack levels required when called: 1
  4433 ;; This function calls:
  4434 ;;		_displayClear
  4435 ;; This function is called by:
  4436 ;;		_displaySegments
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           
  4441                           ;psect for function _displayTwo
  4442  0224                     _displayTwo:
  4443  0224                     l1695:	
  4444                           ;incstack = 0
  4445                           ; Regs used in _displayTwo: [status,2+status,0+pclath+cstack]
  4446                           
  4447                           
  4448                           ;main.c: 74:   displayClear();
  4449  0224  3181  21E1  3182   	fcall	_displayClear
  4450  0227                     l1697:
  4451  0227  0022               	movlb	2	; select bank2
  4452  0228  128C               	bcf	12,5	;volatile
  4453  0229                     l1699:
  4454  0229  120C               	bcf	12,4	;volatile
  4455  022A                     l1701:
  4456  022A  138E               	bcf	14,7	;volatile
  4457  022B                     l1703:
  4458  022B  118E               	bcf	14,3	;volatile
  4459  022C                     l1705:
  4460  022C  120E               	bcf	14,4	;volatile
  4461  022D                     l237:
  4462  022D  0008               	return
  4463  022E                     __end_of_displayTwo:
  4464                           
  4465                           	psect	text6
  4466  021A                     __ptext6:	
  4467 ;; *************** function _displayThree *****************
  4468 ;; Defined at:
  4469 ;;		line 81 in file "main.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;Total ram usage:        0 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 1
  4490 ;; This function calls:
  4491 ;;		_displayClear
  4492 ;; This function is called by:
  4493 ;;		_displaySegments
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           
  4498                           ;psect for function _displayThree
  4499  021A                     _displayThree:
  4500  021A                     l1707:	
  4501                           ;incstack = 0
  4502                           ; Regs used in _displayThree: [status,2+status,0+pclath+cstack]
  4503                           
  4504                           
  4505                           ;main.c: 82:   displayClear();
  4506  021A  3181  21E1  3182   	fcall	_displayClear
  4507  021D                     l1709:
  4508  021D  0022               	movlb	2	; select bank2
  4509  021E  128C               	bcf	12,5	;volatile
  4510  021F                     l1711:
  4511  021F  120C               	bcf	12,4	;volatile
  4512  0220                     l1713:
  4513  0220  138E               	bcf	14,7	;volatile
  4514  0221                     l1715:
  4515  0221  128E               	bcf	14,5	;volatile
  4516  0222                     l1717:
  4517  0222  120E               	bcf	14,4	;volatile
  4518  0223                     l250:
  4519  0223  0008               	return
  4520  0224                     __end_of_displayThree:
  4521                           
  4522                           	psect	text7
  4523  022E                     __ptext7:	
  4524 ;; *************** function _displaySix *****************
  4525 ;; Defined at:
  4526 ;;		line 104 in file "main.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;		None
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;		None
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  1    wreg      void 
  4533 ;; Registers used:
  4534 ;;		status,2, status,0, pclath, cstack
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4544 ;;Total ram usage:        0 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 1
  4547 ;; This function calls:
  4548 ;;		_displayClear
  4549 ;; This function is called by:
  4550 ;;		_displaySegments
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           
  4555                           ;psect for function _displaySix
  4556  022E                     _displaySix:
  4557  022E                     l1741:	
  4558                           ;incstack = 0
  4559                           ; Regs used in _displaySix: [status,2+status,0+pclath+cstack]
  4560                           
  4561                           
  4562                           ;main.c: 105:   displayClear();
  4563  022E  3181  21E1  3182   	fcall	_displayClear
  4564  0231                     l1743:
  4565  0231  0022               	movlb	2	; select bank2
  4566  0232  128C               	bcf	12,5	;volatile
  4567  0233                     l1745:
  4568  0233  130E               	bcf	14,6	;volatile
  4569  0234                     l1747:
  4570  0234  138E               	bcf	14,7	;volatile
  4571  0235                     l1749:
  4572  0235  128E               	bcf	14,5	;volatile
  4573  0236                     l1751:
  4574  0236  120E               	bcf	14,4	;volatile
  4575  0237                     l1753:
  4576  0237  118E               	bcf	14,3	;volatile
  4577  0238                     l289:
  4578  0238  0008               	return
  4579  0239                     __end_of_displaySix:
  4580                           
  4581                           	psect	text8
  4582  01F3                     __ptext8:	
  4583 ;; *************** function _displaySeven *****************
  4584 ;; Defined at:
  4585 ;;		line 113 in file "main.c"
  4586 ;; Parameters:    Size  Location     Type
  4587 ;;		None
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;		None
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  1    wreg      void 
  4592 ;; Registers used:
  4593 ;;		status,2, status,0, pclath, cstack
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;Total ram usage:        0 bytes
  4604 ;; Hardware stack levels used: 1
  4605 ;; Hardware stack levels required when called: 1
  4606 ;; This function calls:
  4607 ;;		_displayClear
  4608 ;; This function is called by:
  4609 ;;		_displaySegments
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function _displaySeven
  4615  01F3                     _displaySeven:
  4616  01F3                     l1755:	
  4617                           ;incstack = 0
  4618                           ; Regs used in _displaySeven: [status,2+status,0+pclath+cstack]
  4619                           
  4620                           
  4621                           ;main.c: 114:   displayClear();
  4622  01F3  3181  21E1  3181   	fcall	_displayClear
  4623  01F6                     l1757:
  4624  01F6  0022               	movlb	2	; select bank2
  4625  01F7  130E               	bcf	14,6	;volatile
  4626  01F8                     l1759:
  4627  01F8  128C               	bcf	12,5	;volatile
  4628  01F9                     l1761:
  4629  01F9  120C               	bcf	12,4	;volatile
  4630  01FA                     l1763:
  4631  01FA  128E               	bcf	14,5	;volatile
  4632  01FB                     l300:
  4633  01FB  0008               	return
  4634  01FC                     __end_of_displaySeven:
  4635                           
  4636                           	psect	text9
  4637  01D2                     __ptext9:	
  4638 ;; *************** function _displayOne *****************
  4639 ;; Defined at:
  4640 ;;		line 68 in file "main.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;		None
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;		None
  4645 ;; Return value:  Size  Location     Type
  4646 ;;                  1    wreg      void 
  4647 ;; Registers used:
  4648 ;;		status,2, status,0, pclath, cstack
  4649 ;; Tracked objects:
  4650 ;;		On entry : 0/0
  4651 ;;		On exit  : 0/0
  4652 ;;		Unchanged: 0/0
  4653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;Total ram usage:        0 bytes
  4659 ;; Hardware stack levels used: 1
  4660 ;; Hardware stack levels required when called: 1
  4661 ;; This function calls:
  4662 ;;		_displayClear
  4663 ;; This function is called by:
  4664 ;;		_displaySegments
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           
  4669                           ;psect for function _displayOne
  4670  01D2                     _displayOne:
  4671  01D2                     l1689:	
  4672                           ;incstack = 0
  4673                           ; Regs used in _displayOne: [status,2+status,0+pclath+cstack]
  4674                           
  4675                           
  4676                           ;main.c: 69:   displayClear();
  4677  01D2  3181  21E1  3181   	fcall	_displayClear
  4678  01D5                     l1691:
  4679  01D5  0022               	movlb	2	; select bank2
  4680  01D6  120C               	bcf	12,4	;volatile
  4681  01D7                     l1693:
  4682  01D7  128E               	bcf	14,5	;volatile
  4683  01D8                     l224:
  4684  01D8  0008               	return
  4685  01D9                     __end_of_displayOne:
  4686                           
  4687                           	psect	text10
  4688  0210                     __ptext10:	
  4689 ;; *************** function _displayNine *****************
  4690 ;; Defined at:
  4691 ;;		line 130 in file "main.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 1
  4712 ;; This function calls:
  4713 ;;		_displayClear
  4714 ;; This function is called by:
  4715 ;;		_displaySegments
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _displayNine
  4721  0210                     _displayNine:
  4722  0210                     l1781:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _displayNine: [status,2+status,0+pclath+cstack]
  4725                           
  4726                           
  4727                           ;main.c: 131:   displayClear();
  4728  0210  3181  21E1  3182   	fcall	_displayClear
  4729  0213                     l1783:
  4730  0213  0022               	movlb	2	; select bank2
  4731  0214  128C               	bcf	12,5	;volatile
  4732  0215                     l1785:
  4733  0215  120C               	bcf	12,4	;volatile
  4734  0216                     l1787:
  4735  0216  138E               	bcf	14,7	;volatile
  4736  0217                     l1789:
  4737  0217  130E               	bcf	14,6	;volatile
  4738  0218                     l1791:
  4739  0218  128E               	bcf	14,5	;volatile
  4740  0219                     l330:
  4741  0219  0008               	return
  4742  021A                     __end_of_displayNine:
  4743                           
  4744                           	psect	text11
  4745  01EA                     __ptext11:	
  4746 ;; *************** function _displayFour *****************
  4747 ;; Defined at:
  4748 ;;		line 89 in file "main.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		status,2, status,0, pclath, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; Hardware stack levels required when called: 1
  4769 ;; This function calls:
  4770 ;;		_displayClear
  4771 ;; This function is called by:
  4772 ;;		_displaySegments
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _displayFour
  4778  01EA                     _displayFour:
  4779  01EA                     l1719:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _displayFour: [status,2+status,0+pclath+cstack]
  4782                           
  4783                           
  4784                           ;main.c: 90:   displayClear();
  4785  01EA  3181  21E1  3181   	fcall	_displayClear
  4786  01ED                     l1721:
  4787  01ED  0022               	movlb	2	; select bank2
  4788  01EE  130E               	bcf	14,6	;volatile
  4789  01EF                     l1723:
  4790  01EF  138E               	bcf	14,7	;volatile
  4791  01F0                     l1725:
  4792  01F0  120C               	bcf	12,4	;volatile
  4793  01F1                     l1727:
  4794  01F1  128E               	bcf	14,5	;volatile
  4795  01F2                     l261:
  4796  01F2  0008               	return
  4797  01F3                     __end_of_displayFour:
  4798                           
  4799                           	psect	text12
  4800  0206                     __ptext12:	
  4801 ;; *************** function _displayFive *****************
  4802 ;; Defined at:
  4803 ;;		line 96 in file "main.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 1
  4824 ;; This function calls:
  4825 ;;		_displayClear
  4826 ;; This function is called by:
  4827 ;;		_displaySegments
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _displayFive
  4833  0206                     _displayFive:
  4834  0206                     l1729:	
  4835                           ;incstack = 0
  4836                           ; Regs used in _displayFive: [status,2+status,0+pclath+cstack]
  4837                           
  4838                           
  4839                           ;main.c: 97:   displayClear();
  4840  0206  3181  21E1  3182   	fcall	_displayClear
  4841  0209                     l1731:
  4842  0209  0022               	movlb	2	; select bank2
  4843  020A  128C               	bcf	12,5	;volatile
  4844  020B                     l1733:
  4845  020B  130E               	bcf	14,6	;volatile
  4846  020C                     l1735:
  4847  020C  138E               	bcf	14,7	;volatile
  4848  020D                     l1737:
  4849  020D  128E               	bcf	14,5	;volatile
  4850  020E                     l1739:
  4851  020E  120E               	bcf	14,4	;volatile
  4852  020F                     l274:
  4853  020F  0008               	return
  4854  0210                     __end_of_displayFive:
  4855                           
  4856                           	psect	text13
  4857  0244                     __ptext13:	
  4858 ;; *************** function _displayEight *****************
  4859 ;; Defined at:
  4860 ;;		line 120 in file "main.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 1
  4881 ;; This function calls:
  4882 ;;		_displayClear
  4883 ;; This function is called by:
  4884 ;;		_displaySegments
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _displayEight
  4890  0244                     _displayEight:
  4891  0244                     l1765:	
  4892                           ;incstack = 0
  4893                           ; Regs used in _displayEight: [status,2+status,0+pclath+cstack]
  4894                           
  4895                           
  4896                           ;main.c: 121:   displayClear();
  4897  0244  3181  21E1  3182   	fcall	_displayClear
  4898  0247                     l1767:
  4899  0247  0022               	movlb	2	; select bank2
  4900  0248  128C               	bcf	12,5	;volatile
  4901  0249                     l1769:
  4902  0249  120C               	bcf	12,4	;volatile
  4903  024A                     l1771:
  4904  024A  128E               	bcf	14,5	;volatile
  4905  024B                     l1773:
  4906  024B  120E               	bcf	14,4	;volatile
  4907  024C                     l1775:
  4908  024C  118E               	bcf	14,3	;volatile
  4909  024D                     l1777:
  4910  024D  130E               	bcf	14,6	;volatile
  4911  024E                     l1779:
  4912  024E  138E               	bcf	14,7	;volatile
  4913  024F                     l317:
  4914  024F  0008               	return
  4915  0250                     __end_of_displayEight:
  4916                           
  4917                           	psect	text14
  4918  02F6                     __ptext14:	
  4919 ;; *************** function _displayRoll *****************
  4920 ;; Defined at:
  4921 ;;		line 207 in file "main.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  cnt             2    2[COMMON] int 
  4924 ;; Auto vars:     Size  Location     Type
  4925 ;;		None
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      void 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;Total ram usage:        2 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; Hardware stack levels required when called: 1
  4942 ;; This function calls:
  4943 ;;		_DELAY_milliseconds
  4944 ;;		_displayClear
  4945 ;; This function is called by:
  4946 ;;		_displayLotteryResult
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           
  4951                           ;psect for function _displayRoll
  4952  02F6                     _displayRoll:
  4953  02F6                     l1903:	
  4954                           ;incstack = 0
  4955                           ; Regs used in _displayRoll: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4956                           
  4957                           
  4958                           ;main.c: 208:   displayClear();
  4959  02F6  3181  21E1  3182   	fcall	_displayClear
  4960                           
  4961                           ;main.c: 209:   switch(cnt){
  4962  02F9  2B12               	goto	l1907
  4963  02FA                     l377:	
  4964                           ;main.c: 211:       do { LATAbits.LATA5 = 0; } while(0);
  4965                           
  4966  02FA  0022               	movlb	2	; select bank2
  4967  02FB  128C               	bcf	12,5	;volatile
  4968  02FC                     l379:	
  4969                           ;main.c: 212:       do { LATAbits.LATA4 = 0; } while(0);
  4970                           
  4971  02FC  120C               	bcf	12,4	;volatile
  4972  02FD  2B2B               	goto	l1909
  4973  02FE                     l383:	
  4974                           ;main.c: 215:       do { LATAbits.LATA4 = 0; } while(0);
  4975                           
  4976  02FE  0022               	movlb	2	; select bank2
  4977  02FF  120C               	bcf	12,4	;volatile
  4978  0300                     l385:	
  4979                           ;main.c: 216:       do { LATCbits.LATC5 = 0; } while(0);
  4980                           
  4981  0300  128E               	bcf	14,5	;volatile
  4982  0301  2B2B               	goto	l1909
  4983  0302                     l388:	
  4984                           ;main.c: 219:       do { LATCbits.LATC5 = 0; } while(0);
  4985                           
  4986  0302  0022               	movlb	2	; select bank2
  4987  0303  128E               	bcf	14,5	;volatile
  4988  0304                     l390:	
  4989                           ;main.c: 220:       do { LATCbits.LATC4 = 0; } while(0);
  4990                           
  4991  0304  120E               	bcf	14,4	;volatile
  4992  0305  2B2B               	goto	l1909
  4993  0306                     l393:	
  4994                           ;main.c: 223:       do { LATCbits.LATC4 = 0; } while(0);
  4995                           
  4996  0306  0022               	movlb	2	; select bank2
  4997  0307  120E               	bcf	14,4	;volatile
  4998  0308                     l395:	
  4999                           ;main.c: 224:       do { LATCbits.LATC3 = 0; } while(0);
  5000                           
  5001  0308  118E               	bcf	14,3	;volatile
  5002  0309  2B2B               	goto	l1909
  5003  030A                     l398:	
  5004                           ;main.c: 227:       do { LATCbits.LATC3 = 0; } while(0);
  5005                           
  5006  030A  0022               	movlb	2	; select bank2
  5007  030B  118E               	bcf	14,3	;volatile
  5008  030C                     l400:	
  5009                           ;main.c: 228:       do { LATCbits.LATC6 = 0; } while(0);
  5010                           
  5011  030C  130E               	bcf	14,6	;volatile
  5012  030D  2B2B               	goto	l1909
  5013  030E                     l403:	
  5014                           ;main.c: 231:       do { LATCbits.LATC6 = 0; } while(0);
  5015                           
  5016  030E  0022               	movlb	2	; select bank2
  5017  030F  130E               	bcf	14,6	;volatile
  5018  0310                     l405:	
  5019                           ;main.c: 232:       do { LATAbits.LATA5 = 0; } while(0);
  5020                           
  5021  0310  128C               	bcf	12,5	;volatile
  5022  0311  2B2B               	goto	l1909
  5023  0312                     l1907:
  5024                           
  5025                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5026                           ; Switch size 1, requested type "simple"
  5027                           ; Number of cases is 1, Range of values is 0 to 0
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte            4     3 (average)
  5031                           ; direct_byte            8     6 (fixed)
  5032                           ; jumptable            260     6 (fixed)
  5033                           ;	Chosen strategy is simple_byte
  5034  0312  0873               	movf	displayRoll@cnt+1,w
  5035  0313  3A00               	xorlw	0	; case 0
  5036  0314  1903               	skipnz
  5037  0315  2B17               	goto	l2297
  5038  0316  2B32               	goto	l408
  5039  0317                     l2297:
  5040                           
  5041                           ; Switch size 1, requested type "simple"
  5042                           ; Number of cases is 6, Range of values is 1 to 6
  5043                           ; switch strategies available:
  5044                           ; Name         Instructions Cycles
  5045                           ; simple_byte           19    10 (average)
  5046                           ; direct_byte           21     9 (fixed)
  5047                           ; jumptable            263     9 (fixed)
  5048                           ;	Chosen strategy is simple_byte
  5049  0317  0872               	movf	displayRoll@cnt,w
  5050  0318  3A01               	xorlw	1	; case 1
  5051  0319  1903               	skipnz
  5052  031A  2AFA               	goto	l377
  5053  031B  3A03               	xorlw	3	; case 2
  5054  031C  1903               	skipnz
  5055  031D  2AFE               	goto	l383
  5056  031E  3A01               	xorlw	1	; case 3
  5057  031F  1903               	skipnz
  5058  0320  2B02               	goto	l388
  5059  0321  3A07               	xorlw	7	; case 4
  5060  0322  1903               	skipnz
  5061  0323  2B06               	goto	l393
  5062  0324  3A01               	xorlw	1	; case 5
  5063  0325  1903               	skipnz
  5064  0326  2B0A               	goto	l398
  5065  0327  3A03               	xorlw	3	; case 6
  5066  0328  1903               	skipnz
  5067  0329  2B0E               	goto	l403
  5068  032A  2B32               	goto	l408
  5069  032B                     l1909:
  5070                           
  5071                           ;main.c: 238:   DELAY_milliseconds(1);
  5072  032B  3001               	movlw	1
  5073  032C  00F0               	movwf	DELAY_milliseconds@milliseconds
  5074  032D  3000               	movlw	0
  5075  032E  00F1               	movwf	DELAY_milliseconds@milliseconds+1
  5076  032F  3182  226C  3182   	fcall	_DELAY_milliseconds
  5077  0332                     l408:
  5078  0332  0008               	return
  5079  0333                     __end_of_displayRoll:
  5080                           
  5081                           	psect	text15
  5082  01E1                     __ptext15:	
  5083 ;; *************** function _displayClear *****************
  5084 ;; Defined at:
  5085 ;;		line 50 in file "main.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;		None
  5088 ;; Auto vars:     Size  Location     Type
  5089 ;;		None
  5090 ;; Return value:  Size  Location     Type
  5091 ;;                  1    wreg      void 
  5092 ;; Registers used:
  5093 ;;		None
  5094 ;; Tracked objects:
  5095 ;;		On entry : 0/0
  5096 ;;		On exit  : 0/0
  5097 ;;		Unchanged: 0/0
  5098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;Total ram usage:        0 bytes
  5104 ;; Hardware stack levels used: 1
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_displayZero
  5109 ;;		_displayOne
  5110 ;;		_displayTwo
  5111 ;;		_displayThree
  5112 ;;		_displayFour
  5113 ;;		_displayFive
  5114 ;;		_displaySix
  5115 ;;		_displaySeven
  5116 ;;		_displayEight
  5117 ;;		_displayNine
  5118 ;;		_displaySegments
  5119 ;;		_selectDIG
  5120 ;;		_displayRoll
  5121 ;;		_main
  5122 ;; This function uses a non-reentrant model
  5123 ;;
  5124                           
  5125                           
  5126                           ;psect for function _displayClear
  5127  01E1                     _displayClear:
  5128  01E1                     l188:	
  5129                           ;incstack = 0
  5130                           ; Regs used in _displayClear: []
  5131                           ;main.c: 51:   do { LATAbits.LATA5 = 1; } while(0);
  5132                           
  5133  01E1  0022               	movlb	2	; select bank2
  5134  01E2  168C               	bsf	12,5	;volatile
  5135  01E3                     l190:	
  5136                           ;main.c: 52:   do { LATAbits.LATA4 = 1; } while(0);
  5137                           
  5138  01E3  160C               	bsf	12,4	;volatile
  5139  01E4                     l192:	
  5140                           ;main.c: 53:   do { LATCbits.LATC5 = 1; } while(0);
  5141                           
  5142  01E4  168E               	bsf	14,5	;volatile
  5143  01E5                     l194:	
  5144                           ;main.c: 54:   do { LATCbits.LATC4 = 1; } while(0);
  5145                           
  5146  01E5  160E               	bsf	14,4	;volatile
  5147  01E6                     l196:	
  5148                           ;main.c: 55:   do { LATCbits.LATC3 = 1; } while(0);
  5149                           
  5150  01E6  158E               	bsf	14,3	;volatile
  5151  01E7                     l198:	
  5152                           ;main.c: 56:   do { LATCbits.LATC6 = 1; } while(0);
  5153                           
  5154  01E7  170E               	bsf	14,6	;volatile
  5155  01E8                     l200:	
  5156                           ;main.c: 57:   do { LATCbits.LATC7 = 1; } while(0);
  5157                           
  5158  01E8  178E               	bsf	14,7	;volatile
  5159  01E9                     l202:
  5160  01E9  0008               	return
  5161  01EA                     __end_of_displayClear:
  5162                           
  5163                           	psect	text16
  5164  026C                     __ptext16:	
  5165 ;; *************** function _DELAY_milliseconds *****************
  5166 ;; Defined at:
  5167 ;;		line 38 in file "mcc_generated_files/delay.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  milliseconds    2    0[COMMON] unsigned short 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;		None
  5172 ;; Return value:  Size  Location     Type
  5173 ;;                  1    wreg      void 
  5174 ;; Registers used:
  5175 ;;		wreg, status,2, status,0
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5185 ;;Total ram usage:        2 bytes
  5186 ;; Hardware stack levels used: 1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_displaySegments
  5191 ;;		_displayRoll
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _DELAY_milliseconds
  5197  026C                     _DELAY_milliseconds:
  5198  026C                     l1793:	
  5199                           ;incstack = 0
  5200                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
  5201                           
  5202                           
  5203                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5204  026C  2A71               	goto	l1797
  5205  026D                     l1795:
  5206                           
  5207                           ;mcc_generated_files/delay.c: 40:         _delay((unsigned long)((1)*(500000/4000.0)));
  5208  026D  3029               	movlw	41
  5209  026E                     u1417:
  5210  026E  0B89               	decfsz	9,f
  5211  026F  2A6E               	goto	u1417
  5212  0270  3200               	nop2
  5213  0271                     l1797:
  5214                           
  5215                           ;mcc_generated_files/delay.c: 39:     while(milliseconds--){
  5216  0271  3001               	movlw	1
  5217  0272  02F0               	subwf	DELAY_milliseconds@milliseconds,f
  5218  0273  3000               	movlw	0
  5219  0274  3BF1               	subwfb	DELAY_milliseconds@milliseconds+1,f
  5220  0275  0A70               	incf	DELAY_milliseconds@milliseconds,w
  5221  0276  1D03               	skipz
  5222  0277  2A7C               	goto	u731
  5223  0278  0A71               	incf	DELAY_milliseconds@milliseconds+1,w
  5224  0279  1D03               	btfss	3,2
  5225  027A  2A7C               	goto	u731
  5226  027B  2A7D               	goto	u730
  5227  027C                     u731:
  5228  027C  2A6D               	goto	l1795
  5229  027D                     u730:
  5230  027D                     l488:
  5231  027D  0008               	return
  5232  027E                     __end_of_DELAY_milliseconds:
  5233                           
  5234                           	psect	text17
  5235  0375                     __ptext17:	
  5236 ;; *************** function ___awmod *****************
  5237 ;; Defined at:
  5238 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  divisor         2    9[COMMON] int 
  5241 ;;  dividend        2   11[COMMON] int 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  sign            1    1[BANK0 ] unsigned char 
  5244 ;;  counter         1    0[BANK0 ] unsigned char 
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  2    9[COMMON] int 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;Total ram usage:        7 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_displayLotteryResult
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           
  5268                           ;psect for function ___awmod
  5269  0375                     ___awmod:
  5270  0375                     l1959:	
  5271                           ;incstack = 0
  5272                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5273                           
  5274  0375  0020               	movlb	0	; select bank0
  5275  0376  01A1               	clrf	___awmod@sign
  5276  0377                     l1961:
  5277  0377  1FFC               	btfss	___awmod@dividend+1,7
  5278  0378  2B7A               	goto	u841
  5279  0379  2B7B               	goto	u840
  5280  037A                     u841:
  5281  037A  2B82               	goto	l1967
  5282  037B                     u840:
  5283  037B                     l1963:
  5284  037B  09FB               	comf	___awmod@dividend,f
  5285  037C  09FC               	comf	___awmod@dividend+1,f
  5286  037D  0AFB               	incf	___awmod@dividend,f
  5287  037E  1903               	skipnz
  5288  037F  0AFC               	incf	___awmod@dividend+1,f
  5289  0380                     l1965:
  5290  0380  01A1               	clrf	___awmod@sign
  5291  0381  0AA1               	incf	___awmod@sign,f
  5292  0382                     l1967:
  5293  0382  1FFA               	btfss	___awmod@divisor+1,7
  5294  0383  2B85               	goto	u851
  5295  0384  2B86               	goto	u850
  5296  0385                     u851:
  5297  0385  2B8B               	goto	l1971
  5298  0386                     u850:
  5299  0386                     l1969:
  5300  0386  09F9               	comf	___awmod@divisor,f
  5301  0387  09FA               	comf	___awmod@divisor+1,f
  5302  0388  0AF9               	incf	___awmod@divisor,f
  5303  0389  1903               	skipnz
  5304  038A  0AFA               	incf	___awmod@divisor+1,f
  5305  038B                     l1971:
  5306  038B  0879               	movf	___awmod@divisor,w
  5307  038C  047A               	iorwf	___awmod@divisor+1,w
  5308  038D  1903               	btfsc	3,2
  5309  038E  2B90               	goto	u861
  5310  038F  2B91               	goto	u860
  5311  0390                     u861:
  5312  0390  2BBA               	goto	l1989
  5313  0391                     u860:
  5314  0391                     l1973:
  5315  0391  01A0               	clrf	___awmod@counter
  5316  0392  0AA0               	incf	___awmod@counter,f
  5317  0393  2B9D               	goto	l1979
  5318  0394                     l1975:
  5319  0394  3001               	movlw	1
  5320  0395                     u875:
  5321  0395  35F9               	lslf	___awmod@divisor,f
  5322  0396  0DFA               	rlf	___awmod@divisor+1,f
  5323  0397  0B89               	decfsz	9,f
  5324  0398  2B95               	goto	u875
  5325  0399                     l1977:
  5326  0399  3001               	movlw	1
  5327  039A  00FD               	movwf	??___awmod
  5328  039B  087D               	movf	??___awmod,w
  5329  039C  07A0               	addwf	___awmod@counter,f
  5330  039D                     l1979:
  5331  039D  1FFA               	btfss	___awmod@divisor+1,7
  5332  039E  2BA0               	goto	u881
  5333  039F  2BA1               	goto	u880
  5334  03A0                     u881:
  5335  03A0  2B94               	goto	l1975
  5336  03A1                     u880:
  5337  03A1                     l1981:
  5338  03A1  087A               	movf	___awmod@divisor+1,w
  5339  03A2  027C               	subwf	___awmod@dividend+1,w
  5340  03A3  1D03               	skipz
  5341  03A4  2BA7               	goto	u895
  5342  03A5  0879               	movf	___awmod@divisor,w
  5343  03A6  027B               	subwf	___awmod@dividend,w
  5344  03A7                     u895:
  5345  03A7  1C03               	skipc
  5346  03A8  2BAA               	goto	u891
  5347  03A9  2BAB               	goto	u890
  5348  03AA                     u891:
  5349  03AA  2BAF               	goto	l1985
  5350  03AB                     u890:
  5351  03AB                     l1983:
  5352  03AB  0879               	movf	___awmod@divisor,w
  5353  03AC  02FB               	subwf	___awmod@dividend,f
  5354  03AD  087A               	movf	___awmod@divisor+1,w
  5355  03AE  3BFC               	subwfb	___awmod@dividend+1,f
  5356  03AF                     l1985:
  5357  03AF  3001               	movlw	1
  5358  03B0                     u905:
  5359  03B0  36FA               	lsrf	___awmod@divisor+1,f
  5360  03B1  0CF9               	rrf	___awmod@divisor,f
  5361  03B2  0B89               	decfsz	9,f
  5362  03B3  2BB0               	goto	u905
  5363  03B4                     l1987:
  5364  03B4  3001               	movlw	1
  5365  03B5  02A0               	subwf	___awmod@counter,f
  5366  03B6  1D03               	btfss	3,2
  5367  03B7  2BB9               	goto	u911
  5368  03B8  2BBA               	goto	u910
  5369  03B9                     u911:
  5370  03B9  2BA1               	goto	l1981
  5371  03BA                     u910:
  5372  03BA                     l1989:
  5373  03BA  0821               	movf	___awmod@sign,w
  5374  03BB  1903               	btfsc	3,2
  5375  03BC  2BBE               	goto	u921
  5376  03BD  2BBF               	goto	u920
  5377  03BE                     u921:
  5378  03BE  2BC4               	goto	l1993
  5379  03BF                     u920:
  5380  03BF                     l1991:
  5381  03BF  09FB               	comf	___awmod@dividend,f
  5382  03C0  09FC               	comf	___awmod@dividend+1,f
  5383  03C1  0AFB               	incf	___awmod@dividend,f
  5384  03C2  1903               	skipnz
  5385  03C3  0AFC               	incf	___awmod@dividend+1,f
  5386  03C4                     l1993:
  5387  03C4  087C               	movf	___awmod@dividend+1,w
  5388  03C5  00FA               	movwf	?___awmod+1
  5389  03C6  087B               	movf	___awmod@dividend,w
  5390  03C7  00F9               	movwf	?___awmod
  5391  03C8                     l731:
  5392  03C8  0008               	return
  5393  03C9                     __end_of___awmod:
  5394                           
  5395                           	psect	text18
  5396  0422                     __ptext18:	
  5397 ;; *************** function ___awdiv *****************
  5398 ;; Defined at:
  5399 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  divisor         2    0[COMMON] int 
  5402 ;;  dividend        2    2[COMMON] int 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  quotient        2    7[COMMON] int 
  5405 ;;  sign            1    6[COMMON] unsigned char 
  5406 ;;  counter         1    5[COMMON] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;                  2    0[COMMON] int 
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;Total ram usage:        9 bytes
  5421 ;; Hardware stack levels used: 1
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_displayLotteryResult
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function ___awdiv
  5431  0422                     ___awdiv:
  5432  0422                     l1915:	
  5433                           ;incstack = 0
  5434                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5435                           
  5436  0422  01F6               	clrf	___awdiv@sign
  5437  0423                     l1917:
  5438  0423  1FF1               	btfss	___awdiv@divisor+1,7
  5439  0424  2C26               	goto	u741
  5440  0425  2C27               	goto	u740
  5441  0426                     u741:
  5442  0426  2C2E               	goto	l1923
  5443  0427                     u740:
  5444  0427                     l1919:
  5445  0427  09F0               	comf	___awdiv@divisor,f
  5446  0428  09F1               	comf	___awdiv@divisor+1,f
  5447  0429  0AF0               	incf	___awdiv@divisor,f
  5448  042A  1903               	skipnz
  5449  042B  0AF1               	incf	___awdiv@divisor+1,f
  5450  042C                     l1921:
  5451  042C  01F6               	clrf	___awdiv@sign
  5452  042D  0AF6               	incf	___awdiv@sign,f
  5453  042E                     l1923:
  5454  042E  1FF3               	btfss	___awdiv@dividend+1,7
  5455  042F  2C31               	goto	u751
  5456  0430  2C32               	goto	u750
  5457  0431                     u751:
  5458  0431  2C3B               	goto	l1929
  5459  0432                     u750:
  5460  0432                     l1925:
  5461  0432  09F2               	comf	___awdiv@dividend,f
  5462  0433  09F3               	comf	___awdiv@dividend+1,f
  5463  0434  0AF2               	incf	___awdiv@dividend,f
  5464  0435  1903               	skipnz
  5465  0436  0AF3               	incf	___awdiv@dividend+1,f
  5466  0437                     l1927:
  5467  0437  3001               	movlw	1
  5468  0438  00F4               	movwf	??___awdiv
  5469  0439  0874               	movf	??___awdiv,w
  5470  043A  06F6               	xorwf	___awdiv@sign,f
  5471  043B                     l1929:
  5472  043B  01F7               	clrf	___awdiv@quotient
  5473  043C  01F8               	clrf	___awdiv@quotient+1
  5474  043D                     l1931:
  5475  043D  0870               	movf	___awdiv@divisor,w
  5476  043E  0471               	iorwf	___awdiv@divisor+1,w
  5477  043F  1903               	btfsc	3,2
  5478  0440  2C42               	goto	u761
  5479  0441  2C43               	goto	u760
  5480  0442                     u761:
  5481  0442  2C72               	goto	l1951
  5482  0443                     u760:
  5483  0443                     l1933:
  5484  0443  01F5               	clrf	___awdiv@counter
  5485  0444  0AF5               	incf	___awdiv@counter,f
  5486  0445  2C4F               	goto	l1939
  5487  0446                     l1935:
  5488  0446  3001               	movlw	1
  5489  0447                     u775:
  5490  0447  35F0               	lslf	___awdiv@divisor,f
  5491  0448  0DF1               	rlf	___awdiv@divisor+1,f
  5492  0449  0B89               	decfsz	9,f
  5493  044A  2C47               	goto	u775
  5494  044B                     l1937:
  5495  044B  3001               	movlw	1
  5496  044C  00F4               	movwf	??___awdiv
  5497  044D  0874               	movf	??___awdiv,w
  5498  044E  07F5               	addwf	___awdiv@counter,f
  5499  044F                     l1939:
  5500  044F  1FF1               	btfss	___awdiv@divisor+1,7
  5501  0450  2C52               	goto	u781
  5502  0451  2C53               	goto	u780
  5503  0452                     u781:
  5504  0452  2C46               	goto	l1935
  5505  0453                     u780:
  5506  0453                     l1941:
  5507  0453  3001               	movlw	1
  5508  0454                     u795:
  5509  0454  35F7               	lslf	___awdiv@quotient,f
  5510  0455  0DF8               	rlf	___awdiv@quotient+1,f
  5511  0456  0B89               	decfsz	9,f
  5512  0457  2C54               	goto	u795
  5513  0458  0871               	movf	___awdiv@divisor+1,w
  5514  0459  0273               	subwf	___awdiv@dividend+1,w
  5515  045A  1D03               	skipz
  5516  045B  2C5E               	goto	u805
  5517  045C  0870               	movf	___awdiv@divisor,w
  5518  045D  0272               	subwf	___awdiv@dividend,w
  5519  045E                     u805:
  5520  045E  1C03               	skipc
  5521  045F  2C61               	goto	u801
  5522  0460  2C62               	goto	u800
  5523  0461                     u801:
  5524  0461  2C67               	goto	l1947
  5525  0462                     u800:
  5526  0462                     l1943:
  5527  0462  0870               	movf	___awdiv@divisor,w
  5528  0463  02F2               	subwf	___awdiv@dividend,f
  5529  0464  0871               	movf	___awdiv@divisor+1,w
  5530  0465  3BF3               	subwfb	___awdiv@dividend+1,f
  5531  0466                     l1945:
  5532  0466  1477               	bsf	___awdiv@quotient,0
  5533  0467                     l1947:
  5534  0467  3001               	movlw	1
  5535  0468                     u815:
  5536  0468  36F1               	lsrf	___awdiv@divisor+1,f
  5537  0469  0CF0               	rrf	___awdiv@divisor,f
  5538  046A  0B89               	decfsz	9,f
  5539  046B  2C68               	goto	u815
  5540  046C                     l1949:
  5541  046C  3001               	movlw	1
  5542  046D  02F5               	subwf	___awdiv@counter,f
  5543  046E  1D03               	btfss	3,2
  5544  046F  2C71               	goto	u821
  5545  0470  2C72               	goto	u820
  5546  0471                     u821:
  5547  0471  2C53               	goto	l1941
  5548  0472                     u820:
  5549  0472                     l1951:
  5550  0472  0876               	movf	___awdiv@sign,w
  5551  0473  1903               	btfsc	3,2
  5552  0474  2C76               	goto	u831
  5553  0475  2C77               	goto	u830
  5554  0476                     u831:
  5555  0476  2C7C               	goto	l1955
  5556  0477                     u830:
  5557  0477                     l1953:
  5558  0477  09F7               	comf	___awdiv@quotient,f
  5559  0478  09F8               	comf	___awdiv@quotient+1,f
  5560  0479  0AF7               	incf	___awdiv@quotient,f
  5561  047A  1903               	skipnz
  5562  047B  0AF8               	incf	___awdiv@quotient+1,f
  5563  047C                     l1955:
  5564  047C  0878               	movf	___awdiv@quotient+1,w
  5565  047D  00F1               	movwf	?___awdiv+1
  5566  047E  0877               	movf	___awdiv@quotient,w
  5567  047F  00F0               	movwf	?___awdiv
  5568  0480                     l718:
  5569  0480  0008               	return
  5570  0481                     __end_of___awdiv:
  5571                           
  5572                           	psect	text19
  5573  0250                     __ptext19:	
  5574 ;; *************** function _SYSTEM_Initialize *****************
  5575 ;; Defined at:
  5576 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;		None
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		wreg, status,2, status,0, pclath, cstack
  5585 ;; Tracked objects:
  5586 ;;		On entry : 0/0
  5587 ;;		On exit  : 0/0
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;Total ram usage:        0 bytes
  5595 ;; Hardware stack levels used: 1
  5596 ;; Hardware stack levels required when called: 2
  5597 ;; This function calls:
  5598 ;;		_EUSART_Initialize
  5599 ;;		_OSCILLATOR_Initialize
  5600 ;;		_PIN_MANAGER_Initialize
  5601 ;;		_WDT_Initialize
  5602 ;; This function is called by:
  5603 ;;		_main
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           
  5608                           ;psect for function _SYSTEM_Initialize
  5609  0250                     _SYSTEM_Initialize:
  5610  0250                     l2017:	
  5611                           ;incstack = 0
  5612                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5613                           
  5614                           
  5615                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  5616  0250  3182  22C5  3182   	fcall	_PIN_MANAGER_Initialize
  5617                           
  5618                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  5619  0253  3181  21D9  3182   	fcall	_OSCILLATOR_Initialize
  5620                           
  5621                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  5622  0256  3181  21B7  3182   	fcall	_WDT_Initialize
  5623                           
  5624                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  5625  0259  3182  227E  3182   	fcall	_EUSART_Initialize
  5626  025C                     l163:
  5627  025C  0008               	return
  5628  025D                     __end_of_SYSTEM_Initialize:
  5629                           
  5630                           	psect	text20
  5631  01B7                     __ptext20:	
  5632 ;; *************** function _WDT_Initialize *****************
  5633 ;; Defined at:
  5634 ;;		line 71 in file "mcc_generated_files/mcc.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;		None
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;Total ram usage:        0 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		_SYSTEM_Initialize
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _WDT_Initialize
  5663  01B7                     _WDT_Initialize:
  5664  01B7                     l1851:	
  5665                           ;incstack = 0
  5666                           ; Regs used in _WDT_Initialize: [wreg]
  5667                           
  5668                           
  5669                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  5670  01B7  3016               	movlw	22
  5671  01B8  0021               	movlb	1	; select bank1
  5672  01B9  0097               	movwf	23	;volatile
  5673  01BA                     l169:
  5674  01BA  0008               	return
  5675  01BB                     __end_of_WDT_Initialize:
  5676                           
  5677                           	psect	text21
  5678  02C5                     __ptext21:	
  5679 ;; *************** function _PIN_MANAGER_Initialize *****************
  5680 ;; Defined at:
  5681 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      void 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;Total ram usage:        0 bytes
  5700 ;; Hardware stack levels used: 1
  5701 ;; This function calls:
  5702 ;;		Nothing
  5703 ;; This function is called by:
  5704 ;;		_SYSTEM_Initialize
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           
  5709                           ;psect for function _PIN_MANAGER_Initialize
  5710  02C5                     _PIN_MANAGER_Initialize:
  5711  02C5                     l1811:	
  5712                           ;incstack = 0
  5713                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5714                           
  5715                           
  5716                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  5717  02C5  0022               	movlb	2	; select bank2
  5718  02C6  018C               	clrf	12	;volatile
  5719                           
  5720                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  5721  02C7  018D               	clrf	13	;volatile
  5722                           
  5723                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  5724  02C8  018E               	clrf	14	;volatile
  5725  02C9                     l1813:
  5726                           
  5727                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x07;
  5728  02C9  3007               	movlw	7
  5729  02CA  0021               	movlb	1	; select bank1
  5730  02CB  008C               	movwf	12	;volatile
  5731  02CC                     l1815:
  5732                           
  5733                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x20;
  5734  02CC  3020               	movlw	32
  5735  02CD  008D               	movwf	13	;volatile
  5736  02CE                     l1817:
  5737                           
  5738                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x01;
  5739  02CE  3001               	movlw	1
  5740  02CF  008E               	movwf	14	;volatile
  5741  02D0                     l1819:
  5742                           
  5743                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  5744  02D0  30CF               	movlw	207
  5745  02D1  0023               	movlb	3	; select bank3
  5746  02D2  008E               	movwf	14	;volatile
  5747  02D3                     l1821:
  5748                           
  5749                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  5750  02D3  30C0               	movlw	192
  5751  02D4  008D               	movwf	13	;volatile
  5752  02D5                     l1823:
  5753                           
  5754                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  5755  02D5  3017               	movlw	23
  5756  02D6  008C               	movwf	12	;volatile
  5757                           
  5758                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  5759  02D7  0024               	movlb	4	; select bank4
  5760  02D8  018D               	clrf	13	;volatile
  5761                           
  5762                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  5763  02D9  018C               	clrf	12	;volatile
  5764                           
  5765                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  5766  02DA  018E               	clrf	14	;volatile
  5767  02DB                     l1825:
  5768                           
  5769                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  5770  02DB  0021               	movlb	1	; select bank1
  5771  02DC  1795               	bsf	21,7	;volatile
  5772                           
  5773                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  5774  02DD  0025               	movlb	5	; select bank5
  5775  02DE  018C               	clrf	12	;volatile
  5776                           
  5777                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  5778  02DF  018D               	clrf	13	;volatile
  5779                           
  5780                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  5781  02E0  018E               	clrf	14	;volatile
  5782  02E1                     l1827:
  5783                           
  5784                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  5785  02E1  3037               	movlw	55
  5786  02E2  0026               	movlb	6	; select bank6
  5787  02E3  008C               	movwf	12	;volatile
  5788  02E4                     l1829:
  5789                           
  5790                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  5791  02E4  30F0               	movlw	240
  5792  02E5  008D               	movwf	13	;volatile
  5793  02E6                     l1831:
  5794                           
  5795                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  5796  02E6  30FF               	movlw	255
  5797  02E7  008E               	movwf	14	;volatile
  5798  02E8                     l1833:
  5799                           
  5800                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  5801  02E8  303F               	movlw	63
  5802  02E9  0027               	movlb	7	; select bank7
  5803  02EA  008C               	movwf	12	;volatile
  5804  02EB                     l1835:
  5805                           
  5806                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  5807  02EB  30F0               	movlw	240
  5808  02EC  008D               	movwf	13	;volatile
  5809  02ED                     l1837:
  5810                           
  5811                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  5812  02ED  30FF               	movlw	255
  5813  02EE  008E               	movwf	14	;volatile
  5814  02EF                     l1839:
  5815                           
  5816                           ;mcc_generated_files/pin_manager.c: 115:     RXPPS = 0x0D;
  5817  02EF  300D               	movlw	13
  5818  02F0  003C               	movlb	28	; select bank28
  5819  02F1  00A4               	movwf	36	;volatile
  5820  02F2                     l1841:
  5821                           
  5822                           ;mcc_generated_files/pin_manager.c: 117:     RB4PPS = 0x16;
  5823  02F2  3016               	movlw	22
  5824  02F3  003D               	movlb	29	; select bank29
  5825  02F4  009C               	movwf	28	;volatile
  5826  02F5                     l139:
  5827  02F5  0008               	return
  5828  02F6                     __end_of_PIN_MANAGER_Initialize:
  5829                           
  5830                           	psect	text22
  5831  01D9                     __ptext22:	
  5832 ;; *************** function _OSCILLATOR_Initialize *****************
  5833 ;; Defined at:
  5834 ;;		line 59 in file "mcc_generated_files/mcc.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;		None
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;		None
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, status,2
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;Total ram usage:        0 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; This function calls:
  5855 ;;		Nothing
  5856 ;; This function is called by:
  5857 ;;		_SYSTEM_Initialize
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function _OSCILLATOR_Initialize
  5863  01D9                     _OSCILLATOR_Initialize:
  5864  01D9                     l1843:	
  5865                           ;incstack = 0
  5866                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5867                           
  5868                           
  5869                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x38;
  5870  01D9  3038               	movlw	56
  5871  01DA  0021               	movlb	1	; select bank1
  5872  01DB  0099               	movwf	25	;volatile
  5873  01DC                     l1845:
  5874                           
  5875                           ;mcc_generated_files/mcc.c: 64:     OSCSTAT = 0x00;
  5876  01DC  019A               	clrf	26	;volatile
  5877  01DD                     l1847:
  5878                           
  5879                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  5880  01DD  0198               	clrf	24	;volatile
  5881  01DE                     l1849:
  5882                           
  5883                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  5884  01DE  0024               	movlb	4	; select bank4
  5885  01DF  019D               	clrf	29	;volatile
  5886  01E0                     l166:
  5887  01E0  0008               	return
  5888  01E1                     __end_of_OSCILLATOR_Initialize:
  5889                           
  5890                           	psect	text23
  5891  027E                     __ptext23:	
  5892 ;; *************** function _EUSART_Initialize *****************
  5893 ;; Defined at:
  5894 ;;		line 66 in file "mcc_generated_files/eusart.c"
  5895 ;; Parameters:    Size  Location     Type
  5896 ;;		None
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;		None
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      void 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;Total ram usage:        0 bytes
  5913 ;; Hardware stack levels used: 1
  5914 ;; Hardware stack levels required when called: 1
  5915 ;; This function calls:
  5916 ;;		_EUSART_SetErrorHandler
  5917 ;;		_EUSART_SetFramingErrorHandler
  5918 ;;		_EUSART_SetOverrunErrorHandler
  5919 ;; This function is called by:
  5920 ;;		_SYSTEM_Initialize
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _EUSART_Initialize
  5926  027E                     _EUSART_Initialize:
  5927  027E                     l1799:	
  5928                           ;incstack = 0
  5929                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5930                           
  5931                           
  5932                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
  5933  027E  3008               	movlw	8
  5934  027F  0023               	movlb	3	; select bank3
  5935  0280  009F               	movwf	31	;volatile
  5936                           
  5937                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x90;
  5938  0281  3090               	movlw	144
  5939  0282  009D               	movwf	29	;volatile
  5940                           
  5941                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
  5942  0283  3024               	movlw	36
  5943  0284  009E               	movwf	30	;volatile
  5944                           
  5945                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x0C;
  5946  0285  300C               	movlw	12
  5947  0286  009B               	movwf	27	;volatile
  5948  0287                     l1801:
  5949                           
  5950                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  5951  0287  019C               	clrf	28	;volatile
  5952  0288                     l1803:
  5953                           
  5954                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  5955  0288  3000               	movlw	0
  5956  0289  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  5957  028A  3000               	movlw	0
  5958  028B  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  5959  028C  3181  21C6  3182   	fcall	_EUSART_SetFramingErrorHandler
  5960  028F                     l1805:
  5961                           
  5962                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  5963  028F  3000               	movlw	0
  5964  0290  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  5965  0291  3000               	movlw	0
  5966  0292  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  5967  0293  3181  21CC  3182   	fcall	_EUSART_SetOverrunErrorHandler
  5968  0296                     l1807:
  5969                           
  5970                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  5971  0296  3000               	movlw	0
  5972  0297  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  5973  0298  3000               	movlw	0
  5974  0299  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  5975  029A  3181  21C0  3182   	fcall	_EUSART_SetErrorHandler
  5976  029D                     l1809:
  5977                           
  5978                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  5979  029D  0020               	movlb	0	; select bank0
  5980  029E  01D9               	clrf	_eusartRxLastError	;volatile
  5981  029F                     l43:
  5982  029F  0008               	return
  5983  02A0                     __end_of_EUSART_Initialize:
  5984                           
  5985                           	psect	text24
  5986  01CC                     __ptext24:	
  5987 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  5988 ;; Defined at:
  5989 ;;		line 161 in file "mcc_generated_files/eusart.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  5992 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;Total ram usage:        2 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_EUSART_Initialize
  6014 ;; This function uses a non-reentrant model
  6015 ;;
  6016                           
  6017                           
  6018                           ;psect for function _EUSART_SetOverrunErrorHandler
  6019  01CC                     _EUSART_SetOverrunErrorHandler:
  6020  01CC                     l1671:	
  6021                           ;incstack = 0
  6022                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  6023                           
  6024                           
  6025                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  6026  01CC  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  6027  01CD  0020               	movlb	0	; select bank0
  6028  01CE  00D6               	movwf	_EUSART_OverrunErrorHandler+1
  6029  01CF  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  6030  01D0  00D5               	movwf	_EUSART_OverrunErrorHandler
  6031  01D1                     l85:
  6032  01D1  0008               	return
  6033  01D2                     __end_of_EUSART_SetOverrunErrorHandler:
  6034                           
  6035                           	psect	text25
  6036  01C6                     __ptext25:	
  6037 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  6038 ;; Defined at:
  6039 ;;		line 157 in file "mcc_generated_files/eusart.c"
  6040 ;; Parameters:    Size  Location     Type
  6041 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6042 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        2 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_EUSART_Initialize
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _EUSART_SetFramingErrorHandler
  6069  01C6                     _EUSART_SetFramingErrorHandler:
  6070  01C6                     l1669:	
  6071                           ;incstack = 0
  6072                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  6073                           
  6074                           
  6075                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  6076  01C6  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  6077  01C7  0020               	movlb	0	; select bank0
  6078  01C8  00D8               	movwf	_EUSART_FramingErrorHandler+1
  6079  01C9  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  6080  01CA  00D7               	movwf	_EUSART_FramingErrorHandler
  6081  01CB                     l82:
  6082  01CB  0008               	return
  6083  01CC                     __end_of_EUSART_SetFramingErrorHandler:
  6084                           
  6085                           	psect	text26
  6086  01C0                     __ptext26:	
  6087 ;; *************** function _EUSART_SetErrorHandler *****************
  6088 ;; Defined at:
  6089 ;;		line 165 in file "mcc_generated_files/eusart.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  6092 ;;		 -> EUSART_DefaultErrorHandler(1), 
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;Total ram usage:        2 bytes
  6109 ;; Hardware stack levels used: 1
  6110 ;; This function calls:
  6111 ;;		Nothing
  6112 ;; This function is called by:
  6113 ;;		_EUSART_Initialize
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           
  6118                           ;psect for function _EUSART_SetErrorHandler
  6119  01C0                     _EUSART_SetErrorHandler:
  6120  01C0                     l1673:	
  6121                           ;incstack = 0
  6122                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  6123                           
  6124                           
  6125                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  6126  01C0  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  6127  01C1  0020               	movlb	0	; select bank0
  6128  01C2  00D4               	movwf	_EUSART_ErrorHandler+1
  6129  01C3  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  6130  01C4  00D3               	movwf	_EUSART_ErrorHandler
  6131  01C5                     l88:
  6132  01C5  0008               	return
  6133  01C6                     __end_of_EUSART_SetErrorHandler:
  6134                           
  6135                           	psect	text27
  6136  01BB                     __ptext27:	
  6137 ;; *************** function _EUSART_is_rx_ready *****************
  6138 ;; Defined at:
  6139 ;;		line 99 in file "mcc_generated_files/eusart.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      _Bool 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;Total ram usage:        0 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           
  6166                           
  6167                           ;psect for function _EUSART_is_rx_ready
  6168  01BB                     _EUSART_is_rx_ready:
  6169  01BB                     l1997:	
  6170                           ;incstack = 0
  6171                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  6172                           
  6173                           
  6174                           ;mcc_generated_files/eusart.c: 101:     return (_Bool)(PIR1bits.RCIF);
  6175  01BB  0020               	movlb	0	; select bank0
  6176  01BC  0E11               	swapf	17,w	;volatile
  6177  01BD  0C89               	rrf	9,f
  6178  01BE  3901               	andlw	1
  6179  01BF                     l51:
  6180  01BF  0008               	return
  6181  01C0                     __end_of_EUSART_is_rx_ready:
  6182                           
  6183                           	psect	text28
  6184  01FC                     __ptext28:	
  6185 ;; *************** function _EUSART_Write *****************
  6186 ;; Defined at:
  6187 ;;		line 132 in file "mcc_generated_files/eusart.c"
  6188 ;; Parameters:    Size  Location     Type
  6189 ;;  txData          1    wreg     unsigned char 
  6190 ;; Auto vars:     Size  Location     Type
  6191 ;;  txData          1    0[COMMON] unsigned char 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;                  1    wreg      void 
  6194 ;; Registers used:
  6195 ;;		wreg
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;Total ram usage:        1 bytes
  6206 ;; Hardware stack levels used: 1
  6207 ;; This function calls:
  6208 ;;		Nothing
  6209 ;; This function is called by:
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           
  6215                           ;psect for function _EUSART_Write
  6216  01FC                     _EUSART_Write:
  6217                           
  6218                           ;incstack = 0
  6219                           ; Regs used in _EUSART_Write: [wreg]
  6220                           ;EUSART_Write@txData stored from wreg
  6221  01FC  00F0               	movwf	EUSART_Write@txData
  6222  01FD                     l2013:
  6223  01FD                     l67:	
  6224                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  6225                           
  6226                           
  6227                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  6228  01FD  0020               	movlb	0	; select bank0
  6229  01FE  1E11               	btfss	17,4	;volatile
  6230  01FF  2A01               	goto	u951
  6231  0200  2A02               	goto	u950
  6232  0201                     u951:
  6233  0201  29FD               	goto	l67
  6234  0202                     u950:
  6235  0202                     l2015:
  6236                           
  6237                           ;mcc_generated_files/eusart.c: 138:     TX1REG = txData;
  6238  0202  0870               	movf	EUSART_Write@txData,w
  6239  0203  0023               	movlb	3	; select bank3
  6240  0204  009A               	movwf	26	;volatile
  6241  0205                     l70:
  6242  0205  0008               	return
  6243  0206                     __end_of_EUSART_Write:
  6244                           
  6245                           	psect	text29
  6246  025D                     __ptext29:	
  6247 ;; *************** function _EUSART_Read *****************
  6248 ;; Defined at:
  6249 ;;		line 113 in file "mcc_generated_files/eusart.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      unsigned char 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6267 ;;Total ram usage:        0 bytes
  6268 ;; Hardware stack levels used: 1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           
  6277                           ;psect for function _EUSART_Read
  6278  025D                     _EUSART_Read:
  6279  025D                     l2001:	
  6280                           ;incstack = 0
  6281                           ; Regs used in _EUSART_Read: [wreg+status,2]
  6282                           
  6283  025D                     l60:	
  6284                           ;mcc_generated_files/eusart.c: 116:     {;mcc_generated_files/eusart.c: 117:     }
  6285                           
  6286                           
  6287                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RCIF)
  6288  025D  0020               	movlb	0	; select bank0
  6289  025E  1E91               	btfss	17,5	;volatile
  6290  025F  2A61               	goto	u931
  6291  0260  2A62               	goto	u930
  6292  0261                     u931:
  6293  0261  2A5D               	goto	l60
  6294  0262                     u930:
  6295  0262                     l2003:
  6296                           
  6297                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
  6298  0262  01D9               	clrf	_eusartRxLastError	;volatile
  6299  0263                     l2005:
  6300                           
  6301                           ;mcc_generated_files/eusart.c: 121:     if(1 == RC1STAbits.OERR)
  6302  0263  0023               	movlb	3	; select bank3
  6303  0264  1C9D               	btfss	29,1	;volatile
  6304  0265  2A67               	goto	u941
  6305  0266  2A68               	goto	u940
  6306  0267                     u941:
  6307  0267  2A6A               	goto	l2009
  6308  0268                     u940:
  6309  0268                     l2007:
  6310                           
  6311                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RC1
      +                          STAbits.CREN = 0;
  6312  0268  121D               	bcf	29,4	;volatile
  6313                           
  6314                           ;mcc_generated_files/eusart.c: 126:         RC1STAbits.CREN = 1;
  6315  0269  161D               	bsf	29,4	;volatile
  6316  026A                     l2009:
  6317                           
  6318                           ;mcc_generated_files/eusart.c: 129:     return RC1REG;
  6319  026A  0819               	movf	25,w	;volatile
  6320  026B                     l64:
  6321  026B  0008               	return
  6322  026C                     __end_of_EUSART_Read:
  6323  007E                     btemp	set	126	;btemp
  6324  007E                     wtemp0	set	126
  6325                           
  6326                           	psect	config
  6327                           
  6328                           ;Config register CONFIG1 @ 0x8007
  6329                           ;	Oscillator Selection Bits
  6330                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6331                           ;	Watchdog Timer Enable
  6332                           ;	WDTE = OFF, WDT disabled
  6333                           ;	Power-up Timer Enable
  6334                           ;	PWRTE = OFF, PWRT disabled
  6335                           ;	MCLR Pin Function Select
  6336                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  6337                           ;	Flash Program Memory Code Protection
  6338                           ;	CP = OFF, Program memory code protection is disabled
  6339                           ;	Brown-out Reset Enable
  6340                           ;	BOREN = ON, Brown-out Reset enabled
  6341                           ;	Clock Out Enable
  6342                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6343                           ;	Internal/External Switchover Mode
  6344                           ;	IESO = ON, Internal/External Switchover Mode is enabled
  6345                           ;	Fail-Safe Clock Monitor Enable
  6346                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  6347  8007                     	org	32775
  6348  8007  3FE4               	dw	16356
  6349                           
  6350                           ;Config register CONFIG2 @ 0x8008
  6351                           ;	Flash Memory Self-Write Protection
  6352                           ;	WRT = OFF, Write protection off
  6353                           ;	Peripheral Pin Select one-way control
  6354                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  6355                           ;	Zero-cross detect disable
  6356                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  6357                           ;	Phase Lock Loop enable
  6358                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  6359                           ;	Stack Overflow/Underflow Reset Enable
  6360                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  6361                           ;	Brown-out Reset Voltage Selection
  6362                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  6363                           ;	Low-Power Brown Out Reset
  6364                           ;	LPBOR = OFF, Low-Power BOR is disabled
  6365                           ;	Low-Voltage Programming Enable
  6366                           ;	LVP = ON, Low-voltage programming enabled
  6367  8008                     	org	32776
  6368  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     51      58
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _displayLotteryResult->___awmod
    _displaySegments->_DELAY_milliseconds
    _displayRoll->_DELAY_milliseconds
    ___awmod->___awdiv
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_displayLotteryResult
    _displayLotteryResult->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5437
                                             49 BANK0      2     2      0
                        _EUSART_Read
                       _EUSART_Write
                 _EUSART_is_rx_ready
                  _SYSTEM_Initialize
                       _displayClear
               _displayLotteryResult
 ---------------------------------------------------------------------------------
 (1) _displayLotteryResult                                47    45      2    5054
                                              2 BANK0     47    45      2
                            ___awdiv
                            ___awmod
                        _displayRoll
                    _displaySegments
                          _selectDIG
 ---------------------------------------------------------------------------------
 (2) _selectDIG                                            2     0      2     402
                                              0 COMMON     2     0      2
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displaySegments                                      2     0      2     956
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
                       _displayEight
                        _displayFive
                        _displayFour
                        _displayNine
                         _displayOne
                       _displaySeven
                         _displaySix
                       _displayThree
                         _displayTwo
                        _displayZero
 ---------------------------------------------------------------------------------
 (3) _displayZero                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayTwo                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayThree                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySix                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displaySeven                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayOne                                           0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayNine                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFour                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayFive                                          0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayEight                                         0     0      0       0
                       _displayClear
 ---------------------------------------------------------------------------------
 (2) _displayRoll                                          2     0      2     500
                                              2 COMMON     2     0      2
                 _DELAY_milliseconds
                       _displayClear
 ---------------------------------------------------------------------------------
 (3) _displayClear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DELAY_milliseconds                                   2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _EUSART_Write
   _EUSART_is_rx_ready
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _displayClear
   _displayLotteryResult
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _displayRoll
       _DELAY_milliseconds
       _displayClear
     _displaySegments
       _DELAY_milliseconds
       _displayClear
       _displayEight
         _displayClear
       _displayFive
         _displayClear
       _displayFour
         _displayClear
       _displayNine
         _displayClear
       _displayOne
         _displayClear
       _displaySeven
         _displayClear
       _displaySix
         _displayClear
       _displayThree
         _displayClear
       _displayTwo
         _displayClear
       _displayZero
         _displayClear
     _selectDIG
       _displayClear

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     33      3A       5       72.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      48      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      48      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 20 05:39:19 2024

                                 ?_displayFive 0070                                   ?_displayFour 0070  
                                 ?_displayNine 0070                                   ?_displayRoll 0072  
                                 ?_displayZero 0070                                             l51 01BF  
                                           l43 029F                                             l60 025D  
                                           l70 0205                                             l64 026B  
                                           l82 01CB                                             l67 01FD  
                                           l85 01D1                                             l88 01C5  
                                 ___awdiv@sign 0076                        __end_of_displaySegments 0422  
                                ?_displayClear 0070                                  ?_displayEight 0070  
                                ?_displaySeven 0070                                  ?_displayThree 0070  
                                          l200 01E8                                            l202 01E9  
                                          l300 01FB                                            l400 030C  
                                          l224 01D8                                            l217 0243  
                                          l330 0219                                            l250 0223  
                                          l139 02F5                                            l163 025C  
                                          l403 030E                                            l405 0310  
                                          l317 024F                                            l261 01F2  
                                          l237 022D                                            l166 01E0  
                                          l190 01E3                                            l192 01E4  
                                          l408 0332                                            l169 01BA  
                                          l194 01E5                                            l274 020F  
                                          l346 0421                                            l363 02AB  
                                          l196 01E6                                            l188 01E1  
                                          l372 02C4                                            l198 01E7  
                                          l390 0304                                            l366 02AD  
                                          l470 0336                                            l383 02FE  
                                          l359 02A9                                            l393 0306  
                                          l385 0300                                            l377 02FA  
                                          l289 0238                                            l369 02AF  
                                          l465 07FA                                            l731 03C8  
                                          l395 0308                                            l379 02FC  
                                          l388 0302                                            l718 0480  
                                          l398 030A                                            l488 027D  
                                          u800 0462                                            u801 0461  
                                          u730 027D                                            u731 027C  
                                          u820 0472                                            u740 0427  
                                          u821 0471                                            u805 045E  
                                          u741 0426                                            u830 0477  
                                          u750 0432                                            u910 03BA  
                                          u831 0476                                            u815 0468  
                                          u751 0431                                            u911 03B9  
                                          u760 0443                                            u920 03BF  
                                          u840 037B                                            u761 0442  
                                          u921 03BE                                            u905 03B0  
                                          u841 037A                                            u930 0262  
                                          u850 0386                                            u931 0261  
                                          u851 0385                                            u940 0268  
                                          u780 0453                                            u860 0391  
                                          u941 0267                                            u781 0452  
                                          u861 0390                                            u950 0202  
                                          u951 0201                                            u775 0447  
                                          u880 03A1                                            u960 0509  
                                          u881 03A0                                            u961 0508  
                                          u890 03AB                                            u970 051B  
                                          u795 0454                                            u891 03AA  
                                          u875 0395                                            u971 051A  
                                          u980 052D                                            u981 052C  
                                          u965 0505                                            u990 053F  
                                          u895 03A7                                            u991 053E  
                                          u975 0517                                            u985 0529  
                                          u995 053B                     __end_of_DELAY_milliseconds 027E  
               ?_EUSART_SetFramingErrorHandler 0070                         ??_displayLotteryResult 0024  
                                 ___awmod@sign 0021                                            wreg 0009  
                                 ?_EUSART_Read 0070                                           l2001 025D  
                                         l2003 0262                                           l2005 0263  
                                         l2013 01FD                                           l2101 0611  
                                         l2021 04D8                                           l2007 0268  
                                         l2015 0202                                           l2111 0635  
                                         l2103 0614                                           l2031 04DF  
                                         l2009 026A                                           l2017 0250  
                                         l2201 07C7                                           l2121 065B  
                                         l2113 063D                                           l2041 04E7  
                                         l2203 07CF                                           l2123 0662  
                                         l2115 0644                                           l2107 0622  
                                         l2131 0698                                           l2051 052D  
                                         l2043 04F7                                           l2027 04DA  
                                         l2019 0481                                           l2211 0333  
                                         l2205 07D6                                           l2125 0667  
                                         l2117 064C                                           l2133 06AA  
                                         l2053 053F                                           l2045 04FC  
                                         l2037 04E2                                           l2221 0355  
                                         l2213 033E                                           l2207 07DB  
                                         l2143 06CE                                           l2135 06AD  
                                         l2119 0653                                           l2127 0674  
                                         l2063 0563                                           l2055 0542  
                                         l2047 0509                                           l2223 035C  
                                         l2215 0345                                           l2209 07E8  
                                         l2161 0710                                           l2153 06F2  
                                         l2145 06D1                                           l2129 0686  
                                         l2081 05A5                                           l2073 0587  
                                         l2065 0566                                           l2049 051B  
                                         l2225 0361                                           l2217 034B  
                                         l2171 0733                                           l2163 0718  
                                         l2155 06FA                                           l2139 06BB  
                                         l2083 05AA                                           l2075 058F  
                                         l2091 05ED                                           l2059 0550  
                                         l2227 0367                                           l2219 034F  
                                         l1701 022A                                           l2181 0779  
                                         l2165 071F                                           l2157 0701  
                                         l2173 0740                                           l2149 06DF  
                                         l2093 05F0                                           l2077 0596  
                                         l2085 05B7                                           l2069 0574  
                                         l2229 036E                                           l1711 021F  
                                         l1703 022B                                           l2191 07A2  
                                         l2167 0727                                           l2159 0709  
                                         l2175 0752                                           l2079 059E  
                                         l2087 05C9                                           l1801 0287  
                                         l1721 01ED                                           l1713 0220  
                                         l1705 022C                                           l2193 07A9  
                                         l2185 0787                                           l2169 072E  
                                         l2177 0764                                           l2097 05FE  
                                         l2089 05DB                                           l1803 0288  
                                         l1811 02C5                                           l1731 0209  
                                         l1723 01EF                                           l1715 0221  
                                         l1707 021A                                           l2195 07B1  
                                         l2179 0776                                           l1805 028F  
                                         l1821 02D3                                           l1813 02C9  
                                         l1733 020B                                           l1725 01F0  
                                         l1741 022E                                           l1717 0222  
                                         l1709 021D                                           l2293 02B6  
                                         l2197 07B8                                           l2189 079A  
                                         l1671 01CC                                           l1807 0296  
                                         l1831 02E6                                           l1823 02D5  
                                         l1815 02CC                                           l1903 02F6  
                                         l1735 020C                                           l1727 01F1  
                                         l1719 01EA                                           l1751 0236  
                                         l1743 0231                                           l2295 03FA  
                                         l2199 07C0                                           l1673 01C0  
                                         l1809 029D                                           l1841 02F2  
                                         l1833 02E8                                           l1825 02DB  
                                         l1817 02CE                                           l1921 042C  
                                         l2297 0317                                           l1737 020D  
                                         l1729 0206                                           l1761 01F9  
                                         l1753 0237                                           l1745 0233  
                                         l1681 023F                                           l1843 01D9  
                                         l1835 02EB                                           l1827 02E1  
                                         l1819 02D0                                           l1851 01B7  
                                         l1931 043D                                           l1923 042E  
                                         l1915 0422                                           l1907 0312  
                                         l1771 024A                                           l1739 020E  
                                         l1691 01D5                                           l1763 01FA  
                                         l1755 01F3                                           l1747 0234  
                                         l1683 0240                                           l1675 0239  
                                         l1669 01C6                                           l1845 01DC  
                                         l1837 02ED                                           l1829 02E4  
                                         l1941 0453                                           l1933 0443  
                                         l1925 0432                                           l1917 0423  
                                         l1909 032B                                           l1773 024B  
                                         l1765 0244                                           l1781 0210  
                                         l1693 01D7                                           l1757 01F6  
                                         l1749 0235                                           l1685 0241  
                                         l1677 023C                                           l1861 03D9  
                                         l1853 03C9                                           l1847 01DD  
                                         l1839 02EF                                           l1943 0462  
                                         l1935 0446                                           l1951 0472  
                                         l1927 0437                                           l1919 0427  
                                         l1775 024C                                           l1767 0247  
                                         l1791 0218                                           l1783 0213  
                                         l1759 01F8                                           l1695 0224  
                                         l1687 0242                                           l1679 023E  
                                         l1871 03ED                                           l1863 03DD  
                                         l1855 03CD                                           l1849 01DE  
                                         l1953 0477                                           l1945 0466  
                                         l1937 044B                                           l1929 043B  
                                         l1961 0377                                           l1793 026C  
                                         l1777 024D                                           l1769 0249  
                                         l1785 0215                                           l1689 01D2  
                                         l1697 0227                                           l1873 03F1  
                                         l1865 03E1                                           l1857 03D1  
                                         l1955 047C                                           l1947 0467  
                                         l1939 044F                                           l1971 038B  
                                         l1963 037B                                           l1795 026D  
                                         l1779 024E                                           l1787 0216  
                                         l1699 0229                                           l1867 03E5  
                                         l1859 03D5                                           l1891 02A6  
                                         l1949 046C                                           l1981 03A1  
                                         l1973 0391                                           l1965 0380  
                                         l1797 0271                                           l1789 0217  
                                         l1869 03E9                                           l1877 03F5  
                                         l1893 02A7                                           l1885 02A0  
                                         l1799 027E                                           l1991 03BF  
                                         l1983 03AB                                           l1975 0394  
                                         l1967 0382                                           l1959 0375  
                                         l1879 041A                                           l1887 02A3  
                                         l1993 03C4                                           l1985 03AF  
                                         l1977 0399                                           l1969 0386  
                                         l1897 02B1                                           l1889 02A5  
                                         l1987 03B4                                           l1979 039D  
                                         l1997 01BB                                           l1989 03BA  
                                         u1000 054F                                           u1001 054E  
                                         u1010 0562                                           u1011 0561  
                                         u1100 0610                                           u1020 0573  
                                         u1101 060F                                           u1021 0572  
                                         u1005 054B                                           u1110 0621  
                                         u1030 0586                                           u1111 0620  
                                         u1031 0585                                           u1015 055E  
                                         u1200 06CD                                           u1120 0634  
                                         u1040 0596                                           u1201 06CC  
                                         u1121 0633                                           u1105 060C  
                                         u1041 0595                                           u1025 056F  
                                         u1210 06DE                                           u1130 0644  
                                         u1050 05B7                                           u1211 06DD  
                                         u1131 0643                                           u1115 061D  
                                         u1051 05B6                                           u1035 0582  
                                         u1300 0786                                           u1220 06F1  
                                         u1140 0653                                           u1060 05C9  
                                         u1301 0785                                           u1221 06F0  
                                         u1205 06C9                                           u1141 0652  
                                         u1125 0630                                           u1061 05C8  
                                         u1310 0799                                           u1230 0701  
                                         u1150 0674                                           u1070 05DB  
                                         u1311 0798                                           u1231 0700  
                                         u1215 06DA                                           u1151 0673  
                                         u1071 05DA                                           u1055 05B3  
                                         u1320 07A9                                           u1240 0710  
                                         u1160 0686                                           u1080 05ED  
                                         u1400 0367                                           u1321 07A8  
                                         u1305 0782                                           u1241 070F  
                                         u1225 06ED                                           u1161 0685  
                                         u1081 05EC                                           u1065 05C5  
                                         u1401 0366                                           u1330 07B8  
                                         u1250 071F                                           u1170 0698  
                                         u1090 05FD                                           u1331 07B7  
                                         u1315 0795                                           u1251 071E  
                                         u1171 0697                                           u1155 0670  
                                         u1091 05FC                                           u1075 05D7  
                                         u1340 07C7                                           u1260 0740  
                                         u1180 06AA                                           u1341 07C6  
                                         u1261 073F                                           u1181 06A9  
                                         u1165 0682                                           u1085 05E9  
                                         _LATA 010C                                           u1350 07E8  
                                         u1270 0752                                           u1190 06BA  
                                         _LATB 010D                                           u1351 07E7  
                                         u1271 0751                                           u1191 06B9  
                                         u1175 0694                                           u1095 05F9  
                                         _LATC 010E                                           u1360 07FA  
                                         u1280 0764                                           u1417 026E  
                                         u1361 07F9                                           u1281 0763  
                                         u1265 073C                                           u1185 06A6  
                                         u1290 0776                                           u1370 033E  
                                         u1355 07E4                                           u1291 0775  
                                         u1275 074E                                           u1195 06B6  
                                         u1371 033D                                           u1380 034B  
                                         u1365 07F6                                           u1285 0760  
                                         u1381 034A                                           u1390 0355  
                                         u1295 0772                                           u1391 0354  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                                           _main 0333  
                                         btemp 007E                                           start 0002  
                               ??_displayClear 0070                                 ??_displayEight 0070  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0008  
                               ??_displaySeven 0070                                 ??_displayThree 0070  
                __end_of_OSCILLATOR_Initialize 01E1                                          ?_main 0070  
                              __end_of___awdiv 0481                                __end_of___awmod 03C9  
                              ___awdiv@divisor 0070                                ___awdiv@counter 0075  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TRISC 008E                                          _RXPPS 0E24  
                               _WDT_Initialize 01B7                                          status 0003  
                                        wtemp0 007E                                __initialization 07FB  
                                 __end_of_main 0375                                 ??_EUSART_Write 0070  
                             ?_displaySegments 0072                                         ??_main 0051  
                       __end_of_WDT_Initialize 01BB              _EUSART_DefaultFramingErrorHandler 0000  
                   _EUSART_OverrunErrorHandler 0055                               ___awdiv@dividend 0072  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _ANSELC 018E                     __end_of_EUSART_is_rx_ready 01C0  
                                       _BORCON 021D                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB4PPS 0E9C  
                                       _ODCONA 028C                                         _ODCONB 028D  
                                       _ODCONC 028E                                         _INLVLA 038C  
                                       _INLVLB 038D                                         _INLVLC 038E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _WDTCON 0097                                         _TX1STA 019E  
                                    ??___awdiv 0074                                      ??___awmod 007D  
                             ___awdiv@quotient 0077                                ___awmod@divisor 0079  
                         __size_of_displayFive 000A                                ___awmod@counter 0020  
                         __size_of_displayFour 0009                           __size_of_displayNine 000A  
                         __size_of_displayRoll 003D                           __size_of_displayZero 000B  
                              ?_WDT_Initialize 0070                           __end_of_displayClear 01EA  
                         __size_of_EUSART_Read 000F                           __end_of_displayEight 0250  
                            _SYSTEM_Initialize 0250                        __end_of__initialization 07FD  
                         __end_of_displaySeven 01FC                           __end_of_displayThree 0224  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                          ??_SYSTEM_Initialize 0072                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0072                      __end_of_SYSTEM_Initialize 025D  
                                   __pbssBANK0 0059                           __end_of_EUSART_Write 0206  
                           _DELAY_milliseconds 026C                            ?_DELAY_milliseconds 0070  
                                   __pmaintext 0333                             __size_of_selectDIG 0025  
                    displayLotteryResult@i_403 0041                      displayLotteryResult@i_412 0045  
                    displayLotteryResult@i_408 0043                      displayLotteryResult@j_410 004B  
                    displayLotteryResult@j_405 0049                      displayLotteryResult@j_414 004D  
                    displayLotteryResult@j_416 004F                      displayLotteryResult@x_402 002D  
                    displayLotteryResult@x_411 0035                      displayLotteryResult@x_407 0031  
                    displayLotteryResult@dig_1 0047                      displayLotteryResult@dig_2 003B  
                    displayLotteryResult@dig_3 0027                      displayLotteryResult@dig_4 0025  
             displayLotteryResult@wait_cnt_404 002F               displayLotteryResult@wait_cnt_413 0037  
             displayLotteryResult@wait_cnt_415 0039               displayLotteryResult@wait_cnt_409 0033  
                         ??_DELAY_milliseconds 0072                                        _OSCSTAT 009A  
                                      _OSCTUNE 0098                  __size_of_displayLotteryResult 037A  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                                     _displayOne 01D2  
                                   _displaySix 022E                                     _displayTwo 0224  
                     ??_EUSART_SetErrorHandler 0072                                        ___awdiv 0422  
                                      ___awmod 0375                                        __ptext1 0481  
                                      __ptext2 02A0                                        __ptext3 03C9  
                                      __ptext4 0239                                        __ptext5 0224  
                                      __ptext6 021A                                        __ptext7 022E  
                                      __ptext8 01F3                                        __ptext9 01D2  
                        _OSCILLATOR_Initialize 01D9                               ___awmod@dividend 007B  
                     ??_PIN_MANAGER_Initialize 0070                          __size_of_displayClear 0009  
                        __size_of_displayEight 000C                          __size_of_displaySeven 0009  
                        __size_of_displayThree 000A                     __size_of_SYSTEM_Initialize 000D  
                               displayRoll@cnt 0072                           end_of_initialization 07FD  
                            __end_of_selectDIG 02C5          __end_of_EUSART_SetOverrunErrorHandler 01D2  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 01CC  
                            _EUSART_Initialize 027E                             ?_EUSART_Initialize 0070  
                           _EUSART_is_rx_ready 01BB                            ??_EUSART_Initialize 0072  
                                 _displayClear 01E1                               ??_WDT_Initialize 0070  
                                 _displayEight 0244                          displayLotteryResult@i 003D  
                        displayLotteryResult@j 003F                          displayLotteryResult@x 0029  
                          ?_EUSART_is_rx_ready 0070                                   _displaySeven 01F3  
                                 _displayThree 021A                          __size_of_EUSART_Write 000A  
                     __size_of_displaySegments 0059                                    ?_displayOne 0070  
                                  ?_displaySix 0070                                    ?_displayTwo 0070  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 02A0  
                         ??_EUSART_is_rx_ready 0070                                  ??_displayFive 0070  
                                ??_displayFour 0070                                  ??_displayNine 0070  
                                ??_displayRoll 0074                                  ??_displayZero 0070  
                   _EUSART_DefaultErrorHandler 0000                                   _EUSART_Write 01FC  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 07FB  
              __size_of_PIN_MANAGER_Initialize 0031                                  ??_EUSART_Read 0070  
               ?_EUSART_SetOverrunErrorHandler 0070                     _EUSART_FramingErrorHandler 0057  
                       _EUSART_SetErrorHandler 01C0                            __size_of_displayOne 0007  
                          __size_of_displaySix 000B                            __size_of_displayTwo 000A  
                          __end_of_displayFive 0210                            __end_of_displayFour 01F3  
                          __end_of_displayNine 021A                            __end_of_displayRoll 0333  
                          __end_of_displayZero 0244                                      ___latbits 0002  
                                __pcstackBANK0 0020                     __size_of_EUSART_Initialize 0022  
                            ??_displaySegments 0074                            __end_of_EUSART_Read 026C  
                                    __pnvBANK0 0053                         _PIN_MANAGER_Initialize 02C5  
                 __end_of_displayLotteryResult 07FB                                       ?___awdiv 0070  
                                     ?___awmod 0079                                       _BAUD1CON 019F  
                  __size_of_DELAY_milliseconds 0012                                   selectDIG@dig 0070  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0070  
                                     _LATBbits 010D                                       _LATCbits 010E  
                                    _selectDIG 02A0                              _eusartRxLastError 0059  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0072  
               DELAY_milliseconds@milliseconds 0070              _EUSART_DefaultOverrunErrorHandler 0000  
                                  _displayFive 0206                                    _displayFour 01EA  
                                  _displayNine 0210                                    _displayRoll 02F6  
                                  _displayZero 0239                                   ??_displayOne 0070  
                                 ??_displaySix 0070                                   ??_displayTwo 0070  
                                  _EUSART_Read 025D                   displayLotteryResult@wait_cnt 002B  
                                   ?_selectDIG 0070                        ??_OSCILLATOR_Initialize 0070  
                          _EUSART_ErrorHandler 0053                               __size_of___awdiv 005F  
                             __size_of___awmod 0054                             __end_of_displayOne 01D9  
                           __end_of_displaySix 0239                             __end_of_displayTwo 022E  
                         _displayLotteryResult 0481                                       __ptext10 0210  
                                     __ptext11 01EA                                       __ptext20 01B7  
                                     __ptext12 0206                                       __ptext21 02C5  
                                     __ptext13 0244                                       __ptext22 01D9  
                                     __ptext14 02F6                                       __ptext23 027E  
                                     __ptext15 01E1                                       __ptext24 01CC  
                                     __ptext16 026C                                       __ptext25 01C6  
                                     __ptext17 0375                                       __ptext26 01C0  
                                     __ptext18 0422                                       __ptext27 01BB  
                                     __ptext19 0250                                       __ptext28 01FC  
                                     __ptext29 025D                    __size_of_EUSART_is_rx_ready 0005  
                                __size_of_main 0042                        ?_EUSART_SetErrorHandler 0070  
                                   _RC1STAbits 019D  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     main@data 0052          __end_of_EUSART_SetFramingErrorHandler 01CC  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 01C6  
                              _displaySegments 03C9                          ?_displayLotteryResult 0022  
                      __size_of_WDT_Initialize 0004                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 01C6                                    ??_selectDIG 0072  
                      displayLotteryResult@val 0022  EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0070  
               __end_of_PIN_MANAGER_Initialize 02F6                             displaySegments@num 0072  
